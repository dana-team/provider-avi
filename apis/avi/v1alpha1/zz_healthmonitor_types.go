/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AuthenticationInitParameters struct {
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	UsernameSecretRef v1.SecretKeySelector `json:"usernameSecretRef" tf:"-"`
}

type AuthenticationObservation struct {
}

type AuthenticationParameters struct {

	// +kubebuilder:validation:Optional
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	UsernameSecretRef v1.SecretKeySelector `json:"usernameSecretRef" tf:"-"`
}

type DNSMonitorInitParameters struct {

	// Type of the health monitor. Enum options - HEALTH_MONITOR_PING, HEALTH_MONITOR_TCP, HEALTH_MONITOR_HTTP, HEALTH_MONITOR_HTTPS, HEALTH_MONITOR_EXTERNAL, HEALTH_MONITOR_UDP, HEALTH_MONITOR_DNS, HEALTH_MONITOR_GSLB, HEALTH_MONITOR_SIP, HEALTH_MONITOR_RADIUS, HEALTH_MONITOR_SMTP, HEALTH_MONITOR_SMTPS, HEALTH_MONITOR_POP3, HEALTH_MONITOR_POP3S, HEALTH_MONITOR_IMAP, HEALTH_MONITOR_IMAPS, HEALTH_MONITOR_FTP, HEALTH_MONITOR_FTPS, HEALTH_MONITOR_LDAP, HEALTH_MONITOR_LDAPS... Allowed in enterprise edition with any value, essentials edition(allowed values- health_monitor_ping,health_monitor_tcp,health_monitor_udp), basic edition(allowed values- health_monitor_ping,health_monitor_tcp,health_monitor_udp,health_monitor_http,health_monitor_https), enterprise with cloud services edition.
	Qtype *string `json:"qtype,omitempty" tf:"qtype,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	QueryName *string `json:"queryName,omitempty" tf:"query_name,omitempty"`

	Rcode *string `json:"rcode,omitempty" tf:"rcode,omitempty"`

	// Type of the health monitor. Enum options - HEALTH_MONITOR_PING, HEALTH_MONITOR_TCP, HEALTH_MONITOR_HTTP, HEALTH_MONITOR_HTTPS, HEALTH_MONITOR_EXTERNAL, HEALTH_MONITOR_UDP, HEALTH_MONITOR_DNS, HEALTH_MONITOR_GSLB, HEALTH_MONITOR_SIP, HEALTH_MONITOR_RADIUS, HEALTH_MONITOR_SMTP, HEALTH_MONITOR_SMTPS, HEALTH_MONITOR_POP3, HEALTH_MONITOR_POP3S, HEALTH_MONITOR_IMAP, HEALTH_MONITOR_IMAPS, HEALTH_MONITOR_FTP, HEALTH_MONITOR_FTPS, HEALTH_MONITOR_LDAP, HEALTH_MONITOR_LDAPS... Allowed in enterprise edition with any value, essentials edition(allowed values- health_monitor_ping,health_monitor_tcp,health_monitor_udp), basic edition(allowed values- health_monitor_ping,health_monitor_tcp,health_monitor_udp,health_monitor_http,health_monitor_https), enterprise with cloud services edition.
	RecordType *string `json:"recordType,omitempty" tf:"record_type,omitempty"`

	ResponseString *string `json:"responseString,omitempty" tf:"response_string,omitempty"`
}

type DNSMonitorObservation struct {

	// Type of the health monitor. Enum options - HEALTH_MONITOR_PING, HEALTH_MONITOR_TCP, HEALTH_MONITOR_HTTP, HEALTH_MONITOR_HTTPS, HEALTH_MONITOR_EXTERNAL, HEALTH_MONITOR_UDP, HEALTH_MONITOR_DNS, HEALTH_MONITOR_GSLB, HEALTH_MONITOR_SIP, HEALTH_MONITOR_RADIUS, HEALTH_MONITOR_SMTP, HEALTH_MONITOR_SMTPS, HEALTH_MONITOR_POP3, HEALTH_MONITOR_POP3S, HEALTH_MONITOR_IMAP, HEALTH_MONITOR_IMAPS, HEALTH_MONITOR_FTP, HEALTH_MONITOR_FTPS, HEALTH_MONITOR_LDAP, HEALTH_MONITOR_LDAPS... Allowed in enterprise edition with any value, essentials edition(allowed values- health_monitor_ping,health_monitor_tcp,health_monitor_udp), basic edition(allowed values- health_monitor_ping,health_monitor_tcp,health_monitor_udp,health_monitor_http,health_monitor_https), enterprise with cloud services edition.
	Qtype *string `json:"qtype,omitempty" tf:"qtype,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	QueryName *string `json:"queryName,omitempty" tf:"query_name,omitempty"`

	Rcode *string `json:"rcode,omitempty" tf:"rcode,omitempty"`

	// Type of the health monitor. Enum options - HEALTH_MONITOR_PING, HEALTH_MONITOR_TCP, HEALTH_MONITOR_HTTP, HEALTH_MONITOR_HTTPS, HEALTH_MONITOR_EXTERNAL, HEALTH_MONITOR_UDP, HEALTH_MONITOR_DNS, HEALTH_MONITOR_GSLB, HEALTH_MONITOR_SIP, HEALTH_MONITOR_RADIUS, HEALTH_MONITOR_SMTP, HEALTH_MONITOR_SMTPS, HEALTH_MONITOR_POP3, HEALTH_MONITOR_POP3S, HEALTH_MONITOR_IMAP, HEALTH_MONITOR_IMAPS, HEALTH_MONITOR_FTP, HEALTH_MONITOR_FTPS, HEALTH_MONITOR_LDAP, HEALTH_MONITOR_LDAPS... Allowed in enterprise edition with any value, essentials edition(allowed values- health_monitor_ping,health_monitor_tcp,health_monitor_udp), basic edition(allowed values- health_monitor_ping,health_monitor_tcp,health_monitor_udp,health_monitor_http,health_monitor_https), enterprise with cloud services edition.
	RecordType *string `json:"recordType,omitempty" tf:"record_type,omitempty"`

	ResponseString *string `json:"responseString,omitempty" tf:"response_string,omitempty"`
}

type DNSMonitorParameters struct {

	// Type of the health monitor. Enum options - HEALTH_MONITOR_PING, HEALTH_MONITOR_TCP, HEALTH_MONITOR_HTTP, HEALTH_MONITOR_HTTPS, HEALTH_MONITOR_EXTERNAL, HEALTH_MONITOR_UDP, HEALTH_MONITOR_DNS, HEALTH_MONITOR_GSLB, HEALTH_MONITOR_SIP, HEALTH_MONITOR_RADIUS, HEALTH_MONITOR_SMTP, HEALTH_MONITOR_SMTPS, HEALTH_MONITOR_POP3, HEALTH_MONITOR_POP3S, HEALTH_MONITOR_IMAP, HEALTH_MONITOR_IMAPS, HEALTH_MONITOR_FTP, HEALTH_MONITOR_FTPS, HEALTH_MONITOR_LDAP, HEALTH_MONITOR_LDAPS... Allowed in enterprise edition with any value, essentials edition(allowed values- health_monitor_ping,health_monitor_tcp,health_monitor_udp), basic edition(allowed values- health_monitor_ping,health_monitor_tcp,health_monitor_udp,health_monitor_http,health_monitor_https), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Qtype *string `json:"qtype,omitempty" tf:"qtype,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	QueryName *string `json:"queryName" tf:"query_name,omitempty"`

	// +kubebuilder:validation:Optional
	Rcode *string `json:"rcode,omitempty" tf:"rcode,omitempty"`

	// Type of the health monitor. Enum options - HEALTH_MONITOR_PING, HEALTH_MONITOR_TCP, HEALTH_MONITOR_HTTP, HEALTH_MONITOR_HTTPS, HEALTH_MONITOR_EXTERNAL, HEALTH_MONITOR_UDP, HEALTH_MONITOR_DNS, HEALTH_MONITOR_GSLB, HEALTH_MONITOR_SIP, HEALTH_MONITOR_RADIUS, HEALTH_MONITOR_SMTP, HEALTH_MONITOR_SMTPS, HEALTH_MONITOR_POP3, HEALTH_MONITOR_POP3S, HEALTH_MONITOR_IMAP, HEALTH_MONITOR_IMAPS, HEALTH_MONITOR_FTP, HEALTH_MONITOR_FTPS, HEALTH_MONITOR_LDAP, HEALTH_MONITOR_LDAPS... Allowed in enterprise edition with any value, essentials edition(allowed values- health_monitor_ping,health_monitor_tcp,health_monitor_udp), basic edition(allowed values- health_monitor_ping,health_monitor_tcp,health_monitor_udp,health_monitor_http,health_monitor_https), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	RecordType *string `json:"recordType,omitempty" tf:"record_type,omitempty"`

	// +kubebuilder:validation:Optional
	ResponseString *string `json:"responseString,omitempty" tf:"response_string,omitempty"`
}

type ExternalMonitorInitParameters struct {
	CommandCode *string `json:"commandCode,omitempty" tf:"command_code,omitempty"`

	CommandParameters *string `json:"commandParameters,omitempty" tf:"command_parameters,omitempty"`

	CommandPath *string `json:"commandPath,omitempty" tf:"command_path,omitempty"`

	CommandVariables *string `json:"commandVariables,omitempty" tf:"command_variables,omitempty"`
}

type ExternalMonitorObservation struct {
	CommandCode *string `json:"commandCode,omitempty" tf:"command_code,omitempty"`

	CommandParameters *string `json:"commandParameters,omitempty" tf:"command_parameters,omitempty"`

	CommandPath *string `json:"commandPath,omitempty" tf:"command_path,omitempty"`

	CommandVariables *string `json:"commandVariables,omitempty" tf:"command_variables,omitempty"`
}

type ExternalMonitorParameters struct {

	// +kubebuilder:validation:Optional
	CommandCode *string `json:"commandCode" tf:"command_code,omitempty"`

	// +kubebuilder:validation:Optional
	CommandParameters *string `json:"commandParameters,omitempty" tf:"command_parameters,omitempty"`

	// +kubebuilder:validation:Optional
	CommandPath *string `json:"commandPath,omitempty" tf:"command_path,omitempty"`

	// +kubebuilder:validation:Optional
	CommandVariables *string `json:"commandVariables,omitempty" tf:"command_variables,omitempty"`
}

type FtpMonitorInitParameters struct {

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Filename *string `json:"filename,omitempty" tf:"filename,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	SSLAttributes []SSLAttributesInitParameters `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`
}

type FtpMonitorObservation struct {

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Filename *string `json:"filename,omitempty" tf:"filename,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	SSLAttributes []SSLAttributesObservation `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`
}

type FtpMonitorParameters struct {

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Filename *string `json:"filename" tf:"filename,omitempty"`

	// +kubebuilder:validation:Optional
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// +kubebuilder:validation:Optional
	SSLAttributes []SSLAttributesParameters `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`
}

type FtpsMonitorInitParameters struct {

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Filename *string `json:"filename,omitempty" tf:"filename,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	SSLAttributes []FtpsMonitorSSLAttributesInitParameters `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`
}

type FtpsMonitorObservation struct {

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Filename *string `json:"filename,omitempty" tf:"filename,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	SSLAttributes []FtpsMonitorSSLAttributesObservation `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`
}

type FtpsMonitorParameters struct {

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Filename *string `json:"filename" tf:"filename,omitempty"`

	// +kubebuilder:validation:Optional
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// +kubebuilder:validation:Optional
	SSLAttributes []FtpsMonitorSSLAttributesParameters `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`
}

type FtpsMonitorSSLAttributesInitParameters struct {
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	SSLProfileRef *string `json:"sslProfileRef,omitempty" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type FtpsMonitorSSLAttributesObservation struct {
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	SSLProfileRef *string `json:"sslProfileRef,omitempty" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type FtpsMonitorSSLAttributesParameters struct {

	// +kubebuilder:validation:Optional
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SSLProfileRef *string `json:"sslProfileRef" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type HTTPMonitorInitParameters struct {

	// Type of the health monitor. Enum options - HEALTH_MONITOR_PING, HEALTH_MONITOR_TCP, HEALTH_MONITOR_HTTP, HEALTH_MONITOR_HTTPS, HEALTH_MONITOR_EXTERNAL, HEALTH_MONITOR_UDP, HEALTH_MONITOR_DNS, HEALTH_MONITOR_GSLB, HEALTH_MONITOR_SIP, HEALTH_MONITOR_RADIUS, HEALTH_MONITOR_SMTP, HEALTH_MONITOR_SMTPS, HEALTH_MONITOR_POP3, HEALTH_MONITOR_POP3S, HEALTH_MONITOR_IMAP, HEALTH_MONITOR_IMAPS, HEALTH_MONITOR_FTP, HEALTH_MONITOR_FTPS, HEALTH_MONITOR_LDAP, HEALTH_MONITOR_LDAPS... Allowed in enterprise edition with any value, essentials edition(allowed values- health_monitor_ping,health_monitor_tcp,health_monitor_udp), basic edition(allowed values- health_monitor_ping,health_monitor_tcp,health_monitor_udp,health_monitor_http,health_monitor_https), enterprise with cloud services edition.
	AuthType *string `json:"authType,omitempty" tf:"auth_type,omitempty"`

	ExactHTTPRequest *string `json:"exactHttpRequest,omitempty" tf:"exact_http_request,omitempty"`

	HTTPRequest *string `json:"httpRequest,omitempty" tf:"http_request,omitempty"`

	HTTPRequestBody *string `json:"httpRequestBody,omitempty" tf:"http_request_body,omitempty"`

	HTTPResponse *string `json:"httpResponse,omitempty" tf:"http_response,omitempty"`

	HTTPResponseCode []*string `json:"httpResponseCode,omitempty" tf:"http_response_code,omitempty"`

	MaintenanceCode []*int64 `json:"maintenanceCode,omitempty" tf:"maintenance_code,omitempty"`

	MaintenanceResponse *string `json:"maintenanceResponse,omitempty" tf:"maintenance_response,omitempty"`

	ResponseSize *string `json:"responseSize,omitempty" tf:"response_size,omitempty"`

	SSLAttributes []HTTPMonitorSSLAttributesInitParameters `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`
}

type HTTPMonitorObservation struct {

	// Type of the health monitor. Enum options - HEALTH_MONITOR_PING, HEALTH_MONITOR_TCP, HEALTH_MONITOR_HTTP, HEALTH_MONITOR_HTTPS, HEALTH_MONITOR_EXTERNAL, HEALTH_MONITOR_UDP, HEALTH_MONITOR_DNS, HEALTH_MONITOR_GSLB, HEALTH_MONITOR_SIP, HEALTH_MONITOR_RADIUS, HEALTH_MONITOR_SMTP, HEALTH_MONITOR_SMTPS, HEALTH_MONITOR_POP3, HEALTH_MONITOR_POP3S, HEALTH_MONITOR_IMAP, HEALTH_MONITOR_IMAPS, HEALTH_MONITOR_FTP, HEALTH_MONITOR_FTPS, HEALTH_MONITOR_LDAP, HEALTH_MONITOR_LDAPS... Allowed in enterprise edition with any value, essentials edition(allowed values- health_monitor_ping,health_monitor_tcp,health_monitor_udp), basic edition(allowed values- health_monitor_ping,health_monitor_tcp,health_monitor_udp,health_monitor_http,health_monitor_https), enterprise with cloud services edition.
	AuthType *string `json:"authType,omitempty" tf:"auth_type,omitempty"`

	ExactHTTPRequest *string `json:"exactHttpRequest,omitempty" tf:"exact_http_request,omitempty"`

	HTTPRequest *string `json:"httpRequest,omitempty" tf:"http_request,omitempty"`

	HTTPRequestBody *string `json:"httpRequestBody,omitempty" tf:"http_request_body,omitempty"`

	HTTPResponse *string `json:"httpResponse,omitempty" tf:"http_response,omitempty"`

	HTTPResponseCode []*string `json:"httpResponseCode,omitempty" tf:"http_response_code,omitempty"`

	MaintenanceCode []*int64 `json:"maintenanceCode,omitempty" tf:"maintenance_code,omitempty"`

	MaintenanceResponse *string `json:"maintenanceResponse,omitempty" tf:"maintenance_response,omitempty"`

	ResponseSize *string `json:"responseSize,omitempty" tf:"response_size,omitempty"`

	SSLAttributes []HTTPMonitorSSLAttributesObservation `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`
}

type HTTPMonitorParameters struct {

	// Type of the health monitor. Enum options - HEALTH_MONITOR_PING, HEALTH_MONITOR_TCP, HEALTH_MONITOR_HTTP, HEALTH_MONITOR_HTTPS, HEALTH_MONITOR_EXTERNAL, HEALTH_MONITOR_UDP, HEALTH_MONITOR_DNS, HEALTH_MONITOR_GSLB, HEALTH_MONITOR_SIP, HEALTH_MONITOR_RADIUS, HEALTH_MONITOR_SMTP, HEALTH_MONITOR_SMTPS, HEALTH_MONITOR_POP3, HEALTH_MONITOR_POP3S, HEALTH_MONITOR_IMAP, HEALTH_MONITOR_IMAPS, HEALTH_MONITOR_FTP, HEALTH_MONITOR_FTPS, HEALTH_MONITOR_LDAP, HEALTH_MONITOR_LDAPS... Allowed in enterprise edition with any value, essentials edition(allowed values- health_monitor_ping,health_monitor_tcp,health_monitor_udp), basic edition(allowed values- health_monitor_ping,health_monitor_tcp,health_monitor_udp,health_monitor_http,health_monitor_https), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	AuthType *string `json:"authType,omitempty" tf:"auth_type,omitempty"`

	// +kubebuilder:validation:Optional
	ExactHTTPRequest *string `json:"exactHttpRequest,omitempty" tf:"exact_http_request,omitempty"`

	// +kubebuilder:validation:Optional
	HTTPRequest *string `json:"httpRequest,omitempty" tf:"http_request,omitempty"`

	// +kubebuilder:validation:Optional
	HTTPRequestBody *string `json:"httpRequestBody,omitempty" tf:"http_request_body,omitempty"`

	// +kubebuilder:validation:Optional
	HTTPResponse *string `json:"httpResponse,omitempty" tf:"http_response,omitempty"`

	// +kubebuilder:validation:Optional
	HTTPResponseCode []*string `json:"httpResponseCode" tf:"http_response_code,omitempty"`

	// +kubebuilder:validation:Optional
	MaintenanceCode []*int64 `json:"maintenanceCode,omitempty" tf:"maintenance_code,omitempty"`

	// +kubebuilder:validation:Optional
	MaintenanceResponse *string `json:"maintenanceResponse,omitempty" tf:"maintenance_response,omitempty"`

	// +kubebuilder:validation:Optional
	ResponseSize *string `json:"responseSize,omitempty" tf:"response_size,omitempty"`

	// +kubebuilder:validation:Optional
	SSLAttributes []HTTPMonitorSSLAttributesParameters `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`
}

type HTTPMonitorSSLAttributesInitParameters struct {
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	SSLProfileRef *string `json:"sslProfileRef,omitempty" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type HTTPMonitorSSLAttributesObservation struct {
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	SSLProfileRef *string `json:"sslProfileRef,omitempty" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type HTTPMonitorSSLAttributesParameters struct {

	// +kubebuilder:validation:Optional
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SSLProfileRef *string `json:"sslProfileRef" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type HTTPSMonitorInitParameters struct {

	// Type of the health monitor. Enum options - HEALTH_MONITOR_PING, HEALTH_MONITOR_TCP, HEALTH_MONITOR_HTTP, HEALTH_MONITOR_HTTPS, HEALTH_MONITOR_EXTERNAL, HEALTH_MONITOR_UDP, HEALTH_MONITOR_DNS, HEALTH_MONITOR_GSLB, HEALTH_MONITOR_SIP, HEALTH_MONITOR_RADIUS, HEALTH_MONITOR_SMTP, HEALTH_MONITOR_SMTPS, HEALTH_MONITOR_POP3, HEALTH_MONITOR_POP3S, HEALTH_MONITOR_IMAP, HEALTH_MONITOR_IMAPS, HEALTH_MONITOR_FTP, HEALTH_MONITOR_FTPS, HEALTH_MONITOR_LDAP, HEALTH_MONITOR_LDAPS... Allowed in enterprise edition with any value, essentials edition(allowed values- health_monitor_ping,health_monitor_tcp,health_monitor_udp), basic edition(allowed values- health_monitor_ping,health_monitor_tcp,health_monitor_udp,health_monitor_http,health_monitor_https), enterprise with cloud services edition.
	AuthType *string `json:"authType,omitempty" tf:"auth_type,omitempty"`

	ExactHTTPRequest *string `json:"exactHttpRequest,omitempty" tf:"exact_http_request,omitempty"`

	HTTPRequest *string `json:"httpRequest,omitempty" tf:"http_request,omitempty"`

	HTTPRequestBody *string `json:"httpRequestBody,omitempty" tf:"http_request_body,omitempty"`

	HTTPResponse *string `json:"httpResponse,omitempty" tf:"http_response,omitempty"`

	HTTPResponseCode []*string `json:"httpResponseCode,omitempty" tf:"http_response_code,omitempty"`

	MaintenanceCode []*int64 `json:"maintenanceCode,omitempty" tf:"maintenance_code,omitempty"`

	MaintenanceResponse *string `json:"maintenanceResponse,omitempty" tf:"maintenance_response,omitempty"`

	ResponseSize *string `json:"responseSize,omitempty" tf:"response_size,omitempty"`

	SSLAttributes []HTTPSMonitorSSLAttributesInitParameters `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`
}

type HTTPSMonitorObservation struct {

	// Type of the health monitor. Enum options - HEALTH_MONITOR_PING, HEALTH_MONITOR_TCP, HEALTH_MONITOR_HTTP, HEALTH_MONITOR_HTTPS, HEALTH_MONITOR_EXTERNAL, HEALTH_MONITOR_UDP, HEALTH_MONITOR_DNS, HEALTH_MONITOR_GSLB, HEALTH_MONITOR_SIP, HEALTH_MONITOR_RADIUS, HEALTH_MONITOR_SMTP, HEALTH_MONITOR_SMTPS, HEALTH_MONITOR_POP3, HEALTH_MONITOR_POP3S, HEALTH_MONITOR_IMAP, HEALTH_MONITOR_IMAPS, HEALTH_MONITOR_FTP, HEALTH_MONITOR_FTPS, HEALTH_MONITOR_LDAP, HEALTH_MONITOR_LDAPS... Allowed in enterprise edition with any value, essentials edition(allowed values- health_monitor_ping,health_monitor_tcp,health_monitor_udp), basic edition(allowed values- health_monitor_ping,health_monitor_tcp,health_monitor_udp,health_monitor_http,health_monitor_https), enterprise with cloud services edition.
	AuthType *string `json:"authType,omitempty" tf:"auth_type,omitempty"`

	ExactHTTPRequest *string `json:"exactHttpRequest,omitempty" tf:"exact_http_request,omitempty"`

	HTTPRequest *string `json:"httpRequest,omitempty" tf:"http_request,omitempty"`

	HTTPRequestBody *string `json:"httpRequestBody,omitempty" tf:"http_request_body,omitempty"`

	HTTPResponse *string `json:"httpResponse,omitempty" tf:"http_response,omitempty"`

	HTTPResponseCode []*string `json:"httpResponseCode,omitempty" tf:"http_response_code,omitempty"`

	MaintenanceCode []*int64 `json:"maintenanceCode,omitempty" tf:"maintenance_code,omitempty"`

	MaintenanceResponse *string `json:"maintenanceResponse,omitempty" tf:"maintenance_response,omitempty"`

	ResponseSize *string `json:"responseSize,omitempty" tf:"response_size,omitempty"`

	SSLAttributes []HTTPSMonitorSSLAttributesObservation `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`
}

type HTTPSMonitorParameters struct {

	// Type of the health monitor. Enum options - HEALTH_MONITOR_PING, HEALTH_MONITOR_TCP, HEALTH_MONITOR_HTTP, HEALTH_MONITOR_HTTPS, HEALTH_MONITOR_EXTERNAL, HEALTH_MONITOR_UDP, HEALTH_MONITOR_DNS, HEALTH_MONITOR_GSLB, HEALTH_MONITOR_SIP, HEALTH_MONITOR_RADIUS, HEALTH_MONITOR_SMTP, HEALTH_MONITOR_SMTPS, HEALTH_MONITOR_POP3, HEALTH_MONITOR_POP3S, HEALTH_MONITOR_IMAP, HEALTH_MONITOR_IMAPS, HEALTH_MONITOR_FTP, HEALTH_MONITOR_FTPS, HEALTH_MONITOR_LDAP, HEALTH_MONITOR_LDAPS... Allowed in enterprise edition with any value, essentials edition(allowed values- health_monitor_ping,health_monitor_tcp,health_monitor_udp), basic edition(allowed values- health_monitor_ping,health_monitor_tcp,health_monitor_udp,health_monitor_http,health_monitor_https), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	AuthType *string `json:"authType,omitempty" tf:"auth_type,omitempty"`

	// +kubebuilder:validation:Optional
	ExactHTTPRequest *string `json:"exactHttpRequest,omitempty" tf:"exact_http_request,omitempty"`

	// +kubebuilder:validation:Optional
	HTTPRequest *string `json:"httpRequest,omitempty" tf:"http_request,omitempty"`

	// +kubebuilder:validation:Optional
	HTTPRequestBody *string `json:"httpRequestBody,omitempty" tf:"http_request_body,omitempty"`

	// +kubebuilder:validation:Optional
	HTTPResponse *string `json:"httpResponse,omitempty" tf:"http_response,omitempty"`

	// +kubebuilder:validation:Optional
	HTTPResponseCode []*string `json:"httpResponseCode" tf:"http_response_code,omitempty"`

	// +kubebuilder:validation:Optional
	MaintenanceCode []*int64 `json:"maintenanceCode,omitempty" tf:"maintenance_code,omitempty"`

	// +kubebuilder:validation:Optional
	MaintenanceResponse *string `json:"maintenanceResponse,omitempty" tf:"maintenance_response,omitempty"`

	// +kubebuilder:validation:Optional
	ResponseSize *string `json:"responseSize,omitempty" tf:"response_size,omitempty"`

	// +kubebuilder:validation:Optional
	SSLAttributes []HTTPSMonitorSSLAttributesParameters `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`
}

type HTTPSMonitorSSLAttributesInitParameters struct {
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	SSLProfileRef *string `json:"sslProfileRef,omitempty" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type HTTPSMonitorSSLAttributesObservation struct {
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	SSLProfileRef *string `json:"sslProfileRef,omitempty" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type HTTPSMonitorSSLAttributesParameters struct {

	// +kubebuilder:validation:Optional
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SSLProfileRef *string `json:"sslProfileRef" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type HealthMonitorConfigpbAttributesInitParameters struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type HealthMonitorConfigpbAttributesObservation struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type HealthMonitorConfigpbAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type HealthMonitorInitParameters struct {

	// By default, multiple instances of the same healthmonitor to the same server are suppressed intelligently. In rare cases, the monitor may have specific constructs that go beyond the server keys (ip, port, etc.) during which such suppression is not desired. Use this knob to allow duplicates. Field introduced in 18.2.8. Allowed in enterprise edition with any value, essentials edition(allowed values- true), basic edition(allowed values- true), enterprise with cloud services edition.
	AllowDuplicateMonitors *string `json:"allowDuplicateMonitors,omitempty" tf:"allow_duplicate_monitors,omitempty"`

	// Authentication information for username/password. Field introduced in 20.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	Authentication []AuthenticationInitParameters `json:"authentication,omitempty" tf:"authentication,omitempty"`

	// Protobuf versioning for config pbs. Field introduced in 21.1.1. Allowed in enterprise edition with any value, essentials edition with any value, basic edition with any value, enterprise with cloud services edition.
	ConfigpbAttributes []HealthMonitorConfigpbAttributesInitParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	// Allowed in enterprise edition with any value, enterprise with cloud services edition.
	DNSMonitor []DNSMonitorInitParameters `json:"dnsMonitor,omitempty" tf:"dns_monitor,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// During addition of a server or healthmonitors or during bootup, avi performs sequential health checks rather than waiting for send-interval to kick in, to mark the server up as soon as possible. This knob may be used to turn this feature off. Field introduced in 18.2.7. Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic edition(allowed values- false), enterprise with cloud services edition.
	DisableQuickstart *string `json:"disableQuickstart,omitempty" tf:"disable_quickstart,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ExternalMonitor []ExternalMonitorInitParameters `json:"externalMonitor,omitempty" tf:"external_monitor,omitempty"`

	// Number of continuous failed health checks before the server is marked down. Allowed values are 1-50. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	FailedChecks *string `json:"failedChecks,omitempty" tf:"failed_checks,omitempty"`

	// Health monitor for ftp. Field introduced in 21.1.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	FtpMonitor []FtpMonitorInitParameters `json:"ftpMonitor,omitempty" tf:"ftp_monitor,omitempty"`

	// Health monitor for ftps. Field introduced in 21.1.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	FtpsMonitor []FtpsMonitorInitParameters `json:"ftpsMonitor,omitempty" tf:"ftps_monitor,omitempty"`

	// Allowed in enterprise edition with any value, basic, enterprise with cloud services edition.
	HTTPMonitor []HTTPMonitorInitParameters `json:"httpMonitor,omitempty" tf:"http_monitor,omitempty"`

	// Allowed in enterprise edition with any value, basic, enterprise with cloud services edition.
	HTTPSMonitor []HTTPSMonitorInitParameters `json:"httpsMonitor,omitempty" tf:"https_monitor,omitempty"`

	// Health monitor for imap. Field introduced in 21.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	ImapMonitor []ImapMonitorInitParameters `json:"imapMonitor,omitempty" tf:"imap_monitor,omitempty"`

	// Health monitor for imaps. Field introduced in 21.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	ImapsMonitor []ImapsMonitorInitParameters `json:"imapsMonitor,omitempty" tf:"imaps_monitor,omitempty"`

	// This field describes the object's replication scope. If the field is set to false, then the object is visible within the controller-cluster and its associated service-engines. If the field is set to true, then the object is replicated across the federation. Field introduced in 17.1.3. Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic edition(allowed values- false), enterprise with cloud services edition.
	IsFederated *string `json:"isFederated,omitempty" tf:"is_federated,omitempty"`

	// Health monitor for ldap. Field introduced in 21.1.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	LdapMonitor []LdapMonitorInitParameters `json:"ldapMonitor,omitempty" tf:"ldap_monitor,omitempty"`

	// Health monitor for ldaps. Field introduced in 21.1.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	LdapsMonitor []LdapsMonitorInitParameters `json:"ldapsMonitor,omitempty" tf:"ldaps_monitor,omitempty"`

	// List of labels to be used for granular rbac. Field introduced in 20.1.5. Allowed in enterprise edition with any value, essentials edition with any value, basic edition with any value, enterprise with cloud services edition.
	Markers []MarkersInitParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	// Use this port instead of the port defined for the server in the pool. If the monitor succeeds to this port, the load balanced traffic will still be sent to the port of the server defined within the pool. Allowed values are 1-65535. Special values are 0 - use server port. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	MonitorPort *string `json:"monitorPort,omitempty" tf:"monitor_port,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Health monitor for pop3. Field introduced in 21.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	Pop3Monitor []Pop3MonitorInitParameters `json:"pop3Monitor,omitempty" tf:"pop3_monitor,omitempty"`

	// Health monitor for pop3s. Field introduced in 21.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	Pop3SMonitor []Pop3SMonitorInitParameters `json:"pop3sMonitor,omitempty" tf:"pop3s_monitor,omitempty"`

	// Health monitor for radius. Field introduced in 18.2.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	RadiusMonitor []RadiusMonitorInitParameters `json:"radiusMonitor,omitempty" tf:"radius_monitor,omitempty"`

	// A valid response from the server is expected within the receive timeout window. This timeout must be less than the send interval. If server status is regularly flapping up and down, consider increasing this value. Allowed values are 1-2400. Unit is sec. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ReceiveTimeout *string `json:"receiveTimeout,omitempty" tf:"receive_timeout,omitempty"`

	// Health monitor for sip. Field introduced in 17.2.8, 18.1.3, 18.2.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	SIPMonitor []SIPMonitorInitParameters `json:"sipMonitor,omitempty" tf:"sip_monitor,omitempty"`

	// Health monitor for smtp. Field introduced in 21.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	SMTPMonitor []SMTPMonitorInitParameters `json:"smtpMonitor,omitempty" tf:"smtp_monitor,omitempty"`

	// Health monitor for sctp. Field introduced in 22.1.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	SctpMonitor []SctpMonitorInitParameters `json:"sctpMonitor,omitempty" tf:"sctp_monitor,omitempty"`

	// Frequency, in seconds, that monitors are sent to a server. Allowed values are 1-3600. Unit is sec. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	SendInterval *string `json:"sendInterval,omitempty" tf:"send_interval,omitempty"`

	// Health monitor for smtps. Field introduced in 21.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	SmtpsMonitor []SmtpsMonitorInitParameters `json:"smtpsMonitor,omitempty" tf:"smtps_monitor,omitempty"`

	// Number of continuous successful health checks before server is marked up. Allowed values are 1-50. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	SuccessfulChecks *string `json:"successfulChecks,omitempty" tf:"successful_checks,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	TCPMonitor []TCPMonitorInitParameters `json:"tcpMonitor,omitempty" tf:"tcp_monitor,omitempty"`

	// It is a reference to an object of type tenant. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// Type of the health monitor. Enum options - HEALTH_MONITOR_PING, HEALTH_MONITOR_TCP, HEALTH_MONITOR_HTTP, HEALTH_MONITOR_HTTPS, HEALTH_MONITOR_EXTERNAL, HEALTH_MONITOR_UDP, HEALTH_MONITOR_DNS, HEALTH_MONITOR_GSLB, HEALTH_MONITOR_SIP, HEALTH_MONITOR_RADIUS, HEALTH_MONITOR_SMTP, HEALTH_MONITOR_SMTPS, HEALTH_MONITOR_POP3, HEALTH_MONITOR_POP3S, HEALTH_MONITOR_IMAP, HEALTH_MONITOR_IMAPS, HEALTH_MONITOR_FTP, HEALTH_MONITOR_FTPS, HEALTH_MONITOR_LDAP, HEALTH_MONITOR_LDAPS... Allowed in enterprise edition with any value, essentials edition(allowed values- health_monitor_ping,health_monitor_tcp,health_monitor_udp), basic edition(allowed values- health_monitor_ping,health_monitor_tcp,health_monitor_udp,health_monitor_http,health_monitor_https), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	UDPMonitor []UDPMonitorInitParameters `json:"udpMonitor,omitempty" tf:"udp_monitor,omitempty"`

	// Uuid of the health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type HealthMonitorObservation struct {

	// By default, multiple instances of the same healthmonitor to the same server are suppressed intelligently. In rare cases, the monitor may have specific constructs that go beyond the server keys (ip, port, etc.) during which such suppression is not desired. Use this knob to allow duplicates. Field introduced in 18.2.8. Allowed in enterprise edition with any value, essentials edition(allowed values- true), basic edition(allowed values- true), enterprise with cloud services edition.
	AllowDuplicateMonitors *string `json:"allowDuplicateMonitors,omitempty" tf:"allow_duplicate_monitors,omitempty"`

	// Authentication information for username/password. Field introduced in 20.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	Authentication []AuthenticationParameters `json:"authentication,omitempty" tf:"authentication,omitempty"`

	// Protobuf versioning for config pbs. Field introduced in 21.1.1. Allowed in enterprise edition with any value, essentials edition with any value, basic edition with any value, enterprise with cloud services edition.
	ConfigpbAttributes []HealthMonitorConfigpbAttributesObservation `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	// Allowed in enterprise edition with any value, enterprise with cloud services edition.
	DNSMonitor []DNSMonitorObservation `json:"dnsMonitor,omitempty" tf:"dns_monitor,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// During addition of a server or healthmonitors or during bootup, avi performs sequential health checks rather than waiting for send-interval to kick in, to mark the server up as soon as possible. This knob may be used to turn this feature off. Field introduced in 18.2.7. Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic edition(allowed values- false), enterprise with cloud services edition.
	DisableQuickstart *string `json:"disableQuickstart,omitempty" tf:"disable_quickstart,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ExternalMonitor []ExternalMonitorObservation `json:"externalMonitor,omitempty" tf:"external_monitor,omitempty"`

	// Number of continuous failed health checks before the server is marked down. Allowed values are 1-50. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	FailedChecks *string `json:"failedChecks,omitempty" tf:"failed_checks,omitempty"`

	// Health monitor for ftp. Field introduced in 21.1.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	FtpMonitor []FtpMonitorObservation `json:"ftpMonitor,omitempty" tf:"ftp_monitor,omitempty"`

	// Health monitor for ftps. Field introduced in 21.1.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	FtpsMonitor []FtpsMonitorObservation `json:"ftpsMonitor,omitempty" tf:"ftps_monitor,omitempty"`

	// Allowed in enterprise edition with any value, basic, enterprise with cloud services edition.
	HTTPMonitor []HTTPMonitorObservation `json:"httpMonitor,omitempty" tf:"http_monitor,omitempty"`

	// Allowed in enterprise edition with any value, basic, enterprise with cloud services edition.
	HTTPSMonitor []HTTPSMonitorObservation `json:"httpsMonitor,omitempty" tf:"https_monitor,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Health monitor for imap. Field introduced in 21.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	ImapMonitor []ImapMonitorObservation `json:"imapMonitor,omitempty" tf:"imap_monitor,omitempty"`

	// Health monitor for imaps. Field introduced in 21.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	ImapsMonitor []ImapsMonitorObservation `json:"imapsMonitor,omitempty" tf:"imaps_monitor,omitempty"`

	// This field describes the object's replication scope. If the field is set to false, then the object is visible within the controller-cluster and its associated service-engines. If the field is set to true, then the object is replicated across the federation. Field introduced in 17.1.3. Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic edition(allowed values- false), enterprise with cloud services edition.
	IsFederated *string `json:"isFederated,omitempty" tf:"is_federated,omitempty"`

	// Health monitor for ldap. Field introduced in 21.1.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	LdapMonitor []LdapMonitorObservation `json:"ldapMonitor,omitempty" tf:"ldap_monitor,omitempty"`

	// Health monitor for ldaps. Field introduced in 21.1.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	LdapsMonitor []LdapsMonitorObservation `json:"ldapsMonitor,omitempty" tf:"ldaps_monitor,omitempty"`

	// List of labels to be used for granular rbac. Field introduced in 20.1.5. Allowed in enterprise edition with any value, essentials edition with any value, basic edition with any value, enterprise with cloud services edition.
	Markers []MarkersObservation `json:"markers,omitempty" tf:"markers,omitempty"`

	// Use this port instead of the port defined for the server in the pool. If the monitor succeeds to this port, the load balanced traffic will still be sent to the port of the server defined within the pool. Allowed values are 1-65535. Special values are 0 - use server port. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	MonitorPort *string `json:"monitorPort,omitempty" tf:"monitor_port,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Health monitor for pop3. Field introduced in 21.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	Pop3Monitor []Pop3MonitorObservation `json:"pop3Monitor,omitempty" tf:"pop3_monitor,omitempty"`

	// Health monitor for pop3s. Field introduced in 21.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	Pop3SMonitor []Pop3SMonitorObservation `json:"pop3sMonitor,omitempty" tf:"pop3s_monitor,omitempty"`

	// Health monitor for radius. Field introduced in 18.2.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	RadiusMonitor []RadiusMonitorObservation `json:"radiusMonitor,omitempty" tf:"radius_monitor,omitempty"`

	// A valid response from the server is expected within the receive timeout window. This timeout must be less than the send interval. If server status is regularly flapping up and down, consider increasing this value. Allowed values are 1-2400. Unit is sec. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ReceiveTimeout *string `json:"receiveTimeout,omitempty" tf:"receive_timeout,omitempty"`

	// Health monitor for sip. Field introduced in 17.2.8, 18.1.3, 18.2.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	SIPMonitor []SIPMonitorObservation `json:"sipMonitor,omitempty" tf:"sip_monitor,omitempty"`

	// Health monitor for smtp. Field introduced in 21.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	SMTPMonitor []SMTPMonitorObservation `json:"smtpMonitor,omitempty" tf:"smtp_monitor,omitempty"`

	// Health monitor for sctp. Field introduced in 22.1.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	SctpMonitor []SctpMonitorObservation `json:"sctpMonitor,omitempty" tf:"sctp_monitor,omitempty"`

	// Frequency, in seconds, that monitors are sent to a server. Allowed values are 1-3600. Unit is sec. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	SendInterval *string `json:"sendInterval,omitempty" tf:"send_interval,omitempty"`

	// Health monitor for smtps. Field introduced in 21.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	SmtpsMonitor []SmtpsMonitorObservation `json:"smtpsMonitor,omitempty" tf:"smtps_monitor,omitempty"`

	// Number of continuous successful health checks before server is marked up. Allowed values are 1-50. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	SuccessfulChecks *string `json:"successfulChecks,omitempty" tf:"successful_checks,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	TCPMonitor []TCPMonitorObservation `json:"tcpMonitor,omitempty" tf:"tcp_monitor,omitempty"`

	// It is a reference to an object of type tenant. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// Type of the health monitor. Enum options - HEALTH_MONITOR_PING, HEALTH_MONITOR_TCP, HEALTH_MONITOR_HTTP, HEALTH_MONITOR_HTTPS, HEALTH_MONITOR_EXTERNAL, HEALTH_MONITOR_UDP, HEALTH_MONITOR_DNS, HEALTH_MONITOR_GSLB, HEALTH_MONITOR_SIP, HEALTH_MONITOR_RADIUS, HEALTH_MONITOR_SMTP, HEALTH_MONITOR_SMTPS, HEALTH_MONITOR_POP3, HEALTH_MONITOR_POP3S, HEALTH_MONITOR_IMAP, HEALTH_MONITOR_IMAPS, HEALTH_MONITOR_FTP, HEALTH_MONITOR_FTPS, HEALTH_MONITOR_LDAP, HEALTH_MONITOR_LDAPS... Allowed in enterprise edition with any value, essentials edition(allowed values- health_monitor_ping,health_monitor_tcp,health_monitor_udp), basic edition(allowed values- health_monitor_ping,health_monitor_tcp,health_monitor_udp,health_monitor_http,health_monitor_https), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	UDPMonitor []UDPMonitorObservation `json:"udpMonitor,omitempty" tf:"udp_monitor,omitempty"`

	// Uuid of the health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type HealthMonitorParameters struct {

	// By default, multiple instances of the same healthmonitor to the same server are suppressed intelligently. In rare cases, the monitor may have specific constructs that go beyond the server keys (ip, port, etc.) during which such suppression is not desired. Use this knob to allow duplicates. Field introduced in 18.2.8. Allowed in enterprise edition with any value, essentials edition(allowed values- true), basic edition(allowed values- true), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	AllowDuplicateMonitors *string `json:"allowDuplicateMonitors,omitempty" tf:"allow_duplicate_monitors,omitempty"`

	// Authentication information for username/password. Field introduced in 20.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Authentication []AuthenticationParameters `json:"authentication,omitempty" tf:"authentication,omitempty"`

	// Protobuf versioning for config pbs. Field introduced in 21.1.1. Allowed in enterprise edition with any value, essentials edition with any value, basic edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ConfigpbAttributes []HealthMonitorConfigpbAttributesParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	// Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	DNSMonitor []DNSMonitorParameters `json:"dnsMonitor,omitempty" tf:"dns_monitor,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// During addition of a server or healthmonitors or during bootup, avi performs sequential health checks rather than waiting for send-interval to kick in, to mark the server up as soon as possible. This knob may be used to turn this feature off. Field introduced in 18.2.7. Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic edition(allowed values- false), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	DisableQuickstart *string `json:"disableQuickstart,omitempty" tf:"disable_quickstart,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ExternalMonitor []ExternalMonitorParameters `json:"externalMonitor,omitempty" tf:"external_monitor,omitempty"`

	// Number of continuous failed health checks before the server is marked down. Allowed values are 1-50. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	FailedChecks *string `json:"failedChecks,omitempty" tf:"failed_checks,omitempty"`

	// Health monitor for ftp. Field introduced in 21.1.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	FtpMonitor []FtpMonitorParameters `json:"ftpMonitor,omitempty" tf:"ftp_monitor,omitempty"`

	// Health monitor for ftps. Field introduced in 21.1.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	FtpsMonitor []FtpsMonitorParameters `json:"ftpsMonitor,omitempty" tf:"ftps_monitor,omitempty"`

	// Allowed in enterprise edition with any value, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	HTTPMonitor []HTTPMonitorParameters `json:"httpMonitor,omitempty" tf:"http_monitor,omitempty"`

	// Allowed in enterprise edition with any value, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	HTTPSMonitor []HTTPSMonitorParameters `json:"httpsMonitor,omitempty" tf:"https_monitor,omitempty"`

	// Health monitor for imap. Field introduced in 21.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ImapMonitor []ImapMonitorParameters `json:"imapMonitor,omitempty" tf:"imap_monitor,omitempty"`

	// Health monitor for imaps. Field introduced in 21.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ImapsMonitor []ImapsMonitorParameters `json:"imapsMonitor,omitempty" tf:"imaps_monitor,omitempty"`

	// This field describes the object's replication scope. If the field is set to false, then the object is visible within the controller-cluster and its associated service-engines. If the field is set to true, then the object is replicated across the federation. Field introduced in 17.1.3. Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic edition(allowed values- false), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	IsFederated *string `json:"isFederated,omitempty" tf:"is_federated,omitempty"`

	// Health monitor for ldap. Field introduced in 21.1.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	LdapMonitor []LdapMonitorParameters `json:"ldapMonitor,omitempty" tf:"ldap_monitor,omitempty"`

	// Health monitor for ldaps. Field introduced in 21.1.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	LdapsMonitor []LdapsMonitorParameters `json:"ldapsMonitor,omitempty" tf:"ldaps_monitor,omitempty"`

	// List of labels to be used for granular rbac. Field introduced in 20.1.5. Allowed in enterprise edition with any value, essentials edition with any value, basic edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Markers []MarkersParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	// Use this port instead of the port defined for the server in the pool. If the monitor succeeds to this port, the load balanced traffic will still be sent to the port of the server defined within the pool. Allowed values are 1-65535. Special values are 0 - use server port. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	MonitorPort *string `json:"monitorPort,omitempty" tf:"monitor_port,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Health monitor for pop3. Field introduced in 21.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Pop3Monitor []Pop3MonitorParameters `json:"pop3Monitor,omitempty" tf:"pop3_monitor,omitempty"`

	// Health monitor for pop3s. Field introduced in 21.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Pop3SMonitor []Pop3SMonitorParameters `json:"pop3sMonitor,omitempty" tf:"pop3s_monitor,omitempty"`

	// Health monitor for radius. Field introduced in 18.2.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	RadiusMonitor []RadiusMonitorParameters `json:"radiusMonitor,omitempty" tf:"radius_monitor,omitempty"`

	// A valid response from the server is expected within the receive timeout window. This timeout must be less than the send interval. If server status is regularly flapping up and down, consider increasing this value. Allowed values are 1-2400. Unit is sec. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ReceiveTimeout *string `json:"receiveTimeout,omitempty" tf:"receive_timeout,omitempty"`

	// Health monitor for sip. Field introduced in 17.2.8, 18.1.3, 18.2.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	SIPMonitor []SIPMonitorParameters `json:"sipMonitor,omitempty" tf:"sip_monitor,omitempty"`

	// Health monitor for smtp. Field introduced in 21.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	SMTPMonitor []SMTPMonitorParameters `json:"smtpMonitor,omitempty" tf:"smtp_monitor,omitempty"`

	// Health monitor for sctp. Field introduced in 22.1.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	SctpMonitor []SctpMonitorParameters `json:"sctpMonitor,omitempty" tf:"sctp_monitor,omitempty"`

	// Frequency, in seconds, that monitors are sent to a server. Allowed values are 1-3600. Unit is sec. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	SendInterval *string `json:"sendInterval,omitempty" tf:"send_interval,omitempty"`

	// Health monitor for smtps. Field introduced in 21.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	SmtpsMonitor []SmtpsMonitorParameters `json:"smtpsMonitor,omitempty" tf:"smtps_monitor,omitempty"`

	// Number of continuous successful health checks before server is marked up. Allowed values are 1-50. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	SuccessfulChecks *string `json:"successfulChecks,omitempty" tf:"successful_checks,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	TCPMonitor []TCPMonitorParameters `json:"tcpMonitor,omitempty" tf:"tcp_monitor,omitempty"`

	// It is a reference to an object of type tenant. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// Type of the health monitor. Enum options - HEALTH_MONITOR_PING, HEALTH_MONITOR_TCP, HEALTH_MONITOR_HTTP, HEALTH_MONITOR_HTTPS, HEALTH_MONITOR_EXTERNAL, HEALTH_MONITOR_UDP, HEALTH_MONITOR_DNS, HEALTH_MONITOR_GSLB, HEALTH_MONITOR_SIP, HEALTH_MONITOR_RADIUS, HEALTH_MONITOR_SMTP, HEALTH_MONITOR_SMTPS, HEALTH_MONITOR_POP3, HEALTH_MONITOR_POP3S, HEALTH_MONITOR_IMAP, HEALTH_MONITOR_IMAPS, HEALTH_MONITOR_FTP, HEALTH_MONITOR_FTPS, HEALTH_MONITOR_LDAP, HEALTH_MONITOR_LDAPS... Allowed in enterprise edition with any value, essentials edition(allowed values- health_monitor_ping,health_monitor_tcp,health_monitor_udp), basic edition(allowed values- health_monitor_ping,health_monitor_tcp,health_monitor_udp,health_monitor_http,health_monitor_https), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	UDPMonitor []UDPMonitorParameters `json:"udpMonitor,omitempty" tf:"udp_monitor,omitempty"`

	// Uuid of the health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type ImapMonitorInitParameters struct {
	Folder *string `json:"folder,omitempty" tf:"folder,omitempty"`

	SSLAttributes []ImapMonitorSSLAttributesInitParameters `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`
}

type ImapMonitorObservation struct {
	Folder *string `json:"folder,omitempty" tf:"folder,omitempty"`

	SSLAttributes []ImapMonitorSSLAttributesObservation `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`
}

type ImapMonitorParameters struct {

	// +kubebuilder:validation:Optional
	Folder *string `json:"folder,omitempty" tf:"folder,omitempty"`

	// +kubebuilder:validation:Optional
	SSLAttributes []ImapMonitorSSLAttributesParameters `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`
}

type ImapMonitorSSLAttributesInitParameters struct {
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	SSLProfileRef *string `json:"sslProfileRef,omitempty" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type ImapMonitorSSLAttributesObservation struct {
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	SSLProfileRef *string `json:"sslProfileRef,omitempty" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type ImapMonitorSSLAttributesParameters struct {

	// +kubebuilder:validation:Optional
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SSLProfileRef *string `json:"sslProfileRef" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type ImapsMonitorInitParameters struct {
	Folder *string `json:"folder,omitempty" tf:"folder,omitempty"`

	SSLAttributes []ImapsMonitorSSLAttributesInitParameters `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`
}

type ImapsMonitorObservation struct {
	Folder *string `json:"folder,omitempty" tf:"folder,omitempty"`

	SSLAttributes []ImapsMonitorSSLAttributesObservation `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`
}

type ImapsMonitorParameters struct {

	// +kubebuilder:validation:Optional
	Folder *string `json:"folder,omitempty" tf:"folder,omitempty"`

	// +kubebuilder:validation:Optional
	SSLAttributes []ImapsMonitorSSLAttributesParameters `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`
}

type ImapsMonitorSSLAttributesInitParameters struct {
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	SSLProfileRef *string `json:"sslProfileRef,omitempty" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type ImapsMonitorSSLAttributesObservation struct {
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	SSLProfileRef *string `json:"sslProfileRef,omitempty" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type ImapsMonitorSSLAttributesParameters struct {

	// +kubebuilder:validation:Optional
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SSLProfileRef *string `json:"sslProfileRef" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type LdapMonitorInitParameters struct {
	Attributes *string `json:"attributes,omitempty" tf:"attributes,omitempty"`

	BaseDn *string `json:"baseDn,omitempty" tf:"base_dn,omitempty"`

	Filter *string `json:"filter,omitempty" tf:"filter,omitempty"`

	SSLAttributes []LdapMonitorSSLAttributesInitParameters `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`

	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`
}

type LdapMonitorObservation struct {
	Attributes *string `json:"attributes,omitempty" tf:"attributes,omitempty"`

	BaseDn *string `json:"baseDn,omitempty" tf:"base_dn,omitempty"`

	Filter *string `json:"filter,omitempty" tf:"filter,omitempty"`

	SSLAttributes []LdapMonitorSSLAttributesObservation `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`

	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`
}

type LdapMonitorParameters struct {

	// +kubebuilder:validation:Optional
	Attributes *string `json:"attributes,omitempty" tf:"attributes,omitempty"`

	// +kubebuilder:validation:Optional
	BaseDn *string `json:"baseDn" tf:"base_dn,omitempty"`

	// +kubebuilder:validation:Optional
	Filter *string `json:"filter,omitempty" tf:"filter,omitempty"`

	// +kubebuilder:validation:Optional
	SSLAttributes []LdapMonitorSSLAttributesParameters `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`
}

type LdapMonitorSSLAttributesInitParameters struct {
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	SSLProfileRef *string `json:"sslProfileRef,omitempty" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type LdapMonitorSSLAttributesObservation struct {
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	SSLProfileRef *string `json:"sslProfileRef,omitempty" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type LdapMonitorSSLAttributesParameters struct {

	// +kubebuilder:validation:Optional
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SSLProfileRef *string `json:"sslProfileRef" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type LdapsMonitorInitParameters struct {
	Attributes *string `json:"attributes,omitempty" tf:"attributes,omitempty"`

	BaseDn *string `json:"baseDn,omitempty" tf:"base_dn,omitempty"`

	Filter *string `json:"filter,omitempty" tf:"filter,omitempty"`

	SSLAttributes []LdapsMonitorSSLAttributesInitParameters `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`

	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`
}

type LdapsMonitorObservation struct {
	Attributes *string `json:"attributes,omitempty" tf:"attributes,omitempty"`

	BaseDn *string `json:"baseDn,omitempty" tf:"base_dn,omitempty"`

	Filter *string `json:"filter,omitempty" tf:"filter,omitempty"`

	SSLAttributes []LdapsMonitorSSLAttributesObservation `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`

	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`
}

type LdapsMonitorParameters struct {

	// +kubebuilder:validation:Optional
	Attributes *string `json:"attributes,omitempty" tf:"attributes,omitempty"`

	// +kubebuilder:validation:Optional
	BaseDn *string `json:"baseDn" tf:"base_dn,omitempty"`

	// +kubebuilder:validation:Optional
	Filter *string `json:"filter,omitempty" tf:"filter,omitempty"`

	// +kubebuilder:validation:Optional
	SSLAttributes []LdapsMonitorSSLAttributesParameters `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`
}

type LdapsMonitorSSLAttributesInitParameters struct {
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	SSLProfileRef *string `json:"sslProfileRef,omitempty" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type LdapsMonitorSSLAttributesObservation struct {
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	SSLProfileRef *string `json:"sslProfileRef,omitempty" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type LdapsMonitorSSLAttributesParameters struct {

	// +kubebuilder:validation:Optional
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SSLProfileRef *string `json:"sslProfileRef" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type MarkersInitParameters struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type MarkersObservation struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type MarkersParameters struct {

	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type Pop3MonitorInitParameters struct {
	SSLAttributes []Pop3MonitorSSLAttributesInitParameters `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`
}

type Pop3MonitorObservation struct {
	SSLAttributes []Pop3MonitorSSLAttributesObservation `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`
}

type Pop3MonitorParameters struct {

	// +kubebuilder:validation:Optional
	SSLAttributes []Pop3MonitorSSLAttributesParameters `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`
}

type Pop3MonitorSSLAttributesInitParameters struct {
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	SSLProfileRef *string `json:"sslProfileRef,omitempty" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type Pop3MonitorSSLAttributesObservation struct {
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	SSLProfileRef *string `json:"sslProfileRef,omitempty" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type Pop3MonitorSSLAttributesParameters struct {

	// +kubebuilder:validation:Optional
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SSLProfileRef *string `json:"sslProfileRef" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type Pop3SMonitorInitParameters struct {
	SSLAttributes []Pop3SMonitorSSLAttributesInitParameters `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`
}

type Pop3SMonitorObservation struct {
	SSLAttributes []Pop3SMonitorSSLAttributesObservation `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`
}

type Pop3SMonitorParameters struct {

	// +kubebuilder:validation:Optional
	SSLAttributes []Pop3SMonitorSSLAttributesParameters `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`
}

type Pop3SMonitorSSLAttributesInitParameters struct {
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	SSLProfileRef *string `json:"sslProfileRef,omitempty" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type Pop3SMonitorSSLAttributesObservation struct {
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	SSLProfileRef *string `json:"sslProfileRef,omitempty" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type Pop3SMonitorSSLAttributesParameters struct {

	// +kubebuilder:validation:Optional
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SSLProfileRef *string `json:"sslProfileRef" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type RadiusMonitorInitParameters struct {
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	SharedSecretSecretRef v1.SecretKeySelector `json:"sharedSecretSecretRef" tf:"-"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type RadiusMonitorObservation struct {

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type RadiusMonitorParameters struct {

	// +kubebuilder:validation:Optional
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	// +kubebuilder:validation:Optional
	SharedSecretSecretRef v1.SecretKeySelector `json:"sharedSecretSecretRef" tf:"-"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Username *string `json:"username" tf:"username,omitempty"`
}

type SIPMonitorInitParameters struct {
	SIPMonitorTransport *string `json:"sipMonitorTransport,omitempty" tf:"sip_monitor_transport,omitempty"`

	SIPRequestCode *string `json:"sipRequestCode,omitempty" tf:"sip_request_code,omitempty"`

	SIPResponse *string `json:"sipResponse,omitempty" tf:"sip_response,omitempty"`
}

type SIPMonitorObservation struct {
	SIPMonitorTransport *string `json:"sipMonitorTransport,omitempty" tf:"sip_monitor_transport,omitempty"`

	SIPRequestCode *string `json:"sipRequestCode,omitempty" tf:"sip_request_code,omitempty"`

	SIPResponse *string `json:"sipResponse,omitempty" tf:"sip_response,omitempty"`
}

type SIPMonitorParameters struct {

	// +kubebuilder:validation:Optional
	SIPMonitorTransport *string `json:"sipMonitorTransport,omitempty" tf:"sip_monitor_transport,omitempty"`

	// +kubebuilder:validation:Optional
	SIPRequestCode *string `json:"sipRequestCode,omitempty" tf:"sip_request_code,omitempty"`

	// +kubebuilder:validation:Optional
	SIPResponse *string `json:"sipResponse,omitempty" tf:"sip_response,omitempty"`
}

type SMTPMonitorInitParameters struct {

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Domainname *string `json:"domainname,omitempty" tf:"domainname,omitempty"`

	MailData *string `json:"mailData,omitempty" tf:"mail_data,omitempty"`

	RecipientsIds []*string `json:"recipientsIds,omitempty" tf:"recipients_ids,omitempty"`

	SSLAttributes []SMTPMonitorSSLAttributesInitParameters `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`

	SenderID *string `json:"senderId,omitempty" tf:"sender_id,omitempty"`
}

type SMTPMonitorObservation struct {

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Domainname *string `json:"domainname,omitempty" tf:"domainname,omitempty"`

	MailData *string `json:"mailData,omitempty" tf:"mail_data,omitempty"`

	RecipientsIds []*string `json:"recipientsIds,omitempty" tf:"recipients_ids,omitempty"`

	SSLAttributes []SMTPMonitorSSLAttributesObservation `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`

	SenderID *string `json:"senderId,omitempty" tf:"sender_id,omitempty"`
}

type SMTPMonitorParameters struct {

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Domainname *string `json:"domainname,omitempty" tf:"domainname,omitempty"`

	// +kubebuilder:validation:Optional
	MailData *string `json:"mailData,omitempty" tf:"mail_data,omitempty"`

	// +kubebuilder:validation:Optional
	RecipientsIds []*string `json:"recipientsIds,omitempty" tf:"recipients_ids,omitempty"`

	// +kubebuilder:validation:Optional
	SSLAttributes []SMTPMonitorSSLAttributesParameters `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	SenderID *string `json:"senderId,omitempty" tf:"sender_id,omitempty"`
}

type SMTPMonitorSSLAttributesInitParameters struct {
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	SSLProfileRef *string `json:"sslProfileRef,omitempty" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type SMTPMonitorSSLAttributesObservation struct {
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	SSLProfileRef *string `json:"sslProfileRef,omitempty" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type SMTPMonitorSSLAttributesParameters struct {

	// +kubebuilder:validation:Optional
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SSLProfileRef *string `json:"sslProfileRef" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type SSLAttributesInitParameters struct {
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	SSLProfileRef *string `json:"sslProfileRef,omitempty" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type SSLAttributesObservation struct {
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	SSLProfileRef *string `json:"sslProfileRef,omitempty" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type SSLAttributesParameters struct {

	// +kubebuilder:validation:Optional
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SSLProfileRef *string `json:"sslProfileRef" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type SctpMonitorInitParameters struct {
	SctpRequest *string `json:"sctpRequest,omitempty" tf:"sctp_request,omitempty"`

	SctpResponse *string `json:"sctpResponse,omitempty" tf:"sctp_response,omitempty"`
}

type SctpMonitorObservation struct {
	SctpRequest *string `json:"sctpRequest,omitempty" tf:"sctp_request,omitempty"`

	SctpResponse *string `json:"sctpResponse,omitempty" tf:"sctp_response,omitempty"`
}

type SctpMonitorParameters struct {

	// +kubebuilder:validation:Optional
	SctpRequest *string `json:"sctpRequest,omitempty" tf:"sctp_request,omitempty"`

	// +kubebuilder:validation:Optional
	SctpResponse *string `json:"sctpResponse,omitempty" tf:"sctp_response,omitempty"`
}

type SmtpsMonitorInitParameters struct {

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Domainname *string `json:"domainname,omitempty" tf:"domainname,omitempty"`

	MailData *string `json:"mailData,omitempty" tf:"mail_data,omitempty"`

	RecipientsIds []*string `json:"recipientsIds,omitempty" tf:"recipients_ids,omitempty"`

	SSLAttributes []SmtpsMonitorSSLAttributesInitParameters `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`

	SenderID *string `json:"senderId,omitempty" tf:"sender_id,omitempty"`
}

type SmtpsMonitorObservation struct {

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Domainname *string `json:"domainname,omitempty" tf:"domainname,omitempty"`

	MailData *string `json:"mailData,omitempty" tf:"mail_data,omitempty"`

	RecipientsIds []*string `json:"recipientsIds,omitempty" tf:"recipients_ids,omitempty"`

	SSLAttributes []SmtpsMonitorSSLAttributesObservation `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`

	SenderID *string `json:"senderId,omitempty" tf:"sender_id,omitempty"`
}

type SmtpsMonitorParameters struct {

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Domainname *string `json:"domainname,omitempty" tf:"domainname,omitempty"`

	// +kubebuilder:validation:Optional
	MailData *string `json:"mailData,omitempty" tf:"mail_data,omitempty"`

	// +kubebuilder:validation:Optional
	RecipientsIds []*string `json:"recipientsIds,omitempty" tf:"recipients_ids,omitempty"`

	// +kubebuilder:validation:Optional
	SSLAttributes []SmtpsMonitorSSLAttributesParameters `json:"sslAttributes,omitempty" tf:"ssl_attributes,omitempty"`

	// +kubebuilder:validation:Optional
	SenderID *string `json:"senderId,omitempty" tf:"sender_id,omitempty"`
}

type SmtpsMonitorSSLAttributesInitParameters struct {
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	SSLProfileRef *string `json:"sslProfileRef,omitempty" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type SmtpsMonitorSSLAttributesObservation struct {
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	SSLProfileRef *string `json:"sslProfileRef,omitempty" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type SmtpsMonitorSSLAttributesParameters struct {

	// +kubebuilder:validation:Optional
	PkiProfileRef *string `json:"pkiProfileRef,omitempty" tf:"pki_profile_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SSLKeyAndCertificateRef *string `json:"sslKeyAndCertificateRef,omitempty" tf:"ssl_key_and_certificate_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SSLProfileRef *string `json:"sslProfileRef" tf:"ssl_profile_ref,omitempty"`

	// A user friendly name for this health monitor. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type TCPMonitorInitParameters struct {
	MaintenanceResponse *string `json:"maintenanceResponse,omitempty" tf:"maintenance_response,omitempty"`

	TCPHalfOpen *string `json:"tcpHalfOpen,omitempty" tf:"tcp_half_open,omitempty"`

	TCPRequest *string `json:"tcpRequest,omitempty" tf:"tcp_request,omitempty"`

	TCPResponse *string `json:"tcpResponse,omitempty" tf:"tcp_response,omitempty"`
}

type TCPMonitorObservation struct {
	MaintenanceResponse *string `json:"maintenanceResponse,omitempty" tf:"maintenance_response,omitempty"`

	TCPHalfOpen *string `json:"tcpHalfOpen,omitempty" tf:"tcp_half_open,omitempty"`

	TCPRequest *string `json:"tcpRequest,omitempty" tf:"tcp_request,omitempty"`

	TCPResponse *string `json:"tcpResponse,omitempty" tf:"tcp_response,omitempty"`
}

type TCPMonitorParameters struct {

	// +kubebuilder:validation:Optional
	MaintenanceResponse *string `json:"maintenanceResponse,omitempty" tf:"maintenance_response,omitempty"`

	// +kubebuilder:validation:Optional
	TCPHalfOpen *string `json:"tcpHalfOpen,omitempty" tf:"tcp_half_open,omitempty"`

	// +kubebuilder:validation:Optional
	TCPRequest *string `json:"tcpRequest,omitempty" tf:"tcp_request,omitempty"`

	// +kubebuilder:validation:Optional
	TCPResponse *string `json:"tcpResponse,omitempty" tf:"tcp_response,omitempty"`
}

type UDPMonitorInitParameters struct {
	MaintenanceResponse *string `json:"maintenanceResponse,omitempty" tf:"maintenance_response,omitempty"`

	UDPRequest *string `json:"udpRequest,omitempty" tf:"udp_request,omitempty"`

	UDPResponse *string `json:"udpResponse,omitempty" tf:"udp_response,omitempty"`
}

type UDPMonitorObservation struct {
	MaintenanceResponse *string `json:"maintenanceResponse,omitempty" tf:"maintenance_response,omitempty"`

	UDPRequest *string `json:"udpRequest,omitempty" tf:"udp_request,omitempty"`

	UDPResponse *string `json:"udpResponse,omitempty" tf:"udp_response,omitempty"`
}

type UDPMonitorParameters struct {

	// +kubebuilder:validation:Optional
	MaintenanceResponse *string `json:"maintenanceResponse,omitempty" tf:"maintenance_response,omitempty"`

	// +kubebuilder:validation:Optional
	UDPRequest *string `json:"udpRequest,omitempty" tf:"udp_request,omitempty"`

	// +kubebuilder:validation:Optional
	UDPResponse *string `json:"udpResponse,omitempty" tf:"udp_response,omitempty"`
}

// HealthMonitorSpec defines the desired state of HealthMonitor
type HealthMonitorSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     HealthMonitorParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider HealthMonitorInitParameters `json:"initProvider,omitempty"`
}

// HealthMonitorStatus defines the observed state of HealthMonitor.
type HealthMonitorStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        HealthMonitorObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// HealthMonitor is the Schema for the HealthMonitors API. Creates and manages Avi HealthMonitor.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,avi}
type HealthMonitor struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.type) || (has(self.initProvider) && has(self.initProvider.type))",message="spec.forProvider.type is a required parameter"
	Spec   HealthMonitorSpec   `json:"spec"`
	Status HealthMonitorStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// HealthMonitorList contains a list of HealthMonitors
type HealthMonitorList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []HealthMonitor `json:"items"`
}

// Repository type metadata.
var (
	HealthMonitor_Kind             = "HealthMonitor"
	HealthMonitor_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: HealthMonitor_Kind}.String()
	HealthMonitor_KindAPIVersion   = HealthMonitor_Kind + "." + CRDGroupVersion.String()
	HealthMonitor_GroupVersionKind = CRDGroupVersion.WithKind(HealthMonitor_Kind)
)

func init() {
	SchemeBuilder.Register(&HealthMonitor{}, &HealthMonitorList{})
}
