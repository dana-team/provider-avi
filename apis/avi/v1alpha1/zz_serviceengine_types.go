/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DataVnicsInitParameters struct {
	Adapter *string `json:"adapter,omitempty" tf:"adapter,omitempty"`

	AggregatorChgd *string `json:"aggregatorChgd,omitempty" tf:"aggregator_chgd,omitempty"`

	CanSeDpTakeover *string `json:"canSeDpTakeover,omitempty" tf:"can_se_dp_takeover,omitempty"`

	Connected *string `json:"connected,omitempty" tf:"connected,omitempty"`

	DHCPEnabled *string `json:"dhcpEnabled,omitempty" tf:"dhcp_enabled,omitempty"`

	DelPending *string `json:"delPending,omitempty" tf:"del_pending,omitempty"`

	DeleteVnic *string `json:"deleteVnic,omitempty" tf:"delete_vnic,omitempty"`

	DpDeletionDone *string `json:"dpDeletionDone,omitempty" tf:"dp_deletion_done,omitempty"`

	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	IfName *string `json:"ifName,omitempty" tf:"if_name,omitempty"`

	Ip6AutocfgEnabled *string `json:"ip6AutocfgEnabled,omitempty" tf:"ip6_autocfg_enabled,omitempty"`

	IsAsm *string `json:"isAsm,omitempty" tf:"is_asm,omitempty"`

	IsAviInternalNetwork *string `json:"isAviInternalNetwork,omitempty" tf:"is_avi_internal_network,omitempty"`

	IsHSM *string `json:"isHsm,omitempty" tf:"is_hsm,omitempty"`

	IsMgmt *string `json:"isMgmt,omitempty" tf:"is_mgmt,omitempty"`

	IsPortchannel *string `json:"isPortchannel,omitempty" tf:"is_portchannel,omitempty"`

	LinkUp *string `json:"linkUp,omitempty" tf:"link_up,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	LinuxName *string `json:"linuxName,omitempty" tf:"linux_name,omitempty"`

	MacAddress *string `json:"macAddress,omitempty" tf:"mac_address,omitempty"`

	Members []MembersInitParameters `json:"members,omitempty" tf:"members,omitempty"`

	Mtu *string `json:"mtu,omitempty" tf:"mtu,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	NetworkName *string `json:"networkName,omitempty" tf:"network_name,omitempty"`

	NetworkRef *string `json:"networkRef,omitempty" tf:"network_ref,omitempty"`

	NumRxDescriptors *string `json:"numRxDescriptors,omitempty" tf:"num_rx_descriptors,omitempty"`

	NumTxDescriptors *string `json:"numTxDescriptors,omitempty" tf:"num_tx_descriptors,omitempty"`

	PciID *string `json:"pciId,omitempty" tf:"pci_id,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	PortUUID *string `json:"portUuid,omitempty" tf:"port_uuid,omitempty"`

	VlanID *string `json:"vlanId,omitempty" tf:"vlan_id,omitempty"`

	VlanInterfaces []VlanInterfacesInitParameters `json:"vlanInterfaces,omitempty" tf:"vlan_interfaces,omitempty"`

	VnicNetworks []DataVnicsVnicNetworksInitParameters `json:"vnicNetworks,omitempty" tf:"vnic_networks,omitempty"`

	VrfID *string `json:"vrfId,omitempty" tf:"vrf_id,omitempty"`

	VrfRef *string `json:"vrfRef,omitempty" tf:"vrf_ref,omitempty"`
}

type DataVnicsObservation struct {
	Adapter *string `json:"adapter,omitempty" tf:"adapter,omitempty"`

	AggregatorChgd *string `json:"aggregatorChgd,omitempty" tf:"aggregator_chgd,omitempty"`

	CanSeDpTakeover *string `json:"canSeDpTakeover,omitempty" tf:"can_se_dp_takeover,omitempty"`

	Connected *string `json:"connected,omitempty" tf:"connected,omitempty"`

	DHCPEnabled *string `json:"dhcpEnabled,omitempty" tf:"dhcp_enabled,omitempty"`

	DelPending *string `json:"delPending,omitempty" tf:"del_pending,omitempty"`

	DeleteVnic *string `json:"deleteVnic,omitempty" tf:"delete_vnic,omitempty"`

	DpDeletionDone *string `json:"dpDeletionDone,omitempty" tf:"dp_deletion_done,omitempty"`

	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	IfName *string `json:"ifName,omitempty" tf:"if_name,omitempty"`

	Ip6AutocfgEnabled *string `json:"ip6AutocfgEnabled,omitempty" tf:"ip6_autocfg_enabled,omitempty"`

	IsAsm *string `json:"isAsm,omitempty" tf:"is_asm,omitempty"`

	IsAviInternalNetwork *string `json:"isAviInternalNetwork,omitempty" tf:"is_avi_internal_network,omitempty"`

	IsHSM *string `json:"isHsm,omitempty" tf:"is_hsm,omitempty"`

	IsMgmt *string `json:"isMgmt,omitempty" tf:"is_mgmt,omitempty"`

	IsPortchannel *string `json:"isPortchannel,omitempty" tf:"is_portchannel,omitempty"`

	LinkUp *string `json:"linkUp,omitempty" tf:"link_up,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	LinuxName *string `json:"linuxName,omitempty" tf:"linux_name,omitempty"`

	MacAddress *string `json:"macAddress,omitempty" tf:"mac_address,omitempty"`

	Members []MembersObservation `json:"members,omitempty" tf:"members,omitempty"`

	Mtu *string `json:"mtu,omitempty" tf:"mtu,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	NetworkName *string `json:"networkName,omitempty" tf:"network_name,omitempty"`

	NetworkRef *string `json:"networkRef,omitempty" tf:"network_ref,omitempty"`

	NumRxDescriptors *string `json:"numRxDescriptors,omitempty" tf:"num_rx_descriptors,omitempty"`

	NumTxDescriptors *string `json:"numTxDescriptors,omitempty" tf:"num_tx_descriptors,omitempty"`

	PciID *string `json:"pciId,omitempty" tf:"pci_id,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	PortUUID *string `json:"portUuid,omitempty" tf:"port_uuid,omitempty"`

	VlanID *string `json:"vlanId,omitempty" tf:"vlan_id,omitempty"`

	VlanInterfaces []VlanInterfacesObservation `json:"vlanInterfaces,omitempty" tf:"vlan_interfaces,omitempty"`

	VnicNetworks []DataVnicsVnicNetworksObservation `json:"vnicNetworks,omitempty" tf:"vnic_networks,omitempty"`

	VrfID *string `json:"vrfId,omitempty" tf:"vrf_id,omitempty"`

	VrfRef *string `json:"vrfRef,omitempty" tf:"vrf_ref,omitempty"`
}

type DataVnicsParameters struct {

	// +kubebuilder:validation:Optional
	Adapter *string `json:"adapter,omitempty" tf:"adapter,omitempty"`

	// +kubebuilder:validation:Optional
	AggregatorChgd *string `json:"aggregatorChgd,omitempty" tf:"aggregator_chgd,omitempty"`

	// +kubebuilder:validation:Optional
	CanSeDpTakeover *string `json:"canSeDpTakeover,omitempty" tf:"can_se_dp_takeover,omitempty"`

	// +kubebuilder:validation:Optional
	Connected *string `json:"connected,omitempty" tf:"connected,omitempty"`

	// +kubebuilder:validation:Optional
	DHCPEnabled *string `json:"dhcpEnabled,omitempty" tf:"dhcp_enabled,omitempty"`

	// +kubebuilder:validation:Optional
	DelPending *string `json:"delPending,omitempty" tf:"del_pending,omitempty"`

	// +kubebuilder:validation:Optional
	DeleteVnic *string `json:"deleteVnic,omitempty" tf:"delete_vnic,omitempty"`

	// +kubebuilder:validation:Optional
	DpDeletionDone *string `json:"dpDeletionDone,omitempty" tf:"dp_deletion_done,omitempty"`

	// +kubebuilder:validation:Optional
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	IfName *string `json:"ifName,omitempty" tf:"if_name,omitempty"`

	// +kubebuilder:validation:Optional
	Ip6AutocfgEnabled *string `json:"ip6AutocfgEnabled,omitempty" tf:"ip6_autocfg_enabled,omitempty"`

	// +kubebuilder:validation:Optional
	IsAsm *string `json:"isAsm,omitempty" tf:"is_asm,omitempty"`

	// +kubebuilder:validation:Optional
	IsAviInternalNetwork *string `json:"isAviInternalNetwork,omitempty" tf:"is_avi_internal_network,omitempty"`

	// +kubebuilder:validation:Optional
	IsHSM *string `json:"isHsm,omitempty" tf:"is_hsm,omitempty"`

	// +kubebuilder:validation:Optional
	IsMgmt *string `json:"isMgmt,omitempty" tf:"is_mgmt,omitempty"`

	// +kubebuilder:validation:Optional
	IsPortchannel *string `json:"isPortchannel,omitempty" tf:"is_portchannel,omitempty"`

	// +kubebuilder:validation:Optional
	LinkUp *string `json:"linkUp,omitempty" tf:"link_up,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	LinuxName *string `json:"linuxName,omitempty" tf:"linux_name,omitempty"`

	// +kubebuilder:validation:Optional
	MacAddress *string `json:"macAddress" tf:"mac_address,omitempty"`

	// +kubebuilder:validation:Optional
	Members []MembersParameters `json:"members,omitempty" tf:"members,omitempty"`

	// +kubebuilder:validation:Optional
	Mtu *string `json:"mtu,omitempty" tf:"mtu,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	NetworkName *string `json:"networkName,omitempty" tf:"network_name,omitempty"`

	// +kubebuilder:validation:Optional
	NetworkRef *string `json:"networkRef,omitempty" tf:"network_ref,omitempty"`

	// +kubebuilder:validation:Optional
	NumRxDescriptors *string `json:"numRxDescriptors,omitempty" tf:"num_rx_descriptors,omitempty"`

	// +kubebuilder:validation:Optional
	NumTxDescriptors *string `json:"numTxDescriptors,omitempty" tf:"num_tx_descriptors,omitempty"`

	// +kubebuilder:validation:Optional
	PciID *string `json:"pciId,omitempty" tf:"pci_id,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	PortUUID *string `json:"portUuid,omitempty" tf:"port_uuid,omitempty"`

	// +kubebuilder:validation:Optional
	VlanID *string `json:"vlanId,omitempty" tf:"vlan_id,omitempty"`

	// +kubebuilder:validation:Optional
	VlanInterfaces []VlanInterfacesParameters `json:"vlanInterfaces,omitempty" tf:"vlan_interfaces,omitempty"`

	// +kubebuilder:validation:Optional
	VnicNetworks []DataVnicsVnicNetworksParameters `json:"vnicNetworks,omitempty" tf:"vnic_networks,omitempty"`

	// +kubebuilder:validation:Optional
	VrfID *string `json:"vrfId,omitempty" tf:"vrf_id,omitempty"`

	// +kubebuilder:validation:Optional
	VrfRef *string `json:"vrfRef,omitempty" tf:"vrf_ref,omitempty"`
}

type DataVnicsVnicNetworksIPInitParameters struct {
	IPAddr []VnicNetworksIPIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type DataVnicsVnicNetworksIPObservation struct {
	IPAddr []VnicNetworksIPIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type DataVnicsVnicNetworksIPParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []VnicNetworksIPIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type DataVnicsVnicNetworksInitParameters struct {
	CtlrAlloc *string `json:"ctlrAlloc,omitempty" tf:"ctlr_alloc,omitempty"`

	IP []DataVnicsVnicNetworksIPInitParameters `json:"ip,omitempty" tf:"ip,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`
}

type DataVnicsVnicNetworksObservation struct {
	CtlrAlloc *string `json:"ctlrAlloc,omitempty" tf:"ctlr_alloc,omitempty"`

	IP []DataVnicsVnicNetworksIPObservation `json:"ip,omitempty" tf:"ip,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`
}

type DataVnicsVnicNetworksParameters struct {

	// +kubebuilder:validation:Optional
	CtlrAlloc *string `json:"ctlrAlloc,omitempty" tf:"ctlr_alloc,omitempty"`

	// +kubebuilder:validation:Optional
	IP []DataVnicsVnicNetworksIPParameters `json:"ip" tf:"ip,omitempty"`

	// +kubebuilder:validation:Optional
	Mode *string `json:"mode" tf:"mode,omitempty"`
}

type IPIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type IPIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type IPIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type MembersInitParameters struct {
	Active *string `json:"active,omitempty" tf:"active,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	IfName *string `json:"ifName,omitempty" tf:"if_name,omitempty"`

	MacAddress *string `json:"macAddress,omitempty" tf:"mac_address,omitempty"`
}

type MembersObservation struct {
	Active *string `json:"active,omitempty" tf:"active,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	IfName *string `json:"ifName,omitempty" tf:"if_name,omitempty"`

	MacAddress *string `json:"macAddress,omitempty" tf:"mac_address,omitempty"`
}

type MembersParameters struct {

	// +kubebuilder:validation:Optional
	Active *string `json:"active,omitempty" tf:"active,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	IfName *string `json:"ifName" tf:"if_name,omitempty"`

	// +kubebuilder:validation:Optional
	MacAddress *string `json:"macAddress,omitempty" tf:"mac_address,omitempty"`
}

type MgmtVnicInitParameters struct {
	Adapter *string `json:"adapter,omitempty" tf:"adapter,omitempty"`

	AggregatorChgd *string `json:"aggregatorChgd,omitempty" tf:"aggregator_chgd,omitempty"`

	CanSeDpTakeover *string `json:"canSeDpTakeover,omitempty" tf:"can_se_dp_takeover,omitempty"`

	Connected *string `json:"connected,omitempty" tf:"connected,omitempty"`

	DHCPEnabled *string `json:"dhcpEnabled,omitempty" tf:"dhcp_enabled,omitempty"`

	DelPending *string `json:"delPending,omitempty" tf:"del_pending,omitempty"`

	DeleteVnic *string `json:"deleteVnic,omitempty" tf:"delete_vnic,omitempty"`

	DpDeletionDone *string `json:"dpDeletionDone,omitempty" tf:"dp_deletion_done,omitempty"`

	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	IfName *string `json:"ifName,omitempty" tf:"if_name,omitempty"`

	Ip6AutocfgEnabled *string `json:"ip6AutocfgEnabled,omitempty" tf:"ip6_autocfg_enabled,omitempty"`

	IsAsm *string `json:"isAsm,omitempty" tf:"is_asm,omitempty"`

	IsAviInternalNetwork *string `json:"isAviInternalNetwork,omitempty" tf:"is_avi_internal_network,omitempty"`

	IsHSM *string `json:"isHsm,omitempty" tf:"is_hsm,omitempty"`

	IsMgmt *string `json:"isMgmt,omitempty" tf:"is_mgmt,omitempty"`

	IsPortchannel *string `json:"isPortchannel,omitempty" tf:"is_portchannel,omitempty"`

	LinkUp *string `json:"linkUp,omitempty" tf:"link_up,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	LinuxName *string `json:"linuxName,omitempty" tf:"linux_name,omitempty"`

	MacAddress *string `json:"macAddress,omitempty" tf:"mac_address,omitempty"`

	Members []MgmtVnicMembersInitParameters `json:"members,omitempty" tf:"members,omitempty"`

	Mtu *string `json:"mtu,omitempty" tf:"mtu,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	NetworkName *string `json:"networkName,omitempty" tf:"network_name,omitempty"`

	NetworkRef *string `json:"networkRef,omitempty" tf:"network_ref,omitempty"`

	NumRxDescriptors *string `json:"numRxDescriptors,omitempty" tf:"num_rx_descriptors,omitempty"`

	NumTxDescriptors *string `json:"numTxDescriptors,omitempty" tf:"num_tx_descriptors,omitempty"`

	PciID *string `json:"pciId,omitempty" tf:"pci_id,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	PortUUID *string `json:"portUuid,omitempty" tf:"port_uuid,omitempty"`

	VlanID *string `json:"vlanId,omitempty" tf:"vlan_id,omitempty"`

	VlanInterfaces []MgmtVnicVlanInterfacesInitParameters `json:"vlanInterfaces,omitempty" tf:"vlan_interfaces,omitempty"`

	VnicNetworks []MgmtVnicVnicNetworksInitParameters `json:"vnicNetworks,omitempty" tf:"vnic_networks,omitempty"`

	VrfID *string `json:"vrfId,omitempty" tf:"vrf_id,omitempty"`

	VrfRef *string `json:"vrfRef,omitempty" tf:"vrf_ref,omitempty"`
}

type MgmtVnicMembersInitParameters struct {
	Active *string `json:"active,omitempty" tf:"active,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	IfName *string `json:"ifName,omitempty" tf:"if_name,omitempty"`

	MacAddress *string `json:"macAddress,omitempty" tf:"mac_address,omitempty"`
}

type MgmtVnicMembersObservation struct {
	Active *string `json:"active,omitempty" tf:"active,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	IfName *string `json:"ifName,omitempty" tf:"if_name,omitempty"`

	MacAddress *string `json:"macAddress,omitempty" tf:"mac_address,omitempty"`
}

type MgmtVnicMembersParameters struct {

	// +kubebuilder:validation:Optional
	Active *string `json:"active,omitempty" tf:"active,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	IfName *string `json:"ifName" tf:"if_name,omitempty"`

	// +kubebuilder:validation:Optional
	MacAddress *string `json:"macAddress,omitempty" tf:"mac_address,omitempty"`
}

type MgmtVnicObservation struct {
	Adapter *string `json:"adapter,omitempty" tf:"adapter,omitempty"`

	AggregatorChgd *string `json:"aggregatorChgd,omitempty" tf:"aggregator_chgd,omitempty"`

	CanSeDpTakeover *string `json:"canSeDpTakeover,omitempty" tf:"can_se_dp_takeover,omitempty"`

	Connected *string `json:"connected,omitempty" tf:"connected,omitempty"`

	DHCPEnabled *string `json:"dhcpEnabled,omitempty" tf:"dhcp_enabled,omitempty"`

	DelPending *string `json:"delPending,omitempty" tf:"del_pending,omitempty"`

	DeleteVnic *string `json:"deleteVnic,omitempty" tf:"delete_vnic,omitempty"`

	DpDeletionDone *string `json:"dpDeletionDone,omitempty" tf:"dp_deletion_done,omitempty"`

	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	IfName *string `json:"ifName,omitempty" tf:"if_name,omitempty"`

	Ip6AutocfgEnabled *string `json:"ip6AutocfgEnabled,omitempty" tf:"ip6_autocfg_enabled,omitempty"`

	IsAsm *string `json:"isAsm,omitempty" tf:"is_asm,omitempty"`

	IsAviInternalNetwork *string `json:"isAviInternalNetwork,omitempty" tf:"is_avi_internal_network,omitempty"`

	IsHSM *string `json:"isHsm,omitempty" tf:"is_hsm,omitempty"`

	IsMgmt *string `json:"isMgmt,omitempty" tf:"is_mgmt,omitempty"`

	IsPortchannel *string `json:"isPortchannel,omitempty" tf:"is_portchannel,omitempty"`

	LinkUp *string `json:"linkUp,omitempty" tf:"link_up,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	LinuxName *string `json:"linuxName,omitempty" tf:"linux_name,omitempty"`

	MacAddress *string `json:"macAddress,omitempty" tf:"mac_address,omitempty"`

	Members []MgmtVnicMembersObservation `json:"members,omitempty" tf:"members,omitempty"`

	Mtu *string `json:"mtu,omitempty" tf:"mtu,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	NetworkName *string `json:"networkName,omitempty" tf:"network_name,omitempty"`

	NetworkRef *string `json:"networkRef,omitempty" tf:"network_ref,omitempty"`

	NumRxDescriptors *string `json:"numRxDescriptors,omitempty" tf:"num_rx_descriptors,omitempty"`

	NumTxDescriptors *string `json:"numTxDescriptors,omitempty" tf:"num_tx_descriptors,omitempty"`

	PciID *string `json:"pciId,omitempty" tf:"pci_id,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	PortUUID *string `json:"portUuid,omitempty" tf:"port_uuid,omitempty"`

	VlanID *string `json:"vlanId,omitempty" tf:"vlan_id,omitempty"`

	VlanInterfaces []MgmtVnicVlanInterfacesObservation `json:"vlanInterfaces,omitempty" tf:"vlan_interfaces,omitempty"`

	VnicNetworks []MgmtVnicVnicNetworksObservation `json:"vnicNetworks,omitempty" tf:"vnic_networks,omitempty"`

	VrfID *string `json:"vrfId,omitempty" tf:"vrf_id,omitempty"`

	VrfRef *string `json:"vrfRef,omitempty" tf:"vrf_ref,omitempty"`
}

type MgmtVnicParameters struct {

	// +kubebuilder:validation:Optional
	Adapter *string `json:"adapter,omitempty" tf:"adapter,omitempty"`

	// +kubebuilder:validation:Optional
	AggregatorChgd *string `json:"aggregatorChgd,omitempty" tf:"aggregator_chgd,omitempty"`

	// +kubebuilder:validation:Optional
	CanSeDpTakeover *string `json:"canSeDpTakeover,omitempty" tf:"can_se_dp_takeover,omitempty"`

	// +kubebuilder:validation:Optional
	Connected *string `json:"connected,omitempty" tf:"connected,omitempty"`

	// +kubebuilder:validation:Optional
	DHCPEnabled *string `json:"dhcpEnabled,omitempty" tf:"dhcp_enabled,omitempty"`

	// +kubebuilder:validation:Optional
	DelPending *string `json:"delPending,omitempty" tf:"del_pending,omitempty"`

	// +kubebuilder:validation:Optional
	DeleteVnic *string `json:"deleteVnic,omitempty" tf:"delete_vnic,omitempty"`

	// +kubebuilder:validation:Optional
	DpDeletionDone *string `json:"dpDeletionDone,omitempty" tf:"dp_deletion_done,omitempty"`

	// +kubebuilder:validation:Optional
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	IfName *string `json:"ifName,omitempty" tf:"if_name,omitempty"`

	// +kubebuilder:validation:Optional
	Ip6AutocfgEnabled *string `json:"ip6AutocfgEnabled,omitempty" tf:"ip6_autocfg_enabled,omitempty"`

	// +kubebuilder:validation:Optional
	IsAsm *string `json:"isAsm,omitempty" tf:"is_asm,omitempty"`

	// +kubebuilder:validation:Optional
	IsAviInternalNetwork *string `json:"isAviInternalNetwork,omitempty" tf:"is_avi_internal_network,omitempty"`

	// +kubebuilder:validation:Optional
	IsHSM *string `json:"isHsm,omitempty" tf:"is_hsm,omitempty"`

	// +kubebuilder:validation:Optional
	IsMgmt *string `json:"isMgmt,omitempty" tf:"is_mgmt,omitempty"`

	// +kubebuilder:validation:Optional
	IsPortchannel *string `json:"isPortchannel,omitempty" tf:"is_portchannel,omitempty"`

	// +kubebuilder:validation:Optional
	LinkUp *string `json:"linkUp,omitempty" tf:"link_up,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	LinuxName *string `json:"linuxName,omitempty" tf:"linux_name,omitempty"`

	// +kubebuilder:validation:Optional
	MacAddress *string `json:"macAddress" tf:"mac_address,omitempty"`

	// +kubebuilder:validation:Optional
	Members []MgmtVnicMembersParameters `json:"members,omitempty" tf:"members,omitempty"`

	// +kubebuilder:validation:Optional
	Mtu *string `json:"mtu,omitempty" tf:"mtu,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	NetworkName *string `json:"networkName,omitempty" tf:"network_name,omitempty"`

	// +kubebuilder:validation:Optional
	NetworkRef *string `json:"networkRef,omitempty" tf:"network_ref,omitempty"`

	// +kubebuilder:validation:Optional
	NumRxDescriptors *string `json:"numRxDescriptors,omitempty" tf:"num_rx_descriptors,omitempty"`

	// +kubebuilder:validation:Optional
	NumTxDescriptors *string `json:"numTxDescriptors,omitempty" tf:"num_tx_descriptors,omitempty"`

	// +kubebuilder:validation:Optional
	PciID *string `json:"pciId,omitempty" tf:"pci_id,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	PortUUID *string `json:"portUuid,omitempty" tf:"port_uuid,omitempty"`

	// +kubebuilder:validation:Optional
	VlanID *string `json:"vlanId,omitempty" tf:"vlan_id,omitempty"`

	// +kubebuilder:validation:Optional
	VlanInterfaces []MgmtVnicVlanInterfacesParameters `json:"vlanInterfaces,omitempty" tf:"vlan_interfaces,omitempty"`

	// +kubebuilder:validation:Optional
	VnicNetworks []MgmtVnicVnicNetworksParameters `json:"vnicNetworks,omitempty" tf:"vnic_networks,omitempty"`

	// +kubebuilder:validation:Optional
	VrfID *string `json:"vrfId,omitempty" tf:"vrf_id,omitempty"`

	// +kubebuilder:validation:Optional
	VrfRef *string `json:"vrfRef,omitempty" tf:"vrf_ref,omitempty"`
}

type MgmtVnicVlanInterfacesInitParameters struct {
	DHCPEnabled *string `json:"dhcpEnabled,omitempty" tf:"dhcp_enabled,omitempty"`

	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	IfName *string `json:"ifName,omitempty" tf:"if_name,omitempty"`

	Ip6AutocfgEnabled *string `json:"ip6AutocfgEnabled,omitempty" tf:"ip6_autocfg_enabled,omitempty"`

	IsMgmt *string `json:"isMgmt,omitempty" tf:"is_mgmt,omitempty"`

	VlanID *string `json:"vlanId,omitempty" tf:"vlan_id,omitempty"`

	VnicNetworks []VlanInterfacesVnicNetworksInitParameters `json:"vnicNetworks,omitempty" tf:"vnic_networks,omitempty"`

	VrfRef *string `json:"vrfRef,omitempty" tf:"vrf_ref,omitempty"`
}

type MgmtVnicVlanInterfacesObservation struct {
	DHCPEnabled *string `json:"dhcpEnabled,omitempty" tf:"dhcp_enabled,omitempty"`

	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	IfName *string `json:"ifName,omitempty" tf:"if_name,omitempty"`

	Ip6AutocfgEnabled *string `json:"ip6AutocfgEnabled,omitempty" tf:"ip6_autocfg_enabled,omitempty"`

	IsMgmt *string `json:"isMgmt,omitempty" tf:"is_mgmt,omitempty"`

	VlanID *string `json:"vlanId,omitempty" tf:"vlan_id,omitempty"`

	VnicNetworks []VlanInterfacesVnicNetworksObservation `json:"vnicNetworks,omitempty" tf:"vnic_networks,omitempty"`

	VrfRef *string `json:"vrfRef,omitempty" tf:"vrf_ref,omitempty"`
}

type MgmtVnicVlanInterfacesParameters struct {

	// +kubebuilder:validation:Optional
	DHCPEnabled *string `json:"dhcpEnabled,omitempty" tf:"dhcp_enabled,omitempty"`

	// +kubebuilder:validation:Optional
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	IfName *string `json:"ifName" tf:"if_name,omitempty"`

	// +kubebuilder:validation:Optional
	Ip6AutocfgEnabled *string `json:"ip6AutocfgEnabled,omitempty" tf:"ip6_autocfg_enabled,omitempty"`

	// +kubebuilder:validation:Optional
	IsMgmt *string `json:"isMgmt,omitempty" tf:"is_mgmt,omitempty"`

	// +kubebuilder:validation:Optional
	VlanID *string `json:"vlanId,omitempty" tf:"vlan_id,omitempty"`

	// +kubebuilder:validation:Optional
	VnicNetworks []VlanInterfacesVnicNetworksParameters `json:"vnicNetworks,omitempty" tf:"vnic_networks,omitempty"`

	// +kubebuilder:validation:Optional
	VrfRef *string `json:"vrfRef,omitempty" tf:"vrf_ref,omitempty"`
}

type MgmtVnicVnicNetworksIPIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MgmtVnicVnicNetworksIPIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MgmtVnicVnicNetworksIPIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type MgmtVnicVnicNetworksIPInitParameters struct {
	IPAddr []MgmtVnicVnicNetworksIPIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type MgmtVnicVnicNetworksIPObservation struct {
	IPAddr []MgmtVnicVnicNetworksIPIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type MgmtVnicVnicNetworksIPParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []MgmtVnicVnicNetworksIPIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type MgmtVnicVnicNetworksInitParameters struct {
	CtlrAlloc *string `json:"ctlrAlloc,omitempty" tf:"ctlr_alloc,omitempty"`

	IP []MgmtVnicVnicNetworksIPInitParameters `json:"ip,omitempty" tf:"ip,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`
}

type MgmtVnicVnicNetworksObservation struct {
	CtlrAlloc *string `json:"ctlrAlloc,omitempty" tf:"ctlr_alloc,omitempty"`

	IP []MgmtVnicVnicNetworksIPObservation `json:"ip,omitempty" tf:"ip,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`
}

type MgmtVnicVnicNetworksParameters struct {

	// +kubebuilder:validation:Optional
	CtlrAlloc *string `json:"ctlrAlloc,omitempty" tf:"ctlr_alloc,omitempty"`

	// +kubebuilder:validation:Optional
	IP []MgmtVnicVnicNetworksIPParameters `json:"ip" tf:"ip,omitempty"`

	// +kubebuilder:validation:Optional
	Mode *string `json:"mode" tf:"mode,omitempty"`
}

type ResourcesInitParameters struct {
	CoresPerSocket *string `json:"coresPerSocket,omitempty" tf:"cores_per_socket,omitempty"`

	Disk *string `json:"disk,omitempty" tf:"disk,omitempty"`

	HyperThreading *string `json:"hyperThreading,omitempty" tf:"hyper_threading,omitempty"`

	HypervisorMode *string `json:"hypervisorMode,omitempty" tf:"hypervisor_mode,omitempty"`

	Memory *string `json:"memory,omitempty" tf:"memory,omitempty"`

	NumDatapathProcesses *string `json:"numDatapathProcesses,omitempty" tf:"num_datapath_processes,omitempty"`

	NumVcpus *string `json:"numVcpus,omitempty" tf:"num_vcpus,omitempty"`

	Sockets *string `json:"sockets,omitempty" tf:"sockets,omitempty"`
}

type ResourcesObservation struct {
	CoresPerSocket *string `json:"coresPerSocket,omitempty" tf:"cores_per_socket,omitempty"`

	Disk *string `json:"disk,omitempty" tf:"disk,omitempty"`

	HyperThreading *string `json:"hyperThreading,omitempty" tf:"hyper_threading,omitempty"`

	HypervisorMode *string `json:"hypervisorMode,omitempty" tf:"hypervisor_mode,omitempty"`

	Memory *string `json:"memory,omitempty" tf:"memory,omitempty"`

	NumDatapathProcesses *string `json:"numDatapathProcesses,omitempty" tf:"num_datapath_processes,omitempty"`

	NumVcpus *string `json:"numVcpus,omitempty" tf:"num_vcpus,omitempty"`

	Sockets *string `json:"sockets,omitempty" tf:"sockets,omitempty"`
}

type ResourcesParameters struct {

	// +kubebuilder:validation:Optional
	CoresPerSocket *string `json:"coresPerSocket,omitempty" tf:"cores_per_socket,omitempty"`

	// +kubebuilder:validation:Optional
	Disk *string `json:"disk" tf:"disk,omitempty"`

	// +kubebuilder:validation:Optional
	HyperThreading *string `json:"hyperThreading,omitempty" tf:"hyper_threading,omitempty"`

	// +kubebuilder:validation:Optional
	HypervisorMode *string `json:"hypervisorMode,omitempty" tf:"hypervisor_mode,omitempty"`

	// +kubebuilder:validation:Optional
	Memory *string `json:"memory" tf:"memory,omitempty"`

	// +kubebuilder:validation:Optional
	NumDatapathProcesses *string `json:"numDatapathProcesses,omitempty" tf:"num_datapath_processes,omitempty"`

	// +kubebuilder:validation:Optional
	NumVcpus *string `json:"numVcpus" tf:"num_vcpus,omitempty"`

	// +kubebuilder:validation:Optional
	Sockets *string `json:"sockets,omitempty" tf:"sockets,omitempty"`
}

type ServiceEngineInitParameters struct {

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	// It is a reference to an object of type cloud. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	CloudRef *string `json:"cloudRef,omitempty" tf:"cloud_ref,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ContainerMode *string `json:"containerMode,omitempty" tf:"container_mode,omitempty"`

	// Enum options - container_type_bridge, container_type_host, container_type_host_dpdk. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ContainerType *string `json:"containerType,omitempty" tf:"container_type,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ControllerCreated *string `json:"controllerCreated,omitempty" tf:"controller_created,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ControllerIP *string `json:"controllerIp,omitempty" tf:"controller_ip,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	DataVnics []DataVnicsInitParameters `json:"dataVnics,omitempty" tf:"data_vnics,omitempty"`

	// Inorder to disable se set this field appropriately. Enum options - SE_STATE_ENABLED, SE_STATE_DISABLED_FOR_PLACEMENT, SE_STATE_DISABLED, SE_STATE_DISABLED_FORCE. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	EnableState *string `json:"enableState,omitempty" tf:"enable_state,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Flavor *string `json:"flavor,omitempty" tf:"flavor,omitempty"`

	// It is a reference to an object of type vimgrhostruntime. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	HostRef *string `json:"hostRef,omitempty" tf:"host_ref,omitempty"`

	// Enum options - default, vmware_esx, kvm, vmware_vsan, xen. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Hypervisor *string `json:"hypervisor,omitempty" tf:"hypervisor,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	MgmtVnic []MgmtVnicInitParameters `json:"mgmtVnic,omitempty" tf:"mgmt_vnic,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// If set to true, controller does not hotplugg the vnics. Field introduced in 30.2.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	NsxtNoHotplug *string `json:"nsxtNoHotplug,omitempty" tf:"nsxt_no_hotplug,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Resources []ResourcesInitParameters `json:"resources,omitempty" tf:"resources,omitempty"`

	// It is a reference to an object of type serviceenginegroup. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	SeGroupRef *string `json:"seGroupRef,omitempty" tf:"se_group_ref,omitempty"`

	// It is a reference to an object of type tenant. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type ServiceEngineObservation struct {

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	// It is a reference to an object of type cloud. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	CloudRef *string `json:"cloudRef,omitempty" tf:"cloud_ref,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ContainerMode *string `json:"containerMode,omitempty" tf:"container_mode,omitempty"`

	// Enum options - container_type_bridge, container_type_host, container_type_host_dpdk. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ContainerType *string `json:"containerType,omitempty" tf:"container_type,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ControllerCreated *string `json:"controllerCreated,omitempty" tf:"controller_created,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ControllerIP *string `json:"controllerIp,omitempty" tf:"controller_ip,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	DataVnics []DataVnicsObservation `json:"dataVnics,omitempty" tf:"data_vnics,omitempty"`

	// Inorder to disable se set this field appropriately. Enum options - SE_STATE_ENABLED, SE_STATE_DISABLED_FOR_PLACEMENT, SE_STATE_DISABLED, SE_STATE_DISABLED_FORCE. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	EnableState *string `json:"enableState,omitempty" tf:"enable_state,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Flavor *string `json:"flavor,omitempty" tf:"flavor,omitempty"`

	// It is a reference to an object of type vimgrhostruntime. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	HostRef *string `json:"hostRef,omitempty" tf:"host_ref,omitempty"`

	// Enum options - default, vmware_esx, kvm, vmware_vsan, xen. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Hypervisor *string `json:"hypervisor,omitempty" tf:"hypervisor,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	MgmtVnic []MgmtVnicObservation `json:"mgmtVnic,omitempty" tf:"mgmt_vnic,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// If set to true, controller does not hotplugg the vnics. Field introduced in 30.2.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	NsxtNoHotplug *string `json:"nsxtNoHotplug,omitempty" tf:"nsxt_no_hotplug,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Resources []ResourcesObservation `json:"resources,omitempty" tf:"resources,omitempty"`

	// It is a reference to an object of type serviceenginegroup. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	SeGroupRef *string `json:"seGroupRef,omitempty" tf:"se_group_ref,omitempty"`

	// It is a reference to an object of type tenant. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type ServiceEngineParameters struct {

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	// It is a reference to an object of type cloud. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	CloudRef *string `json:"cloudRef,omitempty" tf:"cloud_ref,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ContainerMode *string `json:"containerMode,omitempty" tf:"container_mode,omitempty"`

	// Enum options - container_type_bridge, container_type_host, container_type_host_dpdk. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ContainerType *string `json:"containerType,omitempty" tf:"container_type,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ControllerCreated *string `json:"controllerCreated,omitempty" tf:"controller_created,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ControllerIP *string `json:"controllerIp,omitempty" tf:"controller_ip,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	DataVnics []DataVnicsParameters `json:"dataVnics,omitempty" tf:"data_vnics,omitempty"`

	// Inorder to disable se set this field appropriately. Enum options - SE_STATE_ENABLED, SE_STATE_DISABLED_FOR_PLACEMENT, SE_STATE_DISABLED, SE_STATE_DISABLED_FORCE. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	EnableState *string `json:"enableState,omitempty" tf:"enable_state,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Flavor *string `json:"flavor,omitempty" tf:"flavor,omitempty"`

	// It is a reference to an object of type vimgrhostruntime. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	HostRef *string `json:"hostRef,omitempty" tf:"host_ref,omitempty"`

	// Enum options - default, vmware_esx, kvm, vmware_vsan, xen. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Hypervisor *string `json:"hypervisor,omitempty" tf:"hypervisor,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	MgmtVnic []MgmtVnicParameters `json:"mgmtVnic,omitempty" tf:"mgmt_vnic,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// If set to true, controller does not hotplugg the vnics. Field introduced in 30.2.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	NsxtNoHotplug *string `json:"nsxtNoHotplug,omitempty" tf:"nsxt_no_hotplug,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Resources []ResourcesParameters `json:"resources,omitempty" tf:"resources,omitempty"`

	// It is a reference to an object of type serviceenginegroup. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	SeGroupRef *string `json:"seGroupRef,omitempty" tf:"se_group_ref,omitempty"`

	// It is a reference to an object of type tenant. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`
}

type VlanInterfacesInitParameters struct {
	DHCPEnabled *string `json:"dhcpEnabled,omitempty" tf:"dhcp_enabled,omitempty"`

	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	IfName *string `json:"ifName,omitempty" tf:"if_name,omitempty"`

	Ip6AutocfgEnabled *string `json:"ip6AutocfgEnabled,omitempty" tf:"ip6_autocfg_enabled,omitempty"`

	IsMgmt *string `json:"isMgmt,omitempty" tf:"is_mgmt,omitempty"`

	VlanID *string `json:"vlanId,omitempty" tf:"vlan_id,omitempty"`

	VnicNetworks []VnicNetworksInitParameters `json:"vnicNetworks,omitempty" tf:"vnic_networks,omitempty"`

	VrfRef *string `json:"vrfRef,omitempty" tf:"vrf_ref,omitempty"`
}

type VlanInterfacesObservation struct {
	DHCPEnabled *string `json:"dhcpEnabled,omitempty" tf:"dhcp_enabled,omitempty"`

	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	IfName *string `json:"ifName,omitempty" tf:"if_name,omitempty"`

	Ip6AutocfgEnabled *string `json:"ip6AutocfgEnabled,omitempty" tf:"ip6_autocfg_enabled,omitempty"`

	IsMgmt *string `json:"isMgmt,omitempty" tf:"is_mgmt,omitempty"`

	VlanID *string `json:"vlanId,omitempty" tf:"vlan_id,omitempty"`

	VnicNetworks []VnicNetworksObservation `json:"vnicNetworks,omitempty" tf:"vnic_networks,omitempty"`

	VrfRef *string `json:"vrfRef,omitempty" tf:"vrf_ref,omitempty"`
}

type VlanInterfacesParameters struct {

	// +kubebuilder:validation:Optional
	DHCPEnabled *string `json:"dhcpEnabled,omitempty" tf:"dhcp_enabled,omitempty"`

	// +kubebuilder:validation:Optional
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	IfName *string `json:"ifName" tf:"if_name,omitempty"`

	// +kubebuilder:validation:Optional
	Ip6AutocfgEnabled *string `json:"ip6AutocfgEnabled,omitempty" tf:"ip6_autocfg_enabled,omitempty"`

	// +kubebuilder:validation:Optional
	IsMgmt *string `json:"isMgmt,omitempty" tf:"is_mgmt,omitempty"`

	// +kubebuilder:validation:Optional
	VlanID *string `json:"vlanId,omitempty" tf:"vlan_id,omitempty"`

	// +kubebuilder:validation:Optional
	VnicNetworks []VnicNetworksParameters `json:"vnicNetworks,omitempty" tf:"vnic_networks,omitempty"`

	// +kubebuilder:validation:Optional
	VrfRef *string `json:"vrfRef,omitempty" tf:"vrf_ref,omitempty"`
}

type VlanInterfacesVnicNetworksIPIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type VlanInterfacesVnicNetworksIPIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type VlanInterfacesVnicNetworksIPIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type VlanInterfacesVnicNetworksIPInitParameters struct {
	IPAddr []VlanInterfacesVnicNetworksIPIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type VlanInterfacesVnicNetworksIPObservation struct {
	IPAddr []VlanInterfacesVnicNetworksIPIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type VlanInterfacesVnicNetworksIPParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []VlanInterfacesVnicNetworksIPIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type VlanInterfacesVnicNetworksInitParameters struct {
	CtlrAlloc *string `json:"ctlrAlloc,omitempty" tf:"ctlr_alloc,omitempty"`

	IP []VlanInterfacesVnicNetworksIPInitParameters `json:"ip,omitempty" tf:"ip,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`
}

type VlanInterfacesVnicNetworksObservation struct {
	CtlrAlloc *string `json:"ctlrAlloc,omitempty" tf:"ctlr_alloc,omitempty"`

	IP []VlanInterfacesVnicNetworksIPObservation `json:"ip,omitempty" tf:"ip,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`
}

type VlanInterfacesVnicNetworksParameters struct {

	// +kubebuilder:validation:Optional
	CtlrAlloc *string `json:"ctlrAlloc,omitempty" tf:"ctlr_alloc,omitempty"`

	// +kubebuilder:validation:Optional
	IP []VlanInterfacesVnicNetworksIPParameters `json:"ip" tf:"ip,omitempty"`

	// +kubebuilder:validation:Optional
	Mode *string `json:"mode" tf:"mode,omitempty"`
}

type VnicNetworksIPIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type VnicNetworksIPIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type VnicNetworksIPIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type VnicNetworksIPInitParameters struct {
	IPAddr []IPIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type VnicNetworksIPObservation struct {
	IPAddr []IPIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type VnicNetworksIPParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []IPIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type VnicNetworksInitParameters struct {
	CtlrAlloc *string `json:"ctlrAlloc,omitempty" tf:"ctlr_alloc,omitempty"`

	IP []VnicNetworksIPInitParameters `json:"ip,omitempty" tf:"ip,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`
}

type VnicNetworksObservation struct {
	CtlrAlloc *string `json:"ctlrAlloc,omitempty" tf:"ctlr_alloc,omitempty"`

	IP []VnicNetworksIPObservation `json:"ip,omitempty" tf:"ip,omitempty"`

	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`
}

type VnicNetworksParameters struct {

	// +kubebuilder:validation:Optional
	CtlrAlloc *string `json:"ctlrAlloc,omitempty" tf:"ctlr_alloc,omitempty"`

	// +kubebuilder:validation:Optional
	IP []VnicNetworksIPParameters `json:"ip" tf:"ip,omitempty"`

	// +kubebuilder:validation:Optional
	Mode *string `json:"mode" tf:"mode,omitempty"`
}

// ServiceEngineSpec defines the desired state of ServiceEngine
type ServiceEngineSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ServiceEngineParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ServiceEngineInitParameters `json:"initProvider,omitempty"`
}

// ServiceEngineStatus defines the observed state of ServiceEngine.
type ServiceEngineStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ServiceEngineObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ServiceEngine is the Schema for the ServiceEngines API. Creates and manages Avi ServiceEngine.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,avi}
type ServiceEngine struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ServiceEngineSpec   `json:"spec"`
	Status            ServiceEngineStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ServiceEngineList contains a list of ServiceEngines
type ServiceEngineList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ServiceEngine `json:"items"`
}

// Repository type metadata.
var (
	ServiceEngine_Kind             = "ServiceEngine"
	ServiceEngine_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ServiceEngine_Kind}.String()
	ServiceEngine_KindAPIVersion   = ServiceEngine_Kind + "." + CRDGroupVersion.String()
	ServiceEngine_GroupVersionKind = CRDGroupVersion.WithKind(ServiceEngine_Kind)
)

func init() {
	SchemeBuilder.Register(&ServiceEngine{}, &ServiceEngineList{})
}
