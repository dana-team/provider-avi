//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionFileInitParameters) DeepCopyInto(out *ActionFileInitParameters) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.FileContent != nil {
		in, out := &in.FileContent, &out.FileContent
		*out = new(string)
		**out = **in
	}
	if in.FileLength != nil {
		in, out := &in.FileLength, &out.FileLength
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionFileInitParameters.
func (in *ActionFileInitParameters) DeepCopy() *ActionFileInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActionFileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionFileObservation) DeepCopyInto(out *ActionFileObservation) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.FileContent != nil {
		in, out := &in.FileContent, &out.FileContent
		*out = new(string)
		**out = **in
	}
	if in.FileLength != nil {
		in, out := &in.FileLength, &out.FileLength
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionFileObservation.
func (in *ActionFileObservation) DeepCopy() *ActionFileObservation {
	if in == nil {
		return nil
	}
	out := new(ActionFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionFileParameters) DeepCopyInto(out *ActionFileParameters) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.FileContent != nil {
		in, out := &in.FileContent, &out.FileContent
		*out = new(string)
		**out = **in
	}
	if in.FileLength != nil {
		in, out := &in.FileLength, &out.FileLength
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionFileParameters.
func (in *ActionFileParameters) DeepCopy() *ActionFileParameters {
	if in == nil {
		return nil
	}
	out := new(ActionFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionInitParameters) DeepCopyInto(out *ActionInitParameters) {
	*out = *in
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]ActionFileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Redirect != nil {
		in, out := &in.Redirect, &out.Redirect
		*out = make([]ActionRedirectInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionInitParameters.
func (in *ActionInitParameters) DeepCopy() *ActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionObservation) DeepCopyInto(out *ActionObservation) {
	*out = *in
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]ActionFileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Redirect != nil {
		in, out := &in.Redirect, &out.Redirect
		*out = make([]ActionRedirectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionObservation.
func (in *ActionObservation) DeepCopy() *ActionObservation {
	if in == nil {
		return nil
	}
	out := new(ActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionParameters) DeepCopyInto(out *ActionParameters) {
	*out = *in
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]ActionFileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Redirect != nil {
		in, out := &in.Redirect, &out.Redirect
		*out = make([]ActionRedirectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionParameters.
func (in *ActionParameters) DeepCopy() *ActionParameters {
	if in == nil {
		return nil
	}
	out := new(ActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionRedirectHostInitParameters) DeepCopyInto(out *ActionRedirectHostInitParameters) {
	*out = *in
	if in.Tokens != nil {
		in, out := &in.Tokens, &out.Tokens
		*out = make([]RedirectHostTokensInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionRedirectHostInitParameters.
func (in *ActionRedirectHostInitParameters) DeepCopy() *ActionRedirectHostInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActionRedirectHostInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionRedirectHostObservation) DeepCopyInto(out *ActionRedirectHostObservation) {
	*out = *in
	if in.Tokens != nil {
		in, out := &in.Tokens, &out.Tokens
		*out = make([]RedirectHostTokensObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionRedirectHostObservation.
func (in *ActionRedirectHostObservation) DeepCopy() *ActionRedirectHostObservation {
	if in == nil {
		return nil
	}
	out := new(ActionRedirectHostObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionRedirectHostParameters) DeepCopyInto(out *ActionRedirectHostParameters) {
	*out = *in
	if in.Tokens != nil {
		in, out := &in.Tokens, &out.Tokens
		*out = make([]RedirectHostTokensParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionRedirectHostParameters.
func (in *ActionRedirectHostParameters) DeepCopy() *ActionRedirectHostParameters {
	if in == nil {
		return nil
	}
	out := new(ActionRedirectHostParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionRedirectInitParameters) DeepCopyInto(out *ActionRedirectInitParameters) {
	*out = *in
	if in.AddString != nil {
		in, out := &in.AddString, &out.AddString
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = make([]HostInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeepQuery != nil {
		in, out := &in.KeepQuery, &out.KeepQuery
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = make([]PathInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionRedirectInitParameters.
func (in *ActionRedirectInitParameters) DeepCopy() *ActionRedirectInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActionRedirectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionRedirectObservation) DeepCopyInto(out *ActionRedirectObservation) {
	*out = *in
	if in.AddString != nil {
		in, out := &in.AddString, &out.AddString
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = make([]HostObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeepQuery != nil {
		in, out := &in.KeepQuery, &out.KeepQuery
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = make([]PathObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionRedirectObservation.
func (in *ActionRedirectObservation) DeepCopy() *ActionRedirectObservation {
	if in == nil {
		return nil
	}
	out := new(ActionRedirectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionRedirectParameters) DeepCopyInto(out *ActionRedirectParameters) {
	*out = *in
	if in.AddString != nil {
		in, out := &in.AddString, &out.AddString
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = make([]HostParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeepQuery != nil {
		in, out := &in.KeepQuery, &out.KeepQuery
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = make([]PathParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionRedirectParameters.
func (in *ActionRedirectParameters) DeepCopy() *ActionRedirectParameters {
	if in == nil {
		return nil
	}
	out := new(ActionRedirectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionRedirectPathInitParameters) DeepCopyInto(out *ActionRedirectPathInitParameters) {
	*out = *in
	if in.Tokens != nil {
		in, out := &in.Tokens, &out.Tokens
		*out = make([]ActionRedirectPathTokensInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionRedirectPathInitParameters.
func (in *ActionRedirectPathInitParameters) DeepCopy() *ActionRedirectPathInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActionRedirectPathInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionRedirectPathObservation) DeepCopyInto(out *ActionRedirectPathObservation) {
	*out = *in
	if in.Tokens != nil {
		in, out := &in.Tokens, &out.Tokens
		*out = make([]ActionRedirectPathTokensObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionRedirectPathObservation.
func (in *ActionRedirectPathObservation) DeepCopy() *ActionRedirectPathObservation {
	if in == nil {
		return nil
	}
	out := new(ActionRedirectPathObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionRedirectPathParameters) DeepCopyInto(out *ActionRedirectPathParameters) {
	*out = *in
	if in.Tokens != nil {
		in, out := &in.Tokens, &out.Tokens
		*out = make([]ActionRedirectPathTokensParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionRedirectPathParameters.
func (in *ActionRedirectPathParameters) DeepCopy() *ActionRedirectPathParameters {
	if in == nil {
		return nil
	}
	out := new(ActionRedirectPathParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionRedirectPathTokensInitParameters) DeepCopyInto(out *ActionRedirectPathTokensInitParameters) {
	*out = *in
	if in.EndIndex != nil {
		in, out := &in.EndIndex, &out.EndIndex
		*out = new(string)
		**out = **in
	}
	if in.StartIndex != nil {
		in, out := &in.StartIndex, &out.StartIndex
		*out = new(string)
		**out = **in
	}
	if in.StrValue != nil {
		in, out := &in.StrValue, &out.StrValue
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionRedirectPathTokensInitParameters.
func (in *ActionRedirectPathTokensInitParameters) DeepCopy() *ActionRedirectPathTokensInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActionRedirectPathTokensInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionRedirectPathTokensObservation) DeepCopyInto(out *ActionRedirectPathTokensObservation) {
	*out = *in
	if in.EndIndex != nil {
		in, out := &in.EndIndex, &out.EndIndex
		*out = new(string)
		**out = **in
	}
	if in.StartIndex != nil {
		in, out := &in.StartIndex, &out.StartIndex
		*out = new(string)
		**out = **in
	}
	if in.StrValue != nil {
		in, out := &in.StrValue, &out.StrValue
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionRedirectPathTokensObservation.
func (in *ActionRedirectPathTokensObservation) DeepCopy() *ActionRedirectPathTokensObservation {
	if in == nil {
		return nil
	}
	out := new(ActionRedirectPathTokensObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionRedirectPathTokensParameters) DeepCopyInto(out *ActionRedirectPathTokensParameters) {
	*out = *in
	if in.EndIndex != nil {
		in, out := &in.EndIndex, &out.EndIndex
		*out = new(string)
		**out = **in
	}
	if in.StartIndex != nil {
		in, out := &in.StartIndex, &out.StartIndex
		*out = new(string)
		**out = **in
	}
	if in.StrValue != nil {
		in, out := &in.StrValue, &out.StrValue
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionRedirectPathTokensParameters.
func (in *ActionRedirectPathTokensParameters) DeepCopy() *ActionRedirectPathTokensParameters {
	if in == nil {
		return nil
	}
	out := new(ActionRedirectPathTokensParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddrsInitParameters) DeepCopyInto(out *AddrsInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddrsInitParameters.
func (in *AddrsInitParameters) DeepCopy() *AddrsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AddrsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddrsObservation) DeepCopyInto(out *AddrsObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddrsObservation.
func (in *AddrsObservation) DeepCopy() *AddrsObservation {
	if in == nil {
		return nil
	}
	out := new(AddrsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddrsParameters) DeepCopyInto(out *AddrsParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddrsParameters.
func (in *AddrsParameters) DeepCopy() *AddrsParameters {
	if in == nil {
		return nil
	}
	out := new(AddrsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsPolicyInitParameters) DeepCopyInto(out *AnalyticsPolicyInitParameters) {
	*out = *in
	if in.EnableRealtimeMetrics != nil {
		in, out := &in.EnableRealtimeMetrics, &out.EnableRealtimeMetrics
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsPolicyInitParameters.
func (in *AnalyticsPolicyInitParameters) DeepCopy() *AnalyticsPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(AnalyticsPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsPolicyObservation) DeepCopyInto(out *AnalyticsPolicyObservation) {
	*out = *in
	if in.EnableRealtimeMetrics != nil {
		in, out := &in.EnableRealtimeMetrics, &out.EnableRealtimeMetrics
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsPolicyObservation.
func (in *AnalyticsPolicyObservation) DeepCopy() *AnalyticsPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(AnalyticsPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsPolicyParameters) DeepCopyInto(out *AnalyticsPolicyParameters) {
	*out = *in
	if in.EnableRealtimeMetrics != nil {
		in, out := &in.EnableRealtimeMetrics, &out.EnableRealtimeMetrics
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsPolicyParameters.
func (in *AnalyticsPolicyParameters) DeepCopy() *AnalyticsPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(AnalyticsPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSettingsInitParameters) DeepCopyInto(out *AppSettingsInitParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.OidcConfig != nil {
		in, out := &in.OidcConfig, &out.OidcConfig
		*out = make([]OidcConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSettingsInitParameters.
func (in *AppSettingsInitParameters) DeepCopy() *AppSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AppSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSettingsObservation) DeepCopyInto(out *AppSettingsObservation) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.OidcConfig != nil {
		in, out := &in.OidcConfig, &out.OidcConfig
		*out = make([]OidcConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSettingsObservation.
func (in *AppSettingsObservation) DeepCopy() *AppSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(AppSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSettingsParameters) DeepCopyInto(out *AppSettingsParameters) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.OidcConfig != nil {
		in, out := &in.OidcConfig, &out.OidcConfig
		*out = make([]OidcConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSettingsParameters.
func (in *AppSettingsParameters) DeepCopy() *AppSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(AppSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BeginInitParameters) DeepCopyInto(out *BeginInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BeginInitParameters.
func (in *BeginInitParameters) DeepCopy() *BeginInitParameters {
	if in == nil {
		return nil
	}
	out := new(BeginInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BeginObservation) DeepCopyInto(out *BeginObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BeginObservation.
func (in *BeginObservation) DeepCopy() *BeginObservation {
	if in == nil {
		return nil
	}
	out := new(BeginObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BeginParameters) DeepCopyInto(out *BeginParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BeginParameters.
func (in *BeginParameters) DeepCopy() *BeginParameters {
	if in == nil {
		return nil
	}
	out := new(BeginParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BotDetectionResultInitParameters) DeepCopyInto(out *BotDetectionResultInitParameters) {
	*out = *in
	if in.Classifications != nil {
		in, out := &in.Classifications, &out.Classifications
		*out = make([]ClassificationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MatchOperation != nil {
		in, out := &in.MatchOperation, &out.MatchOperation
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BotDetectionResultInitParameters.
func (in *BotDetectionResultInitParameters) DeepCopy() *BotDetectionResultInitParameters {
	if in == nil {
		return nil
	}
	out := new(BotDetectionResultInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BotDetectionResultObservation) DeepCopyInto(out *BotDetectionResultObservation) {
	*out = *in
	if in.Classifications != nil {
		in, out := &in.Classifications, &out.Classifications
		*out = make([]ClassificationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MatchOperation != nil {
		in, out := &in.MatchOperation, &out.MatchOperation
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BotDetectionResultObservation.
func (in *BotDetectionResultObservation) DeepCopy() *BotDetectionResultObservation {
	if in == nil {
		return nil
	}
	out := new(BotDetectionResultObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BotDetectionResultParameters) DeepCopyInto(out *BotDetectionResultParameters) {
	*out = *in
	if in.Classifications != nil {
		in, out := &in.Classifications, &out.Classifications
		*out = make([]ClassificationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MatchOperation != nil {
		in, out := &in.MatchOperation, &out.MatchOperation
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BotDetectionResultParameters.
func (in *BotDetectionResultParameters) DeepCopy() *BotDetectionResultParameters {
	if in == nil {
		return nil
	}
	out := new(BotDetectionResultParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassificationsInitParameters) DeepCopyInto(out *ClassificationsInitParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UserDefinedType != nil {
		in, out := &in.UserDefinedType, &out.UserDefinedType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassificationsInitParameters.
func (in *ClassificationsInitParameters) DeepCopy() *ClassificationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClassificationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassificationsObservation) DeepCopyInto(out *ClassificationsObservation) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UserDefinedType != nil {
		in, out := &in.UserDefinedType, &out.UserDefinedType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassificationsObservation.
func (in *ClassificationsObservation) DeepCopy() *ClassificationsObservation {
	if in == nil {
		return nil
	}
	out := new(ClassificationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassificationsParameters) DeepCopyInto(out *ClassificationsParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UserDefinedType != nil {
		in, out := &in.UserDefinedType, &out.UserDefinedType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassificationsParameters.
func (in *ClassificationsParameters) DeepCopy() *ClassificationsParameters {
	if in == nil {
		return nil
	}
	out := new(ClassificationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPAddrGroupInitParameters) DeepCopyInto(out *ClientIPAddrGroupInitParameters) {
	*out = *in
	if in.Addrs != nil {
		in, out := &in.Addrs, &out.Addrs
		*out = make([]AddrsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Prefixes != nil {
		in, out := &in.Prefixes, &out.Prefixes
		*out = make([]PrefixesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]RangesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPAddrGroupInitParameters.
func (in *ClientIPAddrGroupInitParameters) DeepCopy() *ClientIPAddrGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientIPAddrGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPAddrGroupObservation) DeepCopyInto(out *ClientIPAddrGroupObservation) {
	*out = *in
	if in.Addrs != nil {
		in, out := &in.Addrs, &out.Addrs
		*out = make([]AddrsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Prefixes != nil {
		in, out := &in.Prefixes, &out.Prefixes
		*out = make([]PrefixesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]RangesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPAddrGroupObservation.
func (in *ClientIPAddrGroupObservation) DeepCopy() *ClientIPAddrGroupObservation {
	if in == nil {
		return nil
	}
	out := new(ClientIPAddrGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPAddrGroupParameters) DeepCopyInto(out *ClientIPAddrGroupParameters) {
	*out = *in
	if in.Addrs != nil {
		in, out := &in.Addrs, &out.Addrs
		*out = make([]AddrsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Prefixes != nil {
		in, out := &in.Prefixes, &out.Prefixes
		*out = make([]PrefixesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]RangesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPAddrGroupParameters.
func (in *ClientIPAddrGroupParameters) DeepCopy() *ClientIPAddrGroupParameters {
	if in == nil {
		return nil
	}
	out := new(ClientIPAddrGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPAddrsInitParameters) DeepCopyInto(out *ClientIPAddrsInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPAddrsInitParameters.
func (in *ClientIPAddrsInitParameters) DeepCopy() *ClientIPAddrsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientIPAddrsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPAddrsObservation) DeepCopyInto(out *ClientIPAddrsObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPAddrsObservation.
func (in *ClientIPAddrsObservation) DeepCopy() *ClientIPAddrsObservation {
	if in == nil {
		return nil
	}
	out := new(ClientIPAddrsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPAddrsParameters) DeepCopyInto(out *ClientIPAddrsParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPAddrsParameters.
func (in *ClientIPAddrsParameters) DeepCopy() *ClientIPAddrsParameters {
	if in == nil {
		return nil
	}
	out := new(ClientIPAddrsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPInitParameters) DeepCopyInto(out *ClientIPInitParameters) {
	*out = *in
	if in.Addrs != nil {
		in, out := &in.Addrs, &out.Addrs
		*out = make([]ClientIPAddrsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupRefs != nil {
		in, out := &in.GroupRefs, &out.GroupRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Prefixes != nil {
		in, out := &in.Prefixes, &out.Prefixes
		*out = make([]ClientIPPrefixesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]ClientIPRangesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPInitParameters.
func (in *ClientIPInitParameters) DeepCopy() *ClientIPInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientIPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPListAddrsInitParameters) DeepCopyInto(out *ClientIPListAddrsInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPListAddrsInitParameters.
func (in *ClientIPListAddrsInitParameters) DeepCopy() *ClientIPListAddrsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientIPListAddrsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPListAddrsObservation) DeepCopyInto(out *ClientIPListAddrsObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPListAddrsObservation.
func (in *ClientIPListAddrsObservation) DeepCopy() *ClientIPListAddrsObservation {
	if in == nil {
		return nil
	}
	out := new(ClientIPListAddrsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPListAddrsParameters) DeepCopyInto(out *ClientIPListAddrsParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPListAddrsParameters.
func (in *ClientIPListAddrsParameters) DeepCopy() *ClientIPListAddrsParameters {
	if in == nil {
		return nil
	}
	out := new(ClientIPListAddrsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPListInitParameters) DeepCopyInto(out *ClientIPListInitParameters) {
	*out = *in
	if in.Addrs != nil {
		in, out := &in.Addrs, &out.Addrs
		*out = make([]ClientIPListAddrsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupRefs != nil {
		in, out := &in.GroupRefs, &out.GroupRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Prefixes != nil {
		in, out := &in.Prefixes, &out.Prefixes
		*out = make([]ClientIPListPrefixesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]ClientIPListRangesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPListInitParameters.
func (in *ClientIPListInitParameters) DeepCopy() *ClientIPListInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientIPListInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPListObservation) DeepCopyInto(out *ClientIPListObservation) {
	*out = *in
	if in.Addrs != nil {
		in, out := &in.Addrs, &out.Addrs
		*out = make([]ClientIPListAddrsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupRefs != nil {
		in, out := &in.GroupRefs, &out.GroupRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Prefixes != nil {
		in, out := &in.Prefixes, &out.Prefixes
		*out = make([]ClientIPListPrefixesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]ClientIPListRangesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPListObservation.
func (in *ClientIPListObservation) DeepCopy() *ClientIPListObservation {
	if in == nil {
		return nil
	}
	out := new(ClientIPListObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPListParameters) DeepCopyInto(out *ClientIPListParameters) {
	*out = *in
	if in.Addrs != nil {
		in, out := &in.Addrs, &out.Addrs
		*out = make([]ClientIPListAddrsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupRefs != nil {
		in, out := &in.GroupRefs, &out.GroupRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Prefixes != nil {
		in, out := &in.Prefixes, &out.Prefixes
		*out = make([]ClientIPListPrefixesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]ClientIPListRangesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPListParameters.
func (in *ClientIPListParameters) DeepCopy() *ClientIPListParameters {
	if in == nil {
		return nil
	}
	out := new(ClientIPListParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPListPrefixesIPAddrInitParameters) DeepCopyInto(out *ClientIPListPrefixesIPAddrInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPListPrefixesIPAddrInitParameters.
func (in *ClientIPListPrefixesIPAddrInitParameters) DeepCopy() *ClientIPListPrefixesIPAddrInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientIPListPrefixesIPAddrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPListPrefixesIPAddrObservation) DeepCopyInto(out *ClientIPListPrefixesIPAddrObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPListPrefixesIPAddrObservation.
func (in *ClientIPListPrefixesIPAddrObservation) DeepCopy() *ClientIPListPrefixesIPAddrObservation {
	if in == nil {
		return nil
	}
	out := new(ClientIPListPrefixesIPAddrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPListPrefixesIPAddrParameters) DeepCopyInto(out *ClientIPListPrefixesIPAddrParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPListPrefixesIPAddrParameters.
func (in *ClientIPListPrefixesIPAddrParameters) DeepCopy() *ClientIPListPrefixesIPAddrParameters {
	if in == nil {
		return nil
	}
	out := new(ClientIPListPrefixesIPAddrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPListPrefixesInitParameters) DeepCopyInto(out *ClientIPListPrefixesInitParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]ClientIPListPrefixesIPAddrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPListPrefixesInitParameters.
func (in *ClientIPListPrefixesInitParameters) DeepCopy() *ClientIPListPrefixesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientIPListPrefixesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPListPrefixesObservation) DeepCopyInto(out *ClientIPListPrefixesObservation) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]ClientIPListPrefixesIPAddrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPListPrefixesObservation.
func (in *ClientIPListPrefixesObservation) DeepCopy() *ClientIPListPrefixesObservation {
	if in == nil {
		return nil
	}
	out := new(ClientIPListPrefixesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPListPrefixesParameters) DeepCopyInto(out *ClientIPListPrefixesParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]ClientIPListPrefixesIPAddrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPListPrefixesParameters.
func (in *ClientIPListPrefixesParameters) DeepCopy() *ClientIPListPrefixesParameters {
	if in == nil {
		return nil
	}
	out := new(ClientIPListPrefixesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPListRangesBeginInitParameters) DeepCopyInto(out *ClientIPListRangesBeginInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPListRangesBeginInitParameters.
func (in *ClientIPListRangesBeginInitParameters) DeepCopy() *ClientIPListRangesBeginInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientIPListRangesBeginInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPListRangesBeginObservation) DeepCopyInto(out *ClientIPListRangesBeginObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPListRangesBeginObservation.
func (in *ClientIPListRangesBeginObservation) DeepCopy() *ClientIPListRangesBeginObservation {
	if in == nil {
		return nil
	}
	out := new(ClientIPListRangesBeginObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPListRangesBeginParameters) DeepCopyInto(out *ClientIPListRangesBeginParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPListRangesBeginParameters.
func (in *ClientIPListRangesBeginParameters) DeepCopy() *ClientIPListRangesBeginParameters {
	if in == nil {
		return nil
	}
	out := new(ClientIPListRangesBeginParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPListRangesEndInitParameters) DeepCopyInto(out *ClientIPListRangesEndInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPListRangesEndInitParameters.
func (in *ClientIPListRangesEndInitParameters) DeepCopy() *ClientIPListRangesEndInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientIPListRangesEndInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPListRangesEndObservation) DeepCopyInto(out *ClientIPListRangesEndObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPListRangesEndObservation.
func (in *ClientIPListRangesEndObservation) DeepCopy() *ClientIPListRangesEndObservation {
	if in == nil {
		return nil
	}
	out := new(ClientIPListRangesEndObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPListRangesEndParameters) DeepCopyInto(out *ClientIPListRangesEndParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPListRangesEndParameters.
func (in *ClientIPListRangesEndParameters) DeepCopy() *ClientIPListRangesEndParameters {
	if in == nil {
		return nil
	}
	out := new(ClientIPListRangesEndParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPListRangesInitParameters) DeepCopyInto(out *ClientIPListRangesInitParameters) {
	*out = *in
	if in.Begin != nil {
		in, out := &in.Begin, &out.Begin
		*out = make([]ClientIPListRangesBeginInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = make([]ClientIPListRangesEndInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPListRangesInitParameters.
func (in *ClientIPListRangesInitParameters) DeepCopy() *ClientIPListRangesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientIPListRangesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPListRangesObservation) DeepCopyInto(out *ClientIPListRangesObservation) {
	*out = *in
	if in.Begin != nil {
		in, out := &in.Begin, &out.Begin
		*out = make([]ClientIPListRangesBeginObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = make([]ClientIPListRangesEndObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPListRangesObservation.
func (in *ClientIPListRangesObservation) DeepCopy() *ClientIPListRangesObservation {
	if in == nil {
		return nil
	}
	out := new(ClientIPListRangesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPListRangesParameters) DeepCopyInto(out *ClientIPListRangesParameters) {
	*out = *in
	if in.Begin != nil {
		in, out := &in.Begin, &out.Begin
		*out = make([]ClientIPListRangesBeginParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = make([]ClientIPListRangesEndParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPListRangesParameters.
func (in *ClientIPListRangesParameters) DeepCopy() *ClientIPListRangesParameters {
	if in == nil {
		return nil
	}
	out := new(ClientIPListRangesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPObservation) DeepCopyInto(out *ClientIPObservation) {
	*out = *in
	if in.Addrs != nil {
		in, out := &in.Addrs, &out.Addrs
		*out = make([]ClientIPAddrsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupRefs != nil {
		in, out := &in.GroupRefs, &out.GroupRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Prefixes != nil {
		in, out := &in.Prefixes, &out.Prefixes
		*out = make([]ClientIPPrefixesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]ClientIPRangesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPObservation.
func (in *ClientIPObservation) DeepCopy() *ClientIPObservation {
	if in == nil {
		return nil
	}
	out := new(ClientIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPParameters) DeepCopyInto(out *ClientIPParameters) {
	*out = *in
	if in.Addrs != nil {
		in, out := &in.Addrs, &out.Addrs
		*out = make([]ClientIPAddrsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupRefs != nil {
		in, out := &in.GroupRefs, &out.GroupRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Prefixes != nil {
		in, out := &in.Prefixes, &out.Prefixes
		*out = make([]ClientIPPrefixesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]ClientIPRangesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPParameters.
func (in *ClientIPParameters) DeepCopy() *ClientIPParameters {
	if in == nil {
		return nil
	}
	out := new(ClientIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPPrefixesIPAddrInitParameters) DeepCopyInto(out *ClientIPPrefixesIPAddrInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPPrefixesIPAddrInitParameters.
func (in *ClientIPPrefixesIPAddrInitParameters) DeepCopy() *ClientIPPrefixesIPAddrInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientIPPrefixesIPAddrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPPrefixesIPAddrObservation) DeepCopyInto(out *ClientIPPrefixesIPAddrObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPPrefixesIPAddrObservation.
func (in *ClientIPPrefixesIPAddrObservation) DeepCopy() *ClientIPPrefixesIPAddrObservation {
	if in == nil {
		return nil
	}
	out := new(ClientIPPrefixesIPAddrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPPrefixesIPAddrParameters) DeepCopyInto(out *ClientIPPrefixesIPAddrParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPPrefixesIPAddrParameters.
func (in *ClientIPPrefixesIPAddrParameters) DeepCopy() *ClientIPPrefixesIPAddrParameters {
	if in == nil {
		return nil
	}
	out := new(ClientIPPrefixesIPAddrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPPrefixesInitParameters) DeepCopyInto(out *ClientIPPrefixesInitParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]PrefixesIPAddrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPPrefixesInitParameters.
func (in *ClientIPPrefixesInitParameters) DeepCopy() *ClientIPPrefixesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientIPPrefixesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPPrefixesObservation) DeepCopyInto(out *ClientIPPrefixesObservation) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]PrefixesIPAddrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPPrefixesObservation.
func (in *ClientIPPrefixesObservation) DeepCopy() *ClientIPPrefixesObservation {
	if in == nil {
		return nil
	}
	out := new(ClientIPPrefixesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPPrefixesParameters) DeepCopyInto(out *ClientIPPrefixesParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]PrefixesIPAddrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPPrefixesParameters.
func (in *ClientIPPrefixesParameters) DeepCopy() *ClientIPPrefixesParameters {
	if in == nil {
		return nil
	}
	out := new(ClientIPPrefixesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPRangesBeginInitParameters) DeepCopyInto(out *ClientIPRangesBeginInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPRangesBeginInitParameters.
func (in *ClientIPRangesBeginInitParameters) DeepCopy() *ClientIPRangesBeginInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientIPRangesBeginInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPRangesBeginObservation) DeepCopyInto(out *ClientIPRangesBeginObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPRangesBeginObservation.
func (in *ClientIPRangesBeginObservation) DeepCopy() *ClientIPRangesBeginObservation {
	if in == nil {
		return nil
	}
	out := new(ClientIPRangesBeginObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPRangesBeginParameters) DeepCopyInto(out *ClientIPRangesBeginParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPRangesBeginParameters.
func (in *ClientIPRangesBeginParameters) DeepCopy() *ClientIPRangesBeginParameters {
	if in == nil {
		return nil
	}
	out := new(ClientIPRangesBeginParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPRangesEndInitParameters) DeepCopyInto(out *ClientIPRangesEndInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPRangesEndInitParameters.
func (in *ClientIPRangesEndInitParameters) DeepCopy() *ClientIPRangesEndInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientIPRangesEndInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPRangesEndObservation) DeepCopyInto(out *ClientIPRangesEndObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPRangesEndObservation.
func (in *ClientIPRangesEndObservation) DeepCopy() *ClientIPRangesEndObservation {
	if in == nil {
		return nil
	}
	out := new(ClientIPRangesEndObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPRangesEndParameters) DeepCopyInto(out *ClientIPRangesEndParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPRangesEndParameters.
func (in *ClientIPRangesEndParameters) DeepCopy() *ClientIPRangesEndParameters {
	if in == nil {
		return nil
	}
	out := new(ClientIPRangesEndParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPRangesInitParameters) DeepCopyInto(out *ClientIPRangesInitParameters) {
	*out = *in
	if in.Begin != nil {
		in, out := &in.Begin, &out.Begin
		*out = make([]RangesBeginInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = make([]RangesEndInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPRangesInitParameters.
func (in *ClientIPRangesInitParameters) DeepCopy() *ClientIPRangesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientIPRangesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPRangesObservation) DeepCopyInto(out *ClientIPRangesObservation) {
	*out = *in
	if in.Begin != nil {
		in, out := &in.Begin, &out.Begin
		*out = make([]RangesBeginObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = make([]RangesEndObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPRangesObservation.
func (in *ClientIPRangesObservation) DeepCopy() *ClientIPRangesObservation {
	if in == nil {
		return nil
	}
	out := new(ClientIPRangesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientIPRangesParameters) DeepCopyInto(out *ClientIPRangesParameters) {
	*out = *in
	if in.Begin != nil {
		in, out := &in.Begin, &out.Begin
		*out = make([]RangesBeginParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = make([]RangesEndParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientIPRangesParameters.
func (in *ClientIPRangesParameters) DeepCopy() *ClientIPRangesParameters {
	if in == nil {
		return nil
	}
	out := new(ClientIPRangesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientInsightsSamplingInitParameters) DeepCopyInto(out *ClientInsightsSamplingInitParameters) {
	*out = *in
	if in.ClientIP != nil {
		in, out := &in.ClientIP, &out.ClientIP
		*out = make([]ClientIPInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SampleUris != nil {
		in, out := &in.SampleUris, &out.SampleUris
		*out = make([]SampleUrisInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipUris != nil {
		in, out := &in.SkipUris, &out.SkipUris
		*out = make([]SkipUrisInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientInsightsSamplingInitParameters.
func (in *ClientInsightsSamplingInitParameters) DeepCopy() *ClientInsightsSamplingInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientInsightsSamplingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientInsightsSamplingObservation) DeepCopyInto(out *ClientInsightsSamplingObservation) {
	*out = *in
	if in.ClientIP != nil {
		in, out := &in.ClientIP, &out.ClientIP
		*out = make([]ClientIPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SampleUris != nil {
		in, out := &in.SampleUris, &out.SampleUris
		*out = make([]SampleUrisObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipUris != nil {
		in, out := &in.SkipUris, &out.SkipUris
		*out = make([]SkipUrisObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientInsightsSamplingObservation.
func (in *ClientInsightsSamplingObservation) DeepCopy() *ClientInsightsSamplingObservation {
	if in == nil {
		return nil
	}
	out := new(ClientInsightsSamplingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientInsightsSamplingParameters) DeepCopyInto(out *ClientInsightsSamplingParameters) {
	*out = *in
	if in.ClientIP != nil {
		in, out := &in.ClientIP, &out.ClientIP
		*out = make([]ClientIPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SampleUris != nil {
		in, out := &in.SampleUris, &out.SampleUris
		*out = make([]SampleUrisParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipUris != nil {
		in, out := &in.SkipUris, &out.SkipUris
		*out = make([]SkipUrisParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientInsightsSamplingParameters.
func (in *ClientInsightsSamplingParameters) DeepCopy() *ClientInsightsSamplingParameters {
	if in == nil {
		return nil
	}
	out := new(ClientInsightsSamplingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientLogFiltersClientIPAddrsInitParameters) DeepCopyInto(out *ClientLogFiltersClientIPAddrsInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientLogFiltersClientIPAddrsInitParameters.
func (in *ClientLogFiltersClientIPAddrsInitParameters) DeepCopy() *ClientLogFiltersClientIPAddrsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientLogFiltersClientIPAddrsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientLogFiltersClientIPAddrsObservation) DeepCopyInto(out *ClientLogFiltersClientIPAddrsObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientLogFiltersClientIPAddrsObservation.
func (in *ClientLogFiltersClientIPAddrsObservation) DeepCopy() *ClientLogFiltersClientIPAddrsObservation {
	if in == nil {
		return nil
	}
	out := new(ClientLogFiltersClientIPAddrsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientLogFiltersClientIPAddrsParameters) DeepCopyInto(out *ClientLogFiltersClientIPAddrsParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientLogFiltersClientIPAddrsParameters.
func (in *ClientLogFiltersClientIPAddrsParameters) DeepCopy() *ClientLogFiltersClientIPAddrsParameters {
	if in == nil {
		return nil
	}
	out := new(ClientLogFiltersClientIPAddrsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientLogFiltersClientIPInitParameters) DeepCopyInto(out *ClientLogFiltersClientIPInitParameters) {
	*out = *in
	if in.Addrs != nil {
		in, out := &in.Addrs, &out.Addrs
		*out = make([]ClientLogFiltersClientIPAddrsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupRefs != nil {
		in, out := &in.GroupRefs, &out.GroupRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Prefixes != nil {
		in, out := &in.Prefixes, &out.Prefixes
		*out = make([]ClientLogFiltersClientIPPrefixesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]ClientLogFiltersClientIPRangesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientLogFiltersClientIPInitParameters.
func (in *ClientLogFiltersClientIPInitParameters) DeepCopy() *ClientLogFiltersClientIPInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientLogFiltersClientIPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientLogFiltersClientIPObservation) DeepCopyInto(out *ClientLogFiltersClientIPObservation) {
	*out = *in
	if in.Addrs != nil {
		in, out := &in.Addrs, &out.Addrs
		*out = make([]ClientLogFiltersClientIPAddrsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupRefs != nil {
		in, out := &in.GroupRefs, &out.GroupRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Prefixes != nil {
		in, out := &in.Prefixes, &out.Prefixes
		*out = make([]ClientLogFiltersClientIPPrefixesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]ClientLogFiltersClientIPRangesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientLogFiltersClientIPObservation.
func (in *ClientLogFiltersClientIPObservation) DeepCopy() *ClientLogFiltersClientIPObservation {
	if in == nil {
		return nil
	}
	out := new(ClientLogFiltersClientIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientLogFiltersClientIPParameters) DeepCopyInto(out *ClientLogFiltersClientIPParameters) {
	*out = *in
	if in.Addrs != nil {
		in, out := &in.Addrs, &out.Addrs
		*out = make([]ClientLogFiltersClientIPAddrsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupRefs != nil {
		in, out := &in.GroupRefs, &out.GroupRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Prefixes != nil {
		in, out := &in.Prefixes, &out.Prefixes
		*out = make([]ClientLogFiltersClientIPPrefixesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]ClientLogFiltersClientIPRangesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientLogFiltersClientIPParameters.
func (in *ClientLogFiltersClientIPParameters) DeepCopy() *ClientLogFiltersClientIPParameters {
	if in == nil {
		return nil
	}
	out := new(ClientLogFiltersClientIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientLogFiltersClientIPPrefixesInitParameters) DeepCopyInto(out *ClientLogFiltersClientIPPrefixesInitParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]ClientIPPrefixesIPAddrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientLogFiltersClientIPPrefixesInitParameters.
func (in *ClientLogFiltersClientIPPrefixesInitParameters) DeepCopy() *ClientLogFiltersClientIPPrefixesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientLogFiltersClientIPPrefixesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientLogFiltersClientIPPrefixesObservation) DeepCopyInto(out *ClientLogFiltersClientIPPrefixesObservation) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]ClientIPPrefixesIPAddrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientLogFiltersClientIPPrefixesObservation.
func (in *ClientLogFiltersClientIPPrefixesObservation) DeepCopy() *ClientLogFiltersClientIPPrefixesObservation {
	if in == nil {
		return nil
	}
	out := new(ClientLogFiltersClientIPPrefixesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientLogFiltersClientIPPrefixesParameters) DeepCopyInto(out *ClientLogFiltersClientIPPrefixesParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]ClientIPPrefixesIPAddrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientLogFiltersClientIPPrefixesParameters.
func (in *ClientLogFiltersClientIPPrefixesParameters) DeepCopy() *ClientLogFiltersClientIPPrefixesParameters {
	if in == nil {
		return nil
	}
	out := new(ClientLogFiltersClientIPPrefixesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientLogFiltersClientIPRangesInitParameters) DeepCopyInto(out *ClientLogFiltersClientIPRangesInitParameters) {
	*out = *in
	if in.Begin != nil {
		in, out := &in.Begin, &out.Begin
		*out = make([]ClientIPRangesBeginInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = make([]ClientIPRangesEndInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientLogFiltersClientIPRangesInitParameters.
func (in *ClientLogFiltersClientIPRangesInitParameters) DeepCopy() *ClientLogFiltersClientIPRangesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientLogFiltersClientIPRangesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientLogFiltersClientIPRangesObservation) DeepCopyInto(out *ClientLogFiltersClientIPRangesObservation) {
	*out = *in
	if in.Begin != nil {
		in, out := &in.Begin, &out.Begin
		*out = make([]ClientIPRangesBeginObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = make([]ClientIPRangesEndObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientLogFiltersClientIPRangesObservation.
func (in *ClientLogFiltersClientIPRangesObservation) DeepCopy() *ClientLogFiltersClientIPRangesObservation {
	if in == nil {
		return nil
	}
	out := new(ClientLogFiltersClientIPRangesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientLogFiltersClientIPRangesParameters) DeepCopyInto(out *ClientLogFiltersClientIPRangesParameters) {
	*out = *in
	if in.Begin != nil {
		in, out := &in.Begin, &out.Begin
		*out = make([]ClientIPRangesBeginParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = make([]ClientIPRangesEndParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientLogFiltersClientIPRangesParameters.
func (in *ClientLogFiltersClientIPRangesParameters) DeepCopy() *ClientLogFiltersClientIPRangesParameters {
	if in == nil {
		return nil
	}
	out := new(ClientLogFiltersClientIPRangesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientLogFiltersInitParameters) DeepCopyInto(out *ClientLogFiltersInitParameters) {
	*out = *in
	if in.AllHeaders != nil {
		in, out := &in.AllHeaders, &out.AllHeaders
		*out = new(string)
		**out = **in
	}
	if in.ClientIP != nil {
		in, out := &in.ClientIP, &out.ClientIP
		*out = make([]ClientLogFiltersClientIPInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = make([]URIInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientLogFiltersInitParameters.
func (in *ClientLogFiltersInitParameters) DeepCopy() *ClientLogFiltersInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClientLogFiltersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientLogFiltersObservation) DeepCopyInto(out *ClientLogFiltersObservation) {
	*out = *in
	if in.AllHeaders != nil {
		in, out := &in.AllHeaders, &out.AllHeaders
		*out = new(string)
		**out = **in
	}
	if in.ClientIP != nil {
		in, out := &in.ClientIP, &out.ClientIP
		*out = make([]ClientLogFiltersClientIPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = make([]URIObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientLogFiltersObservation.
func (in *ClientLogFiltersObservation) DeepCopy() *ClientLogFiltersObservation {
	if in == nil {
		return nil
	}
	out := new(ClientLogFiltersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientLogFiltersParameters) DeepCopyInto(out *ClientLogFiltersParameters) {
	*out = *in
	if in.AllHeaders != nil {
		in, out := &in.AllHeaders, &out.AllHeaders
		*out = new(string)
		**out = **in
	}
	if in.ClientIP != nil {
		in, out := &in.ClientIP, &out.ClientIP
		*out = make([]ClientLogFiltersClientIPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = make([]URIParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientLogFiltersParameters.
func (in *ClientLogFiltersParameters) DeepCopy() *ClientLogFiltersParameters {
	if in == nil {
		return nil
	}
	out := new(ClientLogFiltersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClustersInitParameters) DeepCopyInto(out *ClustersInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.OverrideVsphereHa != nil {
		in, out := &in.OverrideVsphereHa, &out.OverrideVsphereHa
		*out = new(string)
		**out = **in
	}
	if in.VmgName != nil {
		in, out := &in.VmgName, &out.VmgName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClustersInitParameters.
func (in *ClustersInitParameters) DeepCopy() *ClustersInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClustersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClustersObservation) DeepCopyInto(out *ClustersObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.OverrideVsphereHa != nil {
		in, out := &in.OverrideVsphereHa, &out.OverrideVsphereHa
		*out = new(string)
		**out = **in
	}
	if in.VmgName != nil {
		in, out := &in.VmgName, &out.VmgName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClustersObservation.
func (in *ClustersObservation) DeepCopy() *ClustersObservation {
	if in == nil {
		return nil
	}
	out := new(ClustersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClustersParameters) DeepCopyInto(out *ClustersParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.OverrideVsphereHa != nil {
		in, out := &in.OverrideVsphereHa, &out.OverrideVsphereHa
		*out = new(string)
		**out = **in
	}
	if in.VmgName != nil {
		in, out := &in.VmgName, &out.VmgName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClustersParameters.
func (in *ClustersParameters) DeepCopy() *ClustersParameters {
	if in == nil {
		return nil
	}
	out := new(ClustersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CnameInitParameters) DeepCopyInto(out *CnameInitParameters) {
	*out = *in
	if in.Cname != nil {
		in, out := &in.Cname, &out.Cname
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CnameInitParameters.
func (in *CnameInitParameters) DeepCopy() *CnameInitParameters {
	if in == nil {
		return nil
	}
	out := new(CnameInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CnameObservation) DeepCopyInto(out *CnameObservation) {
	*out = *in
	if in.Cname != nil {
		in, out := &in.Cname, &out.Cname
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CnameObservation.
func (in *CnameObservation) DeepCopy() *CnameObservation {
	if in == nil {
		return nil
	}
	out := new(CnameObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CnameParameters) DeepCopyInto(out *CnameParameters) {
	*out = *in
	if in.Cname != nil {
		in, out := &in.Cname, &out.Cname
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CnameParameters.
func (in *CnameParameters) DeepCopy() *CnameParameters {
	if in == nil {
		return nil
	}
	out := new(CnameParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigpbAttributesInitParameters) DeepCopyInto(out *ConfigpbAttributesInitParameters) {
	*out = *in
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigpbAttributesInitParameters.
func (in *ConfigpbAttributesInitParameters) DeepCopy() *ConfigpbAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigpbAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigpbAttributesObservation) DeepCopyInto(out *ConfigpbAttributesObservation) {
	*out = *in
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigpbAttributesObservation.
func (in *ConfigpbAttributesObservation) DeepCopy() *ConfigpbAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigpbAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigpbAttributesParameters) DeepCopyInto(out *ConfigpbAttributesParameters) {
	*out = *in
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigpbAttributesParameters.
func (in *ConfigpbAttributesParameters) DeepCopy() *ConfigpbAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigpbAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigurationInitParameters) DeepCopyInto(out *ConfigurationInitParameters) {
	*out = *in
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]ZonesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigurationInitParameters.
func (in *ConfigurationInitParameters) DeepCopy() *ConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigurationObservation) DeepCopyInto(out *ConfigurationObservation) {
	*out = *in
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]ZonesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigurationObservation.
func (in *ConfigurationObservation) DeepCopy() *ConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigurationParameters) DeepCopyInto(out *ConfigurationParameters) {
	*out = *in
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]ZonesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigurationParameters.
func (in *ConfigurationParameters) DeepCopy() *ConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnPoolPropertiesInitParameters) DeepCopyInto(out *ConnPoolPropertiesInitParameters) {
	*out = *in
	if in.UpstreamConnpoolConnIdleTmo != nil {
		in, out := &in.UpstreamConnpoolConnIdleTmo, &out.UpstreamConnpoolConnIdleTmo
		*out = new(string)
		**out = **in
	}
	if in.UpstreamConnpoolConnLifeTmo != nil {
		in, out := &in.UpstreamConnpoolConnLifeTmo, &out.UpstreamConnpoolConnLifeTmo
		*out = new(string)
		**out = **in
	}
	if in.UpstreamConnpoolConnMaxReuse != nil {
		in, out := &in.UpstreamConnpoolConnMaxReuse, &out.UpstreamConnpoolConnMaxReuse
		*out = new(string)
		**out = **in
	}
	if in.UpstreamConnpoolServerMaxCache != nil {
		in, out := &in.UpstreamConnpoolServerMaxCache, &out.UpstreamConnpoolServerMaxCache
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnPoolPropertiesInitParameters.
func (in *ConnPoolPropertiesInitParameters) DeepCopy() *ConnPoolPropertiesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnPoolPropertiesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnPoolPropertiesObservation) DeepCopyInto(out *ConnPoolPropertiesObservation) {
	*out = *in
	if in.UpstreamConnpoolConnIdleTmo != nil {
		in, out := &in.UpstreamConnpoolConnIdleTmo, &out.UpstreamConnpoolConnIdleTmo
		*out = new(string)
		**out = **in
	}
	if in.UpstreamConnpoolConnLifeTmo != nil {
		in, out := &in.UpstreamConnpoolConnLifeTmo, &out.UpstreamConnpoolConnLifeTmo
		*out = new(string)
		**out = **in
	}
	if in.UpstreamConnpoolConnMaxReuse != nil {
		in, out := &in.UpstreamConnpoolConnMaxReuse, &out.UpstreamConnpoolConnMaxReuse
		*out = new(string)
		**out = **in
	}
	if in.UpstreamConnpoolServerMaxCache != nil {
		in, out := &in.UpstreamConnpoolServerMaxCache, &out.UpstreamConnpoolServerMaxCache
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnPoolPropertiesObservation.
func (in *ConnPoolPropertiesObservation) DeepCopy() *ConnPoolPropertiesObservation {
	if in == nil {
		return nil
	}
	out := new(ConnPoolPropertiesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnPoolPropertiesParameters) DeepCopyInto(out *ConnPoolPropertiesParameters) {
	*out = *in
	if in.UpstreamConnpoolConnIdleTmo != nil {
		in, out := &in.UpstreamConnpoolConnIdleTmo, &out.UpstreamConnpoolConnIdleTmo
		*out = new(string)
		**out = **in
	}
	if in.UpstreamConnpoolConnLifeTmo != nil {
		in, out := &in.UpstreamConnpoolConnLifeTmo, &out.UpstreamConnpoolConnLifeTmo
		*out = new(string)
		**out = **in
	}
	if in.UpstreamConnpoolConnMaxReuse != nil {
		in, out := &in.UpstreamConnpoolConnMaxReuse, &out.UpstreamConnpoolConnMaxReuse
		*out = new(string)
		**out = **in
	}
	if in.UpstreamConnpoolServerMaxCache != nil {
		in, out := &in.UpstreamConnpoolServerMaxCache, &out.UpstreamConnpoolServerMaxCache
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnPoolPropertiesParameters.
func (in *ConnPoolPropertiesParameters) DeepCopy() *ConnPoolPropertiesParameters {
	if in == nil {
		return nil
	}
	out := new(ConnPoolPropertiesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionsRateLimitActionFileInitParameters) DeepCopyInto(out *ConnectionsRateLimitActionFileInitParameters) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.FileContent != nil {
		in, out := &in.FileContent, &out.FileContent
		*out = new(string)
		**out = **in
	}
	if in.FileLength != nil {
		in, out := &in.FileLength, &out.FileLength
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionsRateLimitActionFileInitParameters.
func (in *ConnectionsRateLimitActionFileInitParameters) DeepCopy() *ConnectionsRateLimitActionFileInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionsRateLimitActionFileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionsRateLimitActionFileObservation) DeepCopyInto(out *ConnectionsRateLimitActionFileObservation) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.FileContent != nil {
		in, out := &in.FileContent, &out.FileContent
		*out = new(string)
		**out = **in
	}
	if in.FileLength != nil {
		in, out := &in.FileLength, &out.FileLength
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionsRateLimitActionFileObservation.
func (in *ConnectionsRateLimitActionFileObservation) DeepCopy() *ConnectionsRateLimitActionFileObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionsRateLimitActionFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionsRateLimitActionFileParameters) DeepCopyInto(out *ConnectionsRateLimitActionFileParameters) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.FileContent != nil {
		in, out := &in.FileContent, &out.FileContent
		*out = new(string)
		**out = **in
	}
	if in.FileLength != nil {
		in, out := &in.FileLength, &out.FileLength
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionsRateLimitActionFileParameters.
func (in *ConnectionsRateLimitActionFileParameters) DeepCopy() *ConnectionsRateLimitActionFileParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionsRateLimitActionFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionsRateLimitActionInitParameters) DeepCopyInto(out *ConnectionsRateLimitActionInitParameters) {
	*out = *in
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]ConnectionsRateLimitActionFileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Redirect != nil {
		in, out := &in.Redirect, &out.Redirect
		*out = make([]ConnectionsRateLimitActionRedirectInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionsRateLimitActionInitParameters.
func (in *ConnectionsRateLimitActionInitParameters) DeepCopy() *ConnectionsRateLimitActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionsRateLimitActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionsRateLimitActionObservation) DeepCopyInto(out *ConnectionsRateLimitActionObservation) {
	*out = *in
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]ConnectionsRateLimitActionFileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Redirect != nil {
		in, out := &in.Redirect, &out.Redirect
		*out = make([]ConnectionsRateLimitActionRedirectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionsRateLimitActionObservation.
func (in *ConnectionsRateLimitActionObservation) DeepCopy() *ConnectionsRateLimitActionObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionsRateLimitActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionsRateLimitActionParameters) DeepCopyInto(out *ConnectionsRateLimitActionParameters) {
	*out = *in
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]ConnectionsRateLimitActionFileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Redirect != nil {
		in, out := &in.Redirect, &out.Redirect
		*out = make([]ConnectionsRateLimitActionRedirectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionsRateLimitActionParameters.
func (in *ConnectionsRateLimitActionParameters) DeepCopy() *ConnectionsRateLimitActionParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionsRateLimitActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionsRateLimitActionRedirectInitParameters) DeepCopyInto(out *ConnectionsRateLimitActionRedirectInitParameters) {
	*out = *in
	if in.AddString != nil {
		in, out := &in.AddString, &out.AddString
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = make([]RedirectHostInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeepQuery != nil {
		in, out := &in.KeepQuery, &out.KeepQuery
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = make([]RedirectPathInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionsRateLimitActionRedirectInitParameters.
func (in *ConnectionsRateLimitActionRedirectInitParameters) DeepCopy() *ConnectionsRateLimitActionRedirectInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionsRateLimitActionRedirectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionsRateLimitActionRedirectObservation) DeepCopyInto(out *ConnectionsRateLimitActionRedirectObservation) {
	*out = *in
	if in.AddString != nil {
		in, out := &in.AddString, &out.AddString
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = make([]RedirectHostObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeepQuery != nil {
		in, out := &in.KeepQuery, &out.KeepQuery
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = make([]RedirectPathObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionsRateLimitActionRedirectObservation.
func (in *ConnectionsRateLimitActionRedirectObservation) DeepCopy() *ConnectionsRateLimitActionRedirectObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionsRateLimitActionRedirectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionsRateLimitActionRedirectParameters) DeepCopyInto(out *ConnectionsRateLimitActionRedirectParameters) {
	*out = *in
	if in.AddString != nil {
		in, out := &in.AddString, &out.AddString
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = make([]RedirectHostParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeepQuery != nil {
		in, out := &in.KeepQuery, &out.KeepQuery
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = make([]RedirectPathParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionsRateLimitActionRedirectParameters.
func (in *ConnectionsRateLimitActionRedirectParameters) DeepCopy() *ConnectionsRateLimitActionRedirectParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionsRateLimitActionRedirectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionsRateLimitInitParameters) DeepCopyInto(out *ConnectionsRateLimitInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]ConnectionsRateLimitActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExplicitTracking != nil {
		in, out := &in.ExplicitTracking, &out.ExplicitTracking
		*out = new(string)
		**out = **in
	}
	if in.FineGrain != nil {
		in, out := &in.FineGrain, &out.FineGrain
		*out = new(string)
		**out = **in
	}
	if in.HTTPCookie != nil {
		in, out := &in.HTTPCookie, &out.HTTPCookie
		*out = new(string)
		**out = **in
	}
	if in.HTTPHeader != nil {
		in, out := &in.HTTPHeader, &out.HTTPHeader
		*out = new(string)
		**out = **in
	}
	if in.RateLimiter != nil {
		in, out := &in.RateLimiter, &out.RateLimiter
		*out = make([]ConnectionsRateLimitRateLimiterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionsRateLimitInitParameters.
func (in *ConnectionsRateLimitInitParameters) DeepCopy() *ConnectionsRateLimitInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionsRateLimitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionsRateLimitObservation) DeepCopyInto(out *ConnectionsRateLimitObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]ConnectionsRateLimitActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExplicitTracking != nil {
		in, out := &in.ExplicitTracking, &out.ExplicitTracking
		*out = new(string)
		**out = **in
	}
	if in.FineGrain != nil {
		in, out := &in.FineGrain, &out.FineGrain
		*out = new(string)
		**out = **in
	}
	if in.HTTPCookie != nil {
		in, out := &in.HTTPCookie, &out.HTTPCookie
		*out = new(string)
		**out = **in
	}
	if in.HTTPHeader != nil {
		in, out := &in.HTTPHeader, &out.HTTPHeader
		*out = new(string)
		**out = **in
	}
	if in.RateLimiter != nil {
		in, out := &in.RateLimiter, &out.RateLimiter
		*out = make([]ConnectionsRateLimitRateLimiterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionsRateLimitObservation.
func (in *ConnectionsRateLimitObservation) DeepCopy() *ConnectionsRateLimitObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionsRateLimitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionsRateLimitParameters) DeepCopyInto(out *ConnectionsRateLimitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]ConnectionsRateLimitActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExplicitTracking != nil {
		in, out := &in.ExplicitTracking, &out.ExplicitTracking
		*out = new(string)
		**out = **in
	}
	if in.FineGrain != nil {
		in, out := &in.FineGrain, &out.FineGrain
		*out = new(string)
		**out = **in
	}
	if in.HTTPCookie != nil {
		in, out := &in.HTTPCookie, &out.HTTPCookie
		*out = new(string)
		**out = **in
	}
	if in.HTTPHeader != nil {
		in, out := &in.HTTPHeader, &out.HTTPHeader
		*out = new(string)
		**out = **in
	}
	if in.RateLimiter != nil {
		in, out := &in.RateLimiter, &out.RateLimiter
		*out = make([]ConnectionsRateLimitRateLimiterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionsRateLimitParameters.
func (in *ConnectionsRateLimitParameters) DeepCopy() *ConnectionsRateLimitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionsRateLimitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionsRateLimitRateLimiterInitParameters) DeepCopyInto(out *ConnectionsRateLimitRateLimiterInitParameters) {
	*out = *in
	if in.BurstSz != nil {
		in, out := &in.BurstSz, &out.BurstSz
		*out = new(string)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionsRateLimitRateLimiterInitParameters.
func (in *ConnectionsRateLimitRateLimiterInitParameters) DeepCopy() *ConnectionsRateLimitRateLimiterInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionsRateLimitRateLimiterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionsRateLimitRateLimiterObservation) DeepCopyInto(out *ConnectionsRateLimitRateLimiterObservation) {
	*out = *in
	if in.BurstSz != nil {
		in, out := &in.BurstSz, &out.BurstSz
		*out = new(string)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionsRateLimitRateLimiterObservation.
func (in *ConnectionsRateLimitRateLimiterObservation) DeepCopy() *ConnectionsRateLimitRateLimiterObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionsRateLimitRateLimiterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionsRateLimitRateLimiterParameters) DeepCopyInto(out *ConnectionsRateLimitRateLimiterParameters) {
	*out = *in
	if in.BurstSz != nil {
		in, out := &in.BurstSz, &out.BurstSz
		*out = new(string)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionsRateLimitRateLimiterParameters.
func (in *ConnectionsRateLimitRateLimiterParameters) DeepCopy() *ConnectionsRateLimitRateLimiterParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionsRateLimitRateLimiterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContentRewriteInitParameters) DeepCopyInto(out *ContentRewriteInitParameters) {
	*out = *in
	if in.RewritableContentRef != nil {
		in, out := &in.RewritableContentRef, &out.RewritableContentRef
		*out = new(string)
		**out = **in
	}
	if in.RspRewriteRules != nil {
		in, out := &in.RspRewriteRules, &out.RspRewriteRules
		*out = make([]RspRewriteRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContentRewriteInitParameters.
func (in *ContentRewriteInitParameters) DeepCopy() *ContentRewriteInitParameters {
	if in == nil {
		return nil
	}
	out := new(ContentRewriteInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContentRewriteObservation) DeepCopyInto(out *ContentRewriteObservation) {
	*out = *in
	if in.RewritableContentRef != nil {
		in, out := &in.RewritableContentRef, &out.RewritableContentRef
		*out = new(string)
		**out = **in
	}
	if in.RspRewriteRules != nil {
		in, out := &in.RspRewriteRules, &out.RspRewriteRules
		*out = make([]RspRewriteRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContentRewriteObservation.
func (in *ContentRewriteObservation) DeepCopy() *ContentRewriteObservation {
	if in == nil {
		return nil
	}
	out := new(ContentRewriteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContentRewriteParameters) DeepCopyInto(out *ContentRewriteParameters) {
	*out = *in
	if in.RewritableContentRef != nil {
		in, out := &in.RewritableContentRef, &out.RewritableContentRef
		*out = new(string)
		**out = **in
	}
	if in.RspRewriteRules != nil {
		in, out := &in.RspRewriteRules, &out.RspRewriteRules
		*out = make([]RspRewriteRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContentRewriteParameters.
func (in *ContentRewriteParameters) DeepCopy() *ContentRewriteParameters {
	if in == nil {
		return nil
	}
	out := new(ContentRewriteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CookieInitParameters) DeepCopyInto(out *CookieInitParameters) {
	*out = *in
	if in.MatchCase != nil {
		in, out := &in.MatchCase, &out.MatchCase
		*out = new(string)
		**out = **in
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CookieInitParameters.
func (in *CookieInitParameters) DeepCopy() *CookieInitParameters {
	if in == nil {
		return nil
	}
	out := new(CookieInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CookieObservation) DeepCopyInto(out *CookieObservation) {
	*out = *in
	if in.MatchCase != nil {
		in, out := &in.MatchCase, &out.MatchCase
		*out = new(string)
		**out = **in
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CookieObservation.
func (in *CookieObservation) DeepCopy() *CookieObservation {
	if in == nil {
		return nil
	}
	out := new(CookieObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CookieParameters) DeepCopyInto(out *CookieParameters) {
	*out = *in
	if in.MatchCase != nil {
		in, out := &in.MatchCase, &out.MatchCase
		*out = new(string)
		**out = **in
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CookieParameters.
func (in *CookieParameters) DeepCopy() *CookieParameters {
	if in == nil {
		return nil
	}
	out := new(CookieParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomTagInitParameters) DeepCopyInto(out *CustomTagInitParameters) {
	*out = *in
	if in.TagKey != nil {
		in, out := &in.TagKey, &out.TagKey
		*out = new(string)
		**out = **in
	}
	if in.TagVal != nil {
		in, out := &in.TagVal, &out.TagVal
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomTagInitParameters.
func (in *CustomTagInitParameters) DeepCopy() *CustomTagInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomTagInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomTagObservation) DeepCopyInto(out *CustomTagObservation) {
	*out = *in
	if in.TagKey != nil {
		in, out := &in.TagKey, &out.TagKey
		*out = new(string)
		**out = **in
	}
	if in.TagVal != nil {
		in, out := &in.TagVal, &out.TagVal
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomTagObservation.
func (in *CustomTagObservation) DeepCopy() *CustomTagObservation {
	if in == nil {
		return nil
	}
	out := new(CustomTagObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomTagParameters) DeepCopyInto(out *CustomTagParameters) {
	*out = *in
	if in.TagKey != nil {
		in, out := &in.TagKey, &out.TagKey
		*out = new(string)
		**out = **in
	}
	if in.TagVal != nil {
		in, out := &in.TagVal, &out.TagVal
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomTagParameters.
func (in *CustomTagParameters) DeepCopy() *CustomTagParameters {
	if in == nil {
		return nil
	}
	out := new(CustomTagParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSConfigsInitParameters) DeepCopyInto(out *DNSConfigsInitParameters) {
	*out = *in
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSConfigsInitParameters.
func (in *DNSConfigsInitParameters) DeepCopy() *DNSConfigsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DNSConfigsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSConfigsObservation) DeepCopyInto(out *DNSConfigsObservation) {
	*out = *in
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSConfigsObservation.
func (in *DNSConfigsObservation) DeepCopy() *DNSConfigsObservation {
	if in == nil {
		return nil
	}
	out := new(DNSConfigsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSConfigsParameters) DeepCopyInto(out *DNSConfigsParameters) {
	*out = *in
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSConfigsParameters.
func (in *DNSConfigsParameters) DeepCopy() *DNSConfigsParameters {
	if in == nil {
		return nil
	}
	out := new(DNSConfigsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSInfoInitParameters) DeepCopyInto(out *DNSInfoInitParameters) {
	*out = *in
	if in.Algorithm != nil {
		in, out := &in.Algorithm, &out.Algorithm
		*out = new(string)
		**out = **in
	}
	if in.Cname != nil {
		in, out := &in.Cname, &out.Cname
		*out = make([]CnameInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.NumRecordsInResponse != nil {
		in, out := &in.NumRecordsInResponse, &out.NumRecordsInResponse
		*out = new(string)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSInfoInitParameters.
func (in *DNSInfoInitParameters) DeepCopy() *DNSInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(DNSInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSInfoObservation) DeepCopyInto(out *DNSInfoObservation) {
	*out = *in
	if in.Algorithm != nil {
		in, out := &in.Algorithm, &out.Algorithm
		*out = new(string)
		**out = **in
	}
	if in.Cname != nil {
		in, out := &in.Cname, &out.Cname
		*out = make([]CnameObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.NumRecordsInResponse != nil {
		in, out := &in.NumRecordsInResponse, &out.NumRecordsInResponse
		*out = new(string)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSInfoObservation.
func (in *DNSInfoObservation) DeepCopy() *DNSInfoObservation {
	if in == nil {
		return nil
	}
	out := new(DNSInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSInfoParameters) DeepCopyInto(out *DNSInfoParameters) {
	*out = *in
	if in.Algorithm != nil {
		in, out := &in.Algorithm, &out.Algorithm
		*out = new(string)
		**out = **in
	}
	if in.Cname != nil {
		in, out := &in.Cname, &out.Cname
		*out = make([]CnameParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.NumRecordsInResponse != nil {
		in, out := &in.NumRecordsInResponse, &out.NumRecordsInResponse
		*out = new(string)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSInfoParameters.
func (in *DNSInfoParameters) DeepCopy() *DNSInfoParameters {
	if in == nil {
		return nil
	}
	out := new(DNSInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSPoliciesInitParameters) DeepCopyInto(out *DNSPoliciesInitParameters) {
	*out = *in
	if in.DNSPolicyRef != nil {
		in, out := &in.DNSPolicyRef, &out.DNSPolicyRef
		*out = new(string)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSPoliciesInitParameters.
func (in *DNSPoliciesInitParameters) DeepCopy() *DNSPoliciesInitParameters {
	if in == nil {
		return nil
	}
	out := new(DNSPoliciesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSPoliciesObservation) DeepCopyInto(out *DNSPoliciesObservation) {
	*out = *in
	if in.DNSPolicyRef != nil {
		in, out := &in.DNSPolicyRef, &out.DNSPolicyRef
		*out = new(string)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSPoliciesObservation.
func (in *DNSPoliciesObservation) DeepCopy() *DNSPoliciesObservation {
	if in == nil {
		return nil
	}
	out := new(DNSPoliciesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSPoliciesParameters) DeepCopyInto(out *DNSPoliciesParameters) {
	*out = *in
	if in.DNSPolicyRef != nil {
		in, out := &in.DNSPolicyRef, &out.DNSPolicyRef
		*out = new(string)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSPoliciesParameters.
func (in *DNSPoliciesParameters) DeepCopy() *DNSPoliciesParameters {
	if in == nil {
		return nil
	}
	out := new(DNSPoliciesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSVsesInitParameters) DeepCopyInto(out *DNSVsesInitParameters) {
	*out = *in
	if in.DNSVsUUID != nil {
		in, out := &in.DNSVsUUID, &out.DNSVsUUID
		*out = new(string)
		**out = **in
	}
	if in.DomainNames != nil {
		in, out := &in.DomainNames, &out.DomainNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSVsesInitParameters.
func (in *DNSVsesInitParameters) DeepCopy() *DNSVsesInitParameters {
	if in == nil {
		return nil
	}
	out := new(DNSVsesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSVsesObservation) DeepCopyInto(out *DNSVsesObservation) {
	*out = *in
	if in.DNSVsUUID != nil {
		in, out := &in.DNSVsUUID, &out.DNSVsUUID
		*out = new(string)
		**out = **in
	}
	if in.DomainNames != nil {
		in, out := &in.DomainNames, &out.DomainNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSVsesObservation.
func (in *DNSVsesObservation) DeepCopy() *DNSVsesObservation {
	if in == nil {
		return nil
	}
	out := new(DNSVsesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSVsesParameters) DeepCopyInto(out *DNSVsesParameters) {
	*out = *in
	if in.DNSVsUUID != nil {
		in, out := &in.DNSVsUUID, &out.DNSVsUUID
		*out = new(string)
		**out = **in
	}
	if in.DomainNames != nil {
		in, out := &in.DomainNames, &out.DomainNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSVsesParameters.
func (in *DNSVsesParameters) DeepCopy() *DNSVsesParameters {
	if in == nil {
		return nil
	}
	out := new(DNSVsesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataVnicsInitParameters) DeepCopyInto(out *DataVnicsInitParameters) {
	*out = *in
	if in.Adapter != nil {
		in, out := &in.Adapter, &out.Adapter
		*out = new(string)
		**out = **in
	}
	if in.AggregatorChgd != nil {
		in, out := &in.AggregatorChgd, &out.AggregatorChgd
		*out = new(string)
		**out = **in
	}
	if in.CanSeDpTakeover != nil {
		in, out := &in.CanSeDpTakeover, &out.CanSeDpTakeover
		*out = new(string)
		**out = **in
	}
	if in.Connected != nil {
		in, out := &in.Connected, &out.Connected
		*out = new(string)
		**out = **in
	}
	if in.DHCPEnabled != nil {
		in, out := &in.DHCPEnabled, &out.DHCPEnabled
		*out = new(string)
		**out = **in
	}
	if in.DelPending != nil {
		in, out := &in.DelPending, &out.DelPending
		*out = new(string)
		**out = **in
	}
	if in.DeleteVnic != nil {
		in, out := &in.DeleteVnic, &out.DeleteVnic
		*out = new(string)
		**out = **in
	}
	if in.DpDeletionDone != nil {
		in, out := &in.DpDeletionDone, &out.DpDeletionDone
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.IfName != nil {
		in, out := &in.IfName, &out.IfName
		*out = new(string)
		**out = **in
	}
	if in.Ip6AutocfgEnabled != nil {
		in, out := &in.Ip6AutocfgEnabled, &out.Ip6AutocfgEnabled
		*out = new(string)
		**out = **in
	}
	if in.IsAsm != nil {
		in, out := &in.IsAsm, &out.IsAsm
		*out = new(string)
		**out = **in
	}
	if in.IsAviInternalNetwork != nil {
		in, out := &in.IsAviInternalNetwork, &out.IsAviInternalNetwork
		*out = new(string)
		**out = **in
	}
	if in.IsHSM != nil {
		in, out := &in.IsHSM, &out.IsHSM
		*out = new(string)
		**out = **in
	}
	if in.IsMgmt != nil {
		in, out := &in.IsMgmt, &out.IsMgmt
		*out = new(string)
		**out = **in
	}
	if in.IsPortchannel != nil {
		in, out := &in.IsPortchannel, &out.IsPortchannel
		*out = new(string)
		**out = **in
	}
	if in.LinkUp != nil {
		in, out := &in.LinkUp, &out.LinkUp
		*out = new(string)
		**out = **in
	}
	if in.LinuxName != nil {
		in, out := &in.LinuxName, &out.LinuxName
		*out = new(string)
		**out = **in
	}
	if in.MacAddress != nil {
		in, out := &in.MacAddress, &out.MacAddress
		*out = new(string)
		**out = **in
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]MembersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(string)
		**out = **in
	}
	if in.NetworkName != nil {
		in, out := &in.NetworkName, &out.NetworkName
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.NumRxDescriptors != nil {
		in, out := &in.NumRxDescriptors, &out.NumRxDescriptors
		*out = new(string)
		**out = **in
	}
	if in.NumTxDescriptors != nil {
		in, out := &in.NumTxDescriptors, &out.NumTxDescriptors
		*out = new(string)
		**out = **in
	}
	if in.PciID != nil {
		in, out := &in.PciID, &out.PciID
		*out = new(string)
		**out = **in
	}
	if in.PortUUID != nil {
		in, out := &in.PortUUID, &out.PortUUID
		*out = new(string)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(string)
		**out = **in
	}
	if in.VlanInterfaces != nil {
		in, out := &in.VlanInterfaces, &out.VlanInterfaces
		*out = make([]VlanInterfacesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VnicNetworks != nil {
		in, out := &in.VnicNetworks, &out.VnicNetworks
		*out = make([]DataVnicsVnicNetworksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VrfID != nil {
		in, out := &in.VrfID, &out.VrfID
		*out = new(string)
		**out = **in
	}
	if in.VrfRef != nil {
		in, out := &in.VrfRef, &out.VrfRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataVnicsInitParameters.
func (in *DataVnicsInitParameters) DeepCopy() *DataVnicsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DataVnicsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataVnicsObservation) DeepCopyInto(out *DataVnicsObservation) {
	*out = *in
	if in.Adapter != nil {
		in, out := &in.Adapter, &out.Adapter
		*out = new(string)
		**out = **in
	}
	if in.AggregatorChgd != nil {
		in, out := &in.AggregatorChgd, &out.AggregatorChgd
		*out = new(string)
		**out = **in
	}
	if in.CanSeDpTakeover != nil {
		in, out := &in.CanSeDpTakeover, &out.CanSeDpTakeover
		*out = new(string)
		**out = **in
	}
	if in.Connected != nil {
		in, out := &in.Connected, &out.Connected
		*out = new(string)
		**out = **in
	}
	if in.DHCPEnabled != nil {
		in, out := &in.DHCPEnabled, &out.DHCPEnabled
		*out = new(string)
		**out = **in
	}
	if in.DelPending != nil {
		in, out := &in.DelPending, &out.DelPending
		*out = new(string)
		**out = **in
	}
	if in.DeleteVnic != nil {
		in, out := &in.DeleteVnic, &out.DeleteVnic
		*out = new(string)
		**out = **in
	}
	if in.DpDeletionDone != nil {
		in, out := &in.DpDeletionDone, &out.DpDeletionDone
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.IfName != nil {
		in, out := &in.IfName, &out.IfName
		*out = new(string)
		**out = **in
	}
	if in.Ip6AutocfgEnabled != nil {
		in, out := &in.Ip6AutocfgEnabled, &out.Ip6AutocfgEnabled
		*out = new(string)
		**out = **in
	}
	if in.IsAsm != nil {
		in, out := &in.IsAsm, &out.IsAsm
		*out = new(string)
		**out = **in
	}
	if in.IsAviInternalNetwork != nil {
		in, out := &in.IsAviInternalNetwork, &out.IsAviInternalNetwork
		*out = new(string)
		**out = **in
	}
	if in.IsHSM != nil {
		in, out := &in.IsHSM, &out.IsHSM
		*out = new(string)
		**out = **in
	}
	if in.IsMgmt != nil {
		in, out := &in.IsMgmt, &out.IsMgmt
		*out = new(string)
		**out = **in
	}
	if in.IsPortchannel != nil {
		in, out := &in.IsPortchannel, &out.IsPortchannel
		*out = new(string)
		**out = **in
	}
	if in.LinkUp != nil {
		in, out := &in.LinkUp, &out.LinkUp
		*out = new(string)
		**out = **in
	}
	if in.LinuxName != nil {
		in, out := &in.LinuxName, &out.LinuxName
		*out = new(string)
		**out = **in
	}
	if in.MacAddress != nil {
		in, out := &in.MacAddress, &out.MacAddress
		*out = new(string)
		**out = **in
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]MembersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(string)
		**out = **in
	}
	if in.NetworkName != nil {
		in, out := &in.NetworkName, &out.NetworkName
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.NumRxDescriptors != nil {
		in, out := &in.NumRxDescriptors, &out.NumRxDescriptors
		*out = new(string)
		**out = **in
	}
	if in.NumTxDescriptors != nil {
		in, out := &in.NumTxDescriptors, &out.NumTxDescriptors
		*out = new(string)
		**out = **in
	}
	if in.PciID != nil {
		in, out := &in.PciID, &out.PciID
		*out = new(string)
		**out = **in
	}
	if in.PortUUID != nil {
		in, out := &in.PortUUID, &out.PortUUID
		*out = new(string)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(string)
		**out = **in
	}
	if in.VlanInterfaces != nil {
		in, out := &in.VlanInterfaces, &out.VlanInterfaces
		*out = make([]VlanInterfacesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VnicNetworks != nil {
		in, out := &in.VnicNetworks, &out.VnicNetworks
		*out = make([]DataVnicsVnicNetworksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VrfID != nil {
		in, out := &in.VrfID, &out.VrfID
		*out = new(string)
		**out = **in
	}
	if in.VrfRef != nil {
		in, out := &in.VrfRef, &out.VrfRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataVnicsObservation.
func (in *DataVnicsObservation) DeepCopy() *DataVnicsObservation {
	if in == nil {
		return nil
	}
	out := new(DataVnicsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataVnicsParameters) DeepCopyInto(out *DataVnicsParameters) {
	*out = *in
	if in.Adapter != nil {
		in, out := &in.Adapter, &out.Adapter
		*out = new(string)
		**out = **in
	}
	if in.AggregatorChgd != nil {
		in, out := &in.AggregatorChgd, &out.AggregatorChgd
		*out = new(string)
		**out = **in
	}
	if in.CanSeDpTakeover != nil {
		in, out := &in.CanSeDpTakeover, &out.CanSeDpTakeover
		*out = new(string)
		**out = **in
	}
	if in.Connected != nil {
		in, out := &in.Connected, &out.Connected
		*out = new(string)
		**out = **in
	}
	if in.DHCPEnabled != nil {
		in, out := &in.DHCPEnabled, &out.DHCPEnabled
		*out = new(string)
		**out = **in
	}
	if in.DelPending != nil {
		in, out := &in.DelPending, &out.DelPending
		*out = new(string)
		**out = **in
	}
	if in.DeleteVnic != nil {
		in, out := &in.DeleteVnic, &out.DeleteVnic
		*out = new(string)
		**out = **in
	}
	if in.DpDeletionDone != nil {
		in, out := &in.DpDeletionDone, &out.DpDeletionDone
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.IfName != nil {
		in, out := &in.IfName, &out.IfName
		*out = new(string)
		**out = **in
	}
	if in.Ip6AutocfgEnabled != nil {
		in, out := &in.Ip6AutocfgEnabled, &out.Ip6AutocfgEnabled
		*out = new(string)
		**out = **in
	}
	if in.IsAsm != nil {
		in, out := &in.IsAsm, &out.IsAsm
		*out = new(string)
		**out = **in
	}
	if in.IsAviInternalNetwork != nil {
		in, out := &in.IsAviInternalNetwork, &out.IsAviInternalNetwork
		*out = new(string)
		**out = **in
	}
	if in.IsHSM != nil {
		in, out := &in.IsHSM, &out.IsHSM
		*out = new(string)
		**out = **in
	}
	if in.IsMgmt != nil {
		in, out := &in.IsMgmt, &out.IsMgmt
		*out = new(string)
		**out = **in
	}
	if in.IsPortchannel != nil {
		in, out := &in.IsPortchannel, &out.IsPortchannel
		*out = new(string)
		**out = **in
	}
	if in.LinkUp != nil {
		in, out := &in.LinkUp, &out.LinkUp
		*out = new(string)
		**out = **in
	}
	if in.LinuxName != nil {
		in, out := &in.LinuxName, &out.LinuxName
		*out = new(string)
		**out = **in
	}
	if in.MacAddress != nil {
		in, out := &in.MacAddress, &out.MacAddress
		*out = new(string)
		**out = **in
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]MembersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(string)
		**out = **in
	}
	if in.NetworkName != nil {
		in, out := &in.NetworkName, &out.NetworkName
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.NumRxDescriptors != nil {
		in, out := &in.NumRxDescriptors, &out.NumRxDescriptors
		*out = new(string)
		**out = **in
	}
	if in.NumTxDescriptors != nil {
		in, out := &in.NumTxDescriptors, &out.NumTxDescriptors
		*out = new(string)
		**out = **in
	}
	if in.PciID != nil {
		in, out := &in.PciID, &out.PciID
		*out = new(string)
		**out = **in
	}
	if in.PortUUID != nil {
		in, out := &in.PortUUID, &out.PortUUID
		*out = new(string)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(string)
		**out = **in
	}
	if in.VlanInterfaces != nil {
		in, out := &in.VlanInterfaces, &out.VlanInterfaces
		*out = make([]VlanInterfacesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VnicNetworks != nil {
		in, out := &in.VnicNetworks, &out.VnicNetworks
		*out = make([]DataVnicsVnicNetworksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VrfID != nil {
		in, out := &in.VrfID, &out.VrfID
		*out = new(string)
		**out = **in
	}
	if in.VrfRef != nil {
		in, out := &in.VrfRef, &out.VrfRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataVnicsParameters.
func (in *DataVnicsParameters) DeepCopy() *DataVnicsParameters {
	if in == nil {
		return nil
	}
	out := new(DataVnicsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataVnicsVnicNetworksIPInitParameters) DeepCopyInto(out *DataVnicsVnicNetworksIPInitParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]VnicNetworksIPIPAddrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataVnicsVnicNetworksIPInitParameters.
func (in *DataVnicsVnicNetworksIPInitParameters) DeepCopy() *DataVnicsVnicNetworksIPInitParameters {
	if in == nil {
		return nil
	}
	out := new(DataVnicsVnicNetworksIPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataVnicsVnicNetworksIPObservation) DeepCopyInto(out *DataVnicsVnicNetworksIPObservation) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]VnicNetworksIPIPAddrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataVnicsVnicNetworksIPObservation.
func (in *DataVnicsVnicNetworksIPObservation) DeepCopy() *DataVnicsVnicNetworksIPObservation {
	if in == nil {
		return nil
	}
	out := new(DataVnicsVnicNetworksIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataVnicsVnicNetworksIPParameters) DeepCopyInto(out *DataVnicsVnicNetworksIPParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]VnicNetworksIPIPAddrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataVnicsVnicNetworksIPParameters.
func (in *DataVnicsVnicNetworksIPParameters) DeepCopy() *DataVnicsVnicNetworksIPParameters {
	if in == nil {
		return nil
	}
	out := new(DataVnicsVnicNetworksIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataVnicsVnicNetworksInitParameters) DeepCopyInto(out *DataVnicsVnicNetworksInitParameters) {
	*out = *in
	if in.CtlrAlloc != nil {
		in, out := &in.CtlrAlloc, &out.CtlrAlloc
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = make([]DataVnicsVnicNetworksIPInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataVnicsVnicNetworksInitParameters.
func (in *DataVnicsVnicNetworksInitParameters) DeepCopy() *DataVnicsVnicNetworksInitParameters {
	if in == nil {
		return nil
	}
	out := new(DataVnicsVnicNetworksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataVnicsVnicNetworksObservation) DeepCopyInto(out *DataVnicsVnicNetworksObservation) {
	*out = *in
	if in.CtlrAlloc != nil {
		in, out := &in.CtlrAlloc, &out.CtlrAlloc
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = make([]DataVnicsVnicNetworksIPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataVnicsVnicNetworksObservation.
func (in *DataVnicsVnicNetworksObservation) DeepCopy() *DataVnicsVnicNetworksObservation {
	if in == nil {
		return nil
	}
	out := new(DataVnicsVnicNetworksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataVnicsVnicNetworksParameters) DeepCopyInto(out *DataVnicsVnicNetworksParameters) {
	*out = *in
	if in.CtlrAlloc != nil {
		in, out := &in.CtlrAlloc, &out.CtlrAlloc
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = make([]DataVnicsVnicNetworksIPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataVnicsVnicNetworksParameters.
func (in *DataVnicsVnicNetworksParameters) DeepCopy() *DataVnicsVnicNetworksParameters {
	if in == nil {
		return nil
	}
	out := new(DataVnicsVnicNetworksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoveredNetworksInitParameters) DeepCopyInto(out *DiscoveredNetworksInitParameters) {
	*out = *in
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]DiscoveredNetworksSubnetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnet6 != nil {
		in, out := &in.Subnet6, &out.Subnet6
		*out = make([]Subnet6InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoveredNetworksInitParameters.
func (in *DiscoveredNetworksInitParameters) DeepCopy() *DiscoveredNetworksInitParameters {
	if in == nil {
		return nil
	}
	out := new(DiscoveredNetworksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoveredNetworksObservation) DeepCopyInto(out *DiscoveredNetworksObservation) {
	*out = *in
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]DiscoveredNetworksSubnetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnet6 != nil {
		in, out := &in.Subnet6, &out.Subnet6
		*out = make([]Subnet6Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoveredNetworksObservation.
func (in *DiscoveredNetworksObservation) DeepCopy() *DiscoveredNetworksObservation {
	if in == nil {
		return nil
	}
	out := new(DiscoveredNetworksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoveredNetworksParameters) DeepCopyInto(out *DiscoveredNetworksParameters) {
	*out = *in
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]DiscoveredNetworksSubnetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnet6 != nil {
		in, out := &in.Subnet6, &out.Subnet6
		*out = make([]Subnet6Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoveredNetworksParameters.
func (in *DiscoveredNetworksParameters) DeepCopy() *DiscoveredNetworksParameters {
	if in == nil {
		return nil
	}
	out := new(DiscoveredNetworksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoveredNetworksSubnet6IPAddrInitParameters) DeepCopyInto(out *DiscoveredNetworksSubnet6IPAddrInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoveredNetworksSubnet6IPAddrInitParameters.
func (in *DiscoveredNetworksSubnet6IPAddrInitParameters) DeepCopy() *DiscoveredNetworksSubnet6IPAddrInitParameters {
	if in == nil {
		return nil
	}
	out := new(DiscoveredNetworksSubnet6IPAddrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoveredNetworksSubnet6IPAddrObservation) DeepCopyInto(out *DiscoveredNetworksSubnet6IPAddrObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoveredNetworksSubnet6IPAddrObservation.
func (in *DiscoveredNetworksSubnet6IPAddrObservation) DeepCopy() *DiscoveredNetworksSubnet6IPAddrObservation {
	if in == nil {
		return nil
	}
	out := new(DiscoveredNetworksSubnet6IPAddrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoveredNetworksSubnet6IPAddrParameters) DeepCopyInto(out *DiscoveredNetworksSubnet6IPAddrParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoveredNetworksSubnet6IPAddrParameters.
func (in *DiscoveredNetworksSubnet6IPAddrParameters) DeepCopy() *DiscoveredNetworksSubnet6IPAddrParameters {
	if in == nil {
		return nil
	}
	out := new(DiscoveredNetworksSubnet6IPAddrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoveredNetworksSubnet6InitParameters) DeepCopyInto(out *DiscoveredNetworksSubnet6InitParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]DiscoveredNetworksSubnet6IPAddrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoveredNetworksSubnet6InitParameters.
func (in *DiscoveredNetworksSubnet6InitParameters) DeepCopy() *DiscoveredNetworksSubnet6InitParameters {
	if in == nil {
		return nil
	}
	out := new(DiscoveredNetworksSubnet6InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoveredNetworksSubnet6Observation) DeepCopyInto(out *DiscoveredNetworksSubnet6Observation) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]DiscoveredNetworksSubnet6IPAddrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoveredNetworksSubnet6Observation.
func (in *DiscoveredNetworksSubnet6Observation) DeepCopy() *DiscoveredNetworksSubnet6Observation {
	if in == nil {
		return nil
	}
	out := new(DiscoveredNetworksSubnet6Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoveredNetworksSubnet6Parameters) DeepCopyInto(out *DiscoveredNetworksSubnet6Parameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]DiscoveredNetworksSubnet6IPAddrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoveredNetworksSubnet6Parameters.
func (in *DiscoveredNetworksSubnet6Parameters) DeepCopy() *DiscoveredNetworksSubnet6Parameters {
	if in == nil {
		return nil
	}
	out := new(DiscoveredNetworksSubnet6Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoveredNetworksSubnetIPAddrInitParameters) DeepCopyInto(out *DiscoveredNetworksSubnetIPAddrInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoveredNetworksSubnetIPAddrInitParameters.
func (in *DiscoveredNetworksSubnetIPAddrInitParameters) DeepCopy() *DiscoveredNetworksSubnetIPAddrInitParameters {
	if in == nil {
		return nil
	}
	out := new(DiscoveredNetworksSubnetIPAddrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoveredNetworksSubnetIPAddrObservation) DeepCopyInto(out *DiscoveredNetworksSubnetIPAddrObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoveredNetworksSubnetIPAddrObservation.
func (in *DiscoveredNetworksSubnetIPAddrObservation) DeepCopy() *DiscoveredNetworksSubnetIPAddrObservation {
	if in == nil {
		return nil
	}
	out := new(DiscoveredNetworksSubnetIPAddrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoveredNetworksSubnetIPAddrParameters) DeepCopyInto(out *DiscoveredNetworksSubnetIPAddrParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoveredNetworksSubnetIPAddrParameters.
func (in *DiscoveredNetworksSubnetIPAddrParameters) DeepCopy() *DiscoveredNetworksSubnetIPAddrParameters {
	if in == nil {
		return nil
	}
	out := new(DiscoveredNetworksSubnetIPAddrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoveredNetworksSubnetInitParameters) DeepCopyInto(out *DiscoveredNetworksSubnetInitParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]DiscoveredNetworksSubnetIPAddrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoveredNetworksSubnetInitParameters.
func (in *DiscoveredNetworksSubnetInitParameters) DeepCopy() *DiscoveredNetworksSubnetInitParameters {
	if in == nil {
		return nil
	}
	out := new(DiscoveredNetworksSubnetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoveredNetworksSubnetObservation) DeepCopyInto(out *DiscoveredNetworksSubnetObservation) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]DiscoveredNetworksSubnetIPAddrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoveredNetworksSubnetObservation.
func (in *DiscoveredNetworksSubnetObservation) DeepCopy() *DiscoveredNetworksSubnetObservation {
	if in == nil {
		return nil
	}
	out := new(DiscoveredNetworksSubnetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoveredNetworksSubnetParameters) DeepCopyInto(out *DiscoveredNetworksSubnetParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]DiscoveredNetworksSubnetIPAddrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoveredNetworksSubnetParameters.
func (in *DiscoveredNetworksSubnetParameters) DeepCopy() *DiscoveredNetworksSubnetParameters {
	if in == nil {
		return nil
	}
	out := new(DiscoveredNetworksSubnetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnatIPInitParameters) DeepCopyInto(out *DnatIPInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnatIPInitParameters.
func (in *DnatIPInitParameters) DeepCopy() *DnatIPInitParameters {
	if in == nil {
		return nil
	}
	out := new(DnatIPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnatIPObservation) DeepCopyInto(out *DnatIPObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnatIPObservation.
func (in *DnatIPObservation) DeepCopy() *DnatIPObservation {
	if in == nil {
		return nil
	}
	out := new(DnatIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnatIPParameters) DeepCopyInto(out *DnatIPParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnatIPParameters.
func (in *DnatIPParameters) DeepCopy() *DnatIPParameters {
	if in == nil {
		return nil
	}
	out := new(DnatIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DstIPIPAddrInitParameters) DeepCopyInto(out *DstIPIPAddrInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DstIPIPAddrInitParameters.
func (in *DstIPIPAddrInitParameters) DeepCopy() *DstIPIPAddrInitParameters {
	if in == nil {
		return nil
	}
	out := new(DstIPIPAddrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DstIPIPAddrObservation) DeepCopyInto(out *DstIPIPAddrObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DstIPIPAddrObservation.
func (in *DstIPIPAddrObservation) DeepCopy() *DstIPIPAddrObservation {
	if in == nil {
		return nil
	}
	out := new(DstIPIPAddrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DstIPIPAddrParameters) DeepCopyInto(out *DstIPIPAddrParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DstIPIPAddrParameters.
func (in *DstIPIPAddrParameters) DeepCopy() *DstIPIPAddrParameters {
	if in == nil {
		return nil
	}
	out := new(DstIPIPAddrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DstIPInitParameters) DeepCopyInto(out *DstIPInitParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]DstIPIPAddrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DstIPInitParameters.
func (in *DstIPInitParameters) DeepCopy() *DstIPInitParameters {
	if in == nil {
		return nil
	}
	out := new(DstIPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DstIPObservation) DeepCopyInto(out *DstIPObservation) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]DstIPIPAddrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DstIPObservation.
func (in *DstIPObservation) DeepCopy() *DstIPObservation {
	if in == nil {
		return nil
	}
	out := new(DstIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DstIPParameters) DeepCopyInto(out *DstIPParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]DstIPIPAddrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DstIPParameters.
func (in *DstIPParameters) DeepCopy() *DstIPParameters {
	if in == nil {
		return nil
	}
	out := new(DstIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DstPortInitParameters) DeepCopyInto(out *DstPortInitParameters) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DstPortInitParameters.
func (in *DstPortInitParameters) DeepCopy() *DstPortInitParameters {
	if in == nil {
		return nil
	}
	out := new(DstPortInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DstPortObservation) DeepCopyInto(out *DstPortObservation) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DstPortObservation.
func (in *DstPortObservation) DeepCopy() *DstPortObservation {
	if in == nil {
		return nil
	}
	out := new(DstPortObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DstPortParameters) DeepCopyInto(out *DstPortParameters) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DstPortParameters.
func (in *DstPortParameters) DeepCopy() *DstPortParameters {
	if in == nil {
		return nil
	}
	out := new(DstPortParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndInitParameters) DeepCopyInto(out *EndInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndInitParameters.
func (in *EndInitParameters) DeepCopy() *EndInitParameters {
	if in == nil {
		return nil
	}
	out := new(EndInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndObservation) DeepCopyInto(out *EndObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndObservation.
func (in *EndObservation) DeepCopy() *EndObservation {
	if in == nil {
		return nil
	}
	out := new(EndObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndParameters) DeepCopyInto(out *EndParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndParameters.
func (in *EndParameters) DeepCopy() *EndParameters {
	if in == nil {
		return nil
	}
	out := new(EndParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FailActionInitParameters) DeepCopyInto(out *FailActionInitParameters) {
	*out = *in
	if in.LocalRsp != nil {
		in, out := &in.LocalRsp, &out.LocalRsp
		*out = make([]LocalRspInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Redirect != nil {
		in, out := &in.Redirect, &out.Redirect
		*out = make([]RedirectInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FailActionInitParameters.
func (in *FailActionInitParameters) DeepCopy() *FailActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(FailActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FailActionObservation) DeepCopyInto(out *FailActionObservation) {
	*out = *in
	if in.LocalRsp != nil {
		in, out := &in.LocalRsp, &out.LocalRsp
		*out = make([]LocalRspObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Redirect != nil {
		in, out := &in.Redirect, &out.Redirect
		*out = make([]RedirectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FailActionObservation.
func (in *FailActionObservation) DeepCopy() *FailActionObservation {
	if in == nil {
		return nil
	}
	out := new(FailActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FailActionParameters) DeepCopyInto(out *FailActionParameters) {
	*out = *in
	if in.LocalRsp != nil {
		in, out := &in.LocalRsp, &out.LocalRsp
		*out = make([]LocalRspParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Redirect != nil {
		in, out := &in.Redirect, &out.Redirect
		*out = make([]RedirectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FailActionParameters.
func (in *FailActionParameters) DeepCopy() *FailActionParameters {
	if in == nil {
		return nil
	}
	out := new(FailActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileInitParameters) DeepCopyInto(out *FileInitParameters) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.FileContent != nil {
		in, out := &in.FileContent, &out.FileContent
		*out = new(string)
		**out = **in
	}
	if in.FileLength != nil {
		in, out := &in.FileLength, &out.FileLength
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileInitParameters.
func (in *FileInitParameters) DeepCopy() *FileInitParameters {
	if in == nil {
		return nil
	}
	out := new(FileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileObservation) DeepCopyInto(out *FileObservation) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.FileContent != nil {
		in, out := &in.FileContent, &out.FileContent
		*out = new(string)
		**out = **in
	}
	if in.FileLength != nil {
		in, out := &in.FileLength, &out.FileLength
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileObservation.
func (in *FileObservation) DeepCopy() *FileObservation {
	if in == nil {
		return nil
	}
	out := new(FileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileParameters) DeepCopyInto(out *FileParameters) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.FileContent != nil {
		in, out := &in.FileContent, &out.FileContent
		*out = new(string)
		**out = **in
	}
	if in.FileLength != nil {
		in, out := &in.FileLength, &out.FileLength
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileParameters.
func (in *FileParameters) DeepCopy() *FileParameters {
	if in == nil {
		return nil
	}
	out := new(FileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FloatingIPInitParameters) DeepCopyInto(out *FloatingIPInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FloatingIPInitParameters.
func (in *FloatingIPInitParameters) DeepCopy() *FloatingIPInitParameters {
	if in == nil {
		return nil
	}
	out := new(FloatingIPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FloatingIPObservation) DeepCopyInto(out *FloatingIPObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FloatingIPObservation.
func (in *FloatingIPObservation) DeepCopy() *FloatingIPObservation {
	if in == nil {
		return nil
	}
	out := new(FloatingIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FloatingIPParameters) DeepCopyInto(out *FloatingIPParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FloatingIPParameters.
func (in *FloatingIPParameters) DeepCopy() *FloatingIPParameters {
	if in == nil {
		return nil
	}
	out := new(FloatingIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FloatingIp6InitParameters) DeepCopyInto(out *FloatingIp6InitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FloatingIp6InitParameters.
func (in *FloatingIp6InitParameters) DeepCopy() *FloatingIp6InitParameters {
	if in == nil {
		return nil
	}
	out := new(FloatingIp6InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FloatingIp6Observation) DeepCopyInto(out *FloatingIp6Observation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FloatingIp6Observation.
func (in *FloatingIp6Observation) DeepCopy() *FloatingIp6Observation {
	if in == nil {
		return nil
	}
	out := new(FloatingIp6Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FloatingIp6Parameters) DeepCopyInto(out *FloatingIp6Parameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FloatingIp6Parameters.
func (in *FloatingIp6Parameters) DeepCopy() *FloatingIp6Parameters {
	if in == nil {
		return nil
	}
	out := new(FloatingIp6Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FullClientLogsInitParameters) DeepCopyInto(out *FullClientLogsInitParameters) {
	*out = *in
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.Throttle != nil {
		in, out := &in.Throttle, &out.Throttle
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FullClientLogsInitParameters.
func (in *FullClientLogsInitParameters) DeepCopy() *FullClientLogsInitParameters {
	if in == nil {
		return nil
	}
	out := new(FullClientLogsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FullClientLogsObservation) DeepCopyInto(out *FullClientLogsObservation) {
	*out = *in
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.Throttle != nil {
		in, out := &in.Throttle, &out.Throttle
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FullClientLogsObservation.
func (in *FullClientLogsObservation) DeepCopy() *FullClientLogsObservation {
	if in == nil {
		return nil
	}
	out := new(FullClientLogsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FullClientLogsParameters) DeepCopyInto(out *FullClientLogsParameters) {
	*out = *in
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.Throttle != nil {
		in, out := &in.Throttle, &out.Throttle
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FullClientLogsParameters.
func (in *FullClientLogsParameters) DeepCopy() *FullClientLogsParameters {
	if in == nil {
		return nil
	}
	out := new(FullClientLogsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPConfigInitParameters) DeepCopyInto(out *GCPConfigInitParameters) {
	*out = *in
	if in.BackendDataVPCNetworkName != nil {
		in, out := &in.BackendDataVPCNetworkName, &out.BackendDataVPCNetworkName
		*out = new(string)
		**out = **in
	}
	if in.BackendDataVPCProjectID != nil {
		in, out := &in.BackendDataVPCProjectID, &out.BackendDataVPCProjectID
		*out = new(string)
		**out = **in
	}
	if in.BackendDataVPCSubnetName != nil {
		in, out := &in.BackendDataVPCSubnetName, &out.BackendDataVPCSubnetName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPConfigInitParameters.
func (in *GCPConfigInitParameters) DeepCopy() *GCPConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(GCPConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPConfigObservation) DeepCopyInto(out *GCPConfigObservation) {
	*out = *in
	if in.BackendDataVPCNetworkName != nil {
		in, out := &in.BackendDataVPCNetworkName, &out.BackendDataVPCNetworkName
		*out = new(string)
		**out = **in
	}
	if in.BackendDataVPCProjectID != nil {
		in, out := &in.BackendDataVPCProjectID, &out.BackendDataVPCProjectID
		*out = new(string)
		**out = **in
	}
	if in.BackendDataVPCSubnetName != nil {
		in, out := &in.BackendDataVPCSubnetName, &out.BackendDataVPCSubnetName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPConfigObservation.
func (in *GCPConfigObservation) DeepCopy() *GCPConfigObservation {
	if in == nil {
		return nil
	}
	out := new(GCPConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPConfigParameters) DeepCopyInto(out *GCPConfigParameters) {
	*out = *in
	if in.BackendDataVPCNetworkName != nil {
		in, out := &in.BackendDataVPCNetworkName, &out.BackendDataVPCNetworkName
		*out = new(string)
		**out = **in
	}
	if in.BackendDataVPCProjectID != nil {
		in, out := &in.BackendDataVPCProjectID, &out.BackendDataVPCProjectID
		*out = new(string)
		**out = **in
	}
	if in.BackendDataVPCSubnetName != nil {
		in, out := &in.BackendDataVPCSubnetName, &out.BackendDataVPCSubnetName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPConfigParameters.
func (in *GCPConfigParameters) DeepCopy() *GCPConfigParameters {
	if in == nil {
		return nil
	}
	out := new(GCPConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GSLB) DeepCopyInto(out *GSLB) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GSLB.
func (in *GSLB) DeepCopy() *GSLB {
	if in == nil {
		return nil
	}
	out := new(GSLB)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GSLB) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GSLBInitParameters) DeepCopyInto(out *GSLBInitParameters) {
	*out = *in
	if in.AsyncInterval != nil {
		in, out := &in.AsyncInterval, &out.AsyncInterval
		*out = new(string)
		**out = **in
	}
	if in.ClearOnMaxRetries != nil {
		in, out := &in.ClearOnMaxRetries, &out.ClearOnMaxRetries
		*out = new(string)
		**out = **in
	}
	if in.ClientIPAddrGroup != nil {
		in, out := &in.ClientIPAddrGroup, &out.ClientIPAddrGroup
		*out = make([]ClientIPAddrGroupInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigpbAttributes != nil {
		in, out := &in.ConfigpbAttributes, &out.ConfigpbAttributes
		*out = make([]ConfigpbAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DNSConfigs != nil {
		in, out := &in.DNSConfigs, &out.DNSConfigs
		*out = make([]DNSConfigsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnableConfigByMembers != nil {
		in, out := &in.EnableConfigByMembers, &out.EnableConfigByMembers
		*out = new(string)
		**out = **in
	}
	if in.ErrorResyncInterval != nil {
		in, out := &in.ErrorResyncInterval, &out.ErrorResyncInterval
		*out = new(string)
		**out = **in
	}
	if in.FileobjectMaxFileVersions != nil {
		in, out := &in.FileobjectMaxFileVersions, &out.FileobjectMaxFileVersions
		*out = new(string)
		**out = **in
	}
	if in.IsFederated != nil {
		in, out := &in.IsFederated, &out.IsFederated
		*out = new(string)
		**out = **in
	}
	if in.LeaderClusterUUID != nil {
		in, out := &in.LeaderClusterUUID, &out.LeaderClusterUUID
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceMode != nil {
		in, out := &in.MaintenanceMode, &out.MaintenanceMode
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReplicationPolicy != nil {
		in, out := &in.ReplicationPolicy, &out.ReplicationPolicy
		*out = make([]ReplicationPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SendInterval != nil {
		in, out := &in.SendInterval, &out.SendInterval
		*out = new(string)
		**out = **in
	}
	if in.SendIntervalPriorToMaintenanceMode != nil {
		in, out := &in.SendIntervalPriorToMaintenanceMode, &out.SendIntervalPriorToMaintenanceMode
		*out = new(string)
		**out = **in
	}
	if in.Sites != nil {
		in, out := &in.Sites, &out.Sites
		*out = make([]SitesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TenantRef != nil {
		in, out := &in.TenantRef, &out.TenantRef
		*out = new(string)
		**out = **in
	}
	if in.TenantScoped != nil {
		in, out := &in.TenantScoped, &out.TenantScoped
		*out = new(string)
		**out = **in
	}
	if in.ThirdPartySites != nil {
		in, out := &in.ThirdPartySites, &out.ThirdPartySites
		*out = make([]ThirdPartySitesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.ViewID != nil {
		in, out := &in.ViewID, &out.ViewID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GSLBInitParameters.
func (in *GSLBInitParameters) DeepCopy() *GSLBInitParameters {
	if in == nil {
		return nil
	}
	out := new(GSLBInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GSLBList) DeepCopyInto(out *GSLBList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GSLB, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GSLBList.
func (in *GSLBList) DeepCopy() *GSLBList {
	if in == nil {
		return nil
	}
	out := new(GSLBList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GSLBList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GSLBObservation) DeepCopyInto(out *GSLBObservation) {
	*out = *in
	if in.AsyncInterval != nil {
		in, out := &in.AsyncInterval, &out.AsyncInterval
		*out = new(string)
		**out = **in
	}
	if in.ClearOnMaxRetries != nil {
		in, out := &in.ClearOnMaxRetries, &out.ClearOnMaxRetries
		*out = new(string)
		**out = **in
	}
	if in.ClientIPAddrGroup != nil {
		in, out := &in.ClientIPAddrGroup, &out.ClientIPAddrGroup
		*out = make([]ClientIPAddrGroupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigpbAttributes != nil {
		in, out := &in.ConfigpbAttributes, &out.ConfigpbAttributes
		*out = make([]ConfigpbAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DNSConfigs != nil {
		in, out := &in.DNSConfigs, &out.DNSConfigs
		*out = make([]DNSConfigsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnableConfigByMembers != nil {
		in, out := &in.EnableConfigByMembers, &out.EnableConfigByMembers
		*out = new(string)
		**out = **in
	}
	if in.ErrorResyncInterval != nil {
		in, out := &in.ErrorResyncInterval, &out.ErrorResyncInterval
		*out = new(string)
		**out = **in
	}
	if in.FileobjectMaxFileVersions != nil {
		in, out := &in.FileobjectMaxFileVersions, &out.FileobjectMaxFileVersions
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsFederated != nil {
		in, out := &in.IsFederated, &out.IsFederated
		*out = new(string)
		**out = **in
	}
	if in.LeaderClusterUUID != nil {
		in, out := &in.LeaderClusterUUID, &out.LeaderClusterUUID
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceMode != nil {
		in, out := &in.MaintenanceMode, &out.MaintenanceMode
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReplicationPolicy != nil {
		in, out := &in.ReplicationPolicy, &out.ReplicationPolicy
		*out = make([]ReplicationPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SendInterval != nil {
		in, out := &in.SendInterval, &out.SendInterval
		*out = new(string)
		**out = **in
	}
	if in.SendIntervalPriorToMaintenanceMode != nil {
		in, out := &in.SendIntervalPriorToMaintenanceMode, &out.SendIntervalPriorToMaintenanceMode
		*out = new(string)
		**out = **in
	}
	if in.Sites != nil {
		in, out := &in.Sites, &out.Sites
		*out = make([]SitesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TenantRef != nil {
		in, out := &in.TenantRef, &out.TenantRef
		*out = new(string)
		**out = **in
	}
	if in.TenantScoped != nil {
		in, out := &in.TenantScoped, &out.TenantScoped
		*out = new(string)
		**out = **in
	}
	if in.ThirdPartySites != nil {
		in, out := &in.ThirdPartySites, &out.ThirdPartySites
		*out = make([]ThirdPartySitesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.ViewID != nil {
		in, out := &in.ViewID, &out.ViewID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GSLBObservation.
func (in *GSLBObservation) DeepCopy() *GSLBObservation {
	if in == nil {
		return nil
	}
	out := new(GSLBObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GSLBParameters) DeepCopyInto(out *GSLBParameters) {
	*out = *in
	if in.AsyncInterval != nil {
		in, out := &in.AsyncInterval, &out.AsyncInterval
		*out = new(string)
		**out = **in
	}
	if in.ClearOnMaxRetries != nil {
		in, out := &in.ClearOnMaxRetries, &out.ClearOnMaxRetries
		*out = new(string)
		**out = **in
	}
	if in.ClientIPAddrGroup != nil {
		in, out := &in.ClientIPAddrGroup, &out.ClientIPAddrGroup
		*out = make([]ClientIPAddrGroupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigpbAttributes != nil {
		in, out := &in.ConfigpbAttributes, &out.ConfigpbAttributes
		*out = make([]ConfigpbAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DNSConfigs != nil {
		in, out := &in.DNSConfigs, &out.DNSConfigs
		*out = make([]DNSConfigsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnableConfigByMembers != nil {
		in, out := &in.EnableConfigByMembers, &out.EnableConfigByMembers
		*out = new(string)
		**out = **in
	}
	if in.ErrorResyncInterval != nil {
		in, out := &in.ErrorResyncInterval, &out.ErrorResyncInterval
		*out = new(string)
		**out = **in
	}
	if in.FileobjectMaxFileVersions != nil {
		in, out := &in.FileobjectMaxFileVersions, &out.FileobjectMaxFileVersions
		*out = new(string)
		**out = **in
	}
	if in.IsFederated != nil {
		in, out := &in.IsFederated, &out.IsFederated
		*out = new(string)
		**out = **in
	}
	if in.LeaderClusterUUID != nil {
		in, out := &in.LeaderClusterUUID, &out.LeaderClusterUUID
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceMode != nil {
		in, out := &in.MaintenanceMode, &out.MaintenanceMode
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReplicationPolicy != nil {
		in, out := &in.ReplicationPolicy, &out.ReplicationPolicy
		*out = make([]ReplicationPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SendInterval != nil {
		in, out := &in.SendInterval, &out.SendInterval
		*out = new(string)
		**out = **in
	}
	if in.SendIntervalPriorToMaintenanceMode != nil {
		in, out := &in.SendIntervalPriorToMaintenanceMode, &out.SendIntervalPriorToMaintenanceMode
		*out = new(string)
		**out = **in
	}
	if in.Sites != nil {
		in, out := &in.Sites, &out.Sites
		*out = make([]SitesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TenantRef != nil {
		in, out := &in.TenantRef, &out.TenantRef
		*out = new(string)
		**out = **in
	}
	if in.TenantScoped != nil {
		in, out := &in.TenantScoped, &out.TenantScoped
		*out = new(string)
		**out = **in
	}
	if in.ThirdPartySites != nil {
		in, out := &in.ThirdPartySites, &out.ThirdPartySites
		*out = make([]ThirdPartySitesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.ViewID != nil {
		in, out := &in.ViewID, &out.ViewID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GSLBParameters.
func (in *GSLBParameters) DeepCopy() *GSLBParameters {
	if in == nil {
		return nil
	}
	out := new(GSLBParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GSLBSpec) DeepCopyInto(out *GSLBSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GSLBSpec.
func (in *GSLBSpec) DeepCopy() *GSLBSpec {
	if in == nil {
		return nil
	}
	out := new(GSLBSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GSLBStatus) DeepCopyInto(out *GSLBStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GSLBStatus.
func (in *GSLBStatus) DeepCopy() *GSLBStatus {
	if in == nil {
		return nil
	}
	out := new(GSLBStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GeoMatchesInitParameters) DeepCopyInto(out *GeoMatchesInitParameters) {
	*out = *in
	if in.Attribute != nil {
		in, out := &in.Attribute, &out.Attribute
		*out = new(string)
		**out = **in
	}
	if in.MatchOperation != nil {
		in, out := &in.MatchOperation, &out.MatchOperation
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GeoMatchesInitParameters.
func (in *GeoMatchesInitParameters) DeepCopy() *GeoMatchesInitParameters {
	if in == nil {
		return nil
	}
	out := new(GeoMatchesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GeoMatchesObservation) DeepCopyInto(out *GeoMatchesObservation) {
	*out = *in
	if in.Attribute != nil {
		in, out := &in.Attribute, &out.Attribute
		*out = new(string)
		**out = **in
	}
	if in.MatchOperation != nil {
		in, out := &in.MatchOperation, &out.MatchOperation
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GeoMatchesObservation.
func (in *GeoMatchesObservation) DeepCopy() *GeoMatchesObservation {
	if in == nil {
		return nil
	}
	out := new(GeoMatchesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GeoMatchesParameters) DeepCopyInto(out *GeoMatchesParameters) {
	*out = *in
	if in.Attribute != nil {
		in, out := &in.Attribute, &out.Attribute
		*out = new(string)
		**out = **in
	}
	if in.MatchOperation != nil {
		in, out := &in.MatchOperation, &out.MatchOperation
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GeoMatchesParameters.
func (in *GeoMatchesParameters) DeepCopy() *GeoMatchesParameters {
	if in == nil {
		return nil
	}
	out := new(GeoMatchesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPPoliciesInitParameters) DeepCopyInto(out *HTTPPoliciesInitParameters) {
	*out = *in
	if in.HTTPPolicySetRef != nil {
		in, out := &in.HTTPPolicySetRef, &out.HTTPPolicySetRef
		*out = new(string)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPPoliciesInitParameters.
func (in *HTTPPoliciesInitParameters) DeepCopy() *HTTPPoliciesInitParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPPoliciesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPPoliciesObservation) DeepCopyInto(out *HTTPPoliciesObservation) {
	*out = *in
	if in.HTTPPolicySetRef != nil {
		in, out := &in.HTTPPolicySetRef, &out.HTTPPolicySetRef
		*out = new(string)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPPoliciesObservation.
func (in *HTTPPoliciesObservation) DeepCopy() *HTTPPoliciesObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPPoliciesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPPoliciesParameters) DeepCopyInto(out *HTTPPoliciesParameters) {
	*out = *in
	if in.HTTPPolicySetRef != nil {
		in, out := &in.HTTPPolicySetRef, &out.HTTPPolicySetRef
		*out = new(string)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPPoliciesParameters.
func (in *HTTPPoliciesParameters) DeepCopy() *HTTPPoliciesParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPPoliciesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HdrsInitParameters) DeepCopyInto(out *HdrsInitParameters) {
	*out = *in
	if in.Hdr != nil {
		in, out := &in.Hdr, &out.Hdr
		*out = new(string)
		**out = **in
	}
	if in.MatchCase != nil {
		in, out := &in.MatchCase, &out.MatchCase
		*out = new(string)
		**out = **in
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HdrsInitParameters.
func (in *HdrsInitParameters) DeepCopy() *HdrsInitParameters {
	if in == nil {
		return nil
	}
	out := new(HdrsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HdrsObservation) DeepCopyInto(out *HdrsObservation) {
	*out = *in
	if in.Hdr != nil {
		in, out := &in.Hdr, &out.Hdr
		*out = new(string)
		**out = **in
	}
	if in.MatchCase != nil {
		in, out := &in.MatchCase, &out.MatchCase
		*out = new(string)
		**out = **in
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HdrsObservation.
func (in *HdrsObservation) DeepCopy() *HdrsObservation {
	if in == nil {
		return nil
	}
	out := new(HdrsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HdrsParameters) DeepCopyInto(out *HdrsParameters) {
	*out = *in
	if in.Hdr != nil {
		in, out := &in.Hdr, &out.Hdr
		*out = new(string)
		**out = **in
	}
	if in.MatchCase != nil {
		in, out := &in.MatchCase, &out.MatchCase
		*out = new(string)
		**out = **in
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HdrsParameters.
func (in *HdrsParameters) DeepCopy() *HdrsParameters {
	if in == nil {
		return nil
	}
	out := new(HdrsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HmProxiesInitParameters) DeepCopyInto(out *HmProxiesInitParameters) {
	*out = *in
	if in.ProxyType != nil {
		in, out := &in.ProxyType, &out.ProxyType
		*out = new(string)
		**out = **in
	}
	if in.SiteUUID != nil {
		in, out := &in.SiteUUID, &out.SiteUUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HmProxiesInitParameters.
func (in *HmProxiesInitParameters) DeepCopy() *HmProxiesInitParameters {
	if in == nil {
		return nil
	}
	out := new(HmProxiesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HmProxiesObservation) DeepCopyInto(out *HmProxiesObservation) {
	*out = *in
	if in.ProxyType != nil {
		in, out := &in.ProxyType, &out.ProxyType
		*out = new(string)
		**out = **in
	}
	if in.SiteUUID != nil {
		in, out := &in.SiteUUID, &out.SiteUUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HmProxiesObservation.
func (in *HmProxiesObservation) DeepCopy() *HmProxiesObservation {
	if in == nil {
		return nil
	}
	out := new(HmProxiesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HmProxiesParameters) DeepCopyInto(out *HmProxiesParameters) {
	*out = *in
	if in.ProxyType != nil {
		in, out := &in.ProxyType, &out.ProxyType
		*out = new(string)
		**out = **in
	}
	if in.SiteUUID != nil {
		in, out := &in.SiteUUID, &out.SiteUUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HmProxiesParameters.
func (in *HmProxiesParameters) DeepCopy() *HmProxiesParameters {
	if in == nil {
		return nil
	}
	out := new(HmProxiesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HorizonProfileInitParameters) DeepCopyInto(out *HorizonProfileInitParameters) {
	*out = *in
	if in.BlastPort != nil {
		in, out := &in.BlastPort, &out.BlastPort
		*out = new(string)
		**out = **in
	}
	if in.PcoipPort != nil {
		in, out := &in.PcoipPort, &out.PcoipPort
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HorizonProfileInitParameters.
func (in *HorizonProfileInitParameters) DeepCopy() *HorizonProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(HorizonProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HorizonProfileObservation) DeepCopyInto(out *HorizonProfileObservation) {
	*out = *in
	if in.BlastPort != nil {
		in, out := &in.BlastPort, &out.BlastPort
		*out = new(string)
		**out = **in
	}
	if in.PcoipPort != nil {
		in, out := &in.PcoipPort, &out.PcoipPort
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HorizonProfileObservation.
func (in *HorizonProfileObservation) DeepCopy() *HorizonProfileObservation {
	if in == nil {
		return nil
	}
	out := new(HorizonProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HorizonProfileParameters) DeepCopyInto(out *HorizonProfileParameters) {
	*out = *in
	if in.BlastPort != nil {
		in, out := &in.BlastPort, &out.BlastPort
		*out = new(string)
		**out = **in
	}
	if in.PcoipPort != nil {
		in, out := &in.PcoipPort, &out.PcoipPort
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HorizonProfileParameters.
func (in *HorizonProfileParameters) DeepCopy() *HorizonProfileParameters {
	if in == nil {
		return nil
	}
	out := new(HorizonProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostHdrInitParameters) DeepCopyInto(out *HostHdrInitParameters) {
	*out = *in
	if in.MatchCase != nil {
		in, out := &in.MatchCase, &out.MatchCase
		*out = new(string)
		**out = **in
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostHdrInitParameters.
func (in *HostHdrInitParameters) DeepCopy() *HostHdrInitParameters {
	if in == nil {
		return nil
	}
	out := new(HostHdrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostHdrObservation) DeepCopyInto(out *HostHdrObservation) {
	*out = *in
	if in.MatchCase != nil {
		in, out := &in.MatchCase, &out.MatchCase
		*out = new(string)
		**out = **in
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostHdrObservation.
func (in *HostHdrObservation) DeepCopy() *HostHdrObservation {
	if in == nil {
		return nil
	}
	out := new(HostHdrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostHdrParameters) DeepCopyInto(out *HostHdrParameters) {
	*out = *in
	if in.MatchCase != nil {
		in, out := &in.MatchCase, &out.MatchCase
		*out = new(string)
		**out = **in
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostHdrParameters.
func (in *HostHdrParameters) DeepCopy() *HostHdrParameters {
	if in == nil {
		return nil
	}
	out := new(HostHdrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostInitParameters) DeepCopyInto(out *HostInitParameters) {
	*out = *in
	if in.Tokens != nil {
		in, out := &in.Tokens, &out.Tokens
		*out = make([]TokensInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostInitParameters.
func (in *HostInitParameters) DeepCopy() *HostInitParameters {
	if in == nil {
		return nil
	}
	out := new(HostInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostObservation) DeepCopyInto(out *HostObservation) {
	*out = *in
	if in.Tokens != nil {
		in, out := &in.Tokens, &out.Tokens
		*out = make([]TokensObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostObservation.
func (in *HostObservation) DeepCopy() *HostObservation {
	if in == nil {
		return nil
	}
	out := new(HostObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostParameters) DeepCopyInto(out *HostParameters) {
	*out = *in
	if in.Tokens != nil {
		in, out := &in.Tokens, &out.Tokens
		*out = make([]TokensParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostParameters.
func (in *HostParameters) DeepCopy() *HostParameters {
	if in == nil {
		return nil
	}
	out := new(HostParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostTokensInitParameters) DeepCopyInto(out *HostTokensInitParameters) {
	*out = *in
	if in.EndIndex != nil {
		in, out := &in.EndIndex, &out.EndIndex
		*out = new(string)
		**out = **in
	}
	if in.StartIndex != nil {
		in, out := &in.StartIndex, &out.StartIndex
		*out = new(string)
		**out = **in
	}
	if in.StrValue != nil {
		in, out := &in.StrValue, &out.StrValue
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostTokensInitParameters.
func (in *HostTokensInitParameters) DeepCopy() *HostTokensInitParameters {
	if in == nil {
		return nil
	}
	out := new(HostTokensInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostTokensObservation) DeepCopyInto(out *HostTokensObservation) {
	*out = *in
	if in.EndIndex != nil {
		in, out := &in.EndIndex, &out.EndIndex
		*out = new(string)
		**out = **in
	}
	if in.StartIndex != nil {
		in, out := &in.StartIndex, &out.StartIndex
		*out = new(string)
		**out = **in
	}
	if in.StrValue != nil {
		in, out := &in.StrValue, &out.StrValue
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostTokensObservation.
func (in *HostTokensObservation) DeepCopy() *HostTokensObservation {
	if in == nil {
		return nil
	}
	out := new(HostTokensObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostTokensParameters) DeepCopyInto(out *HostTokensParameters) {
	*out = *in
	if in.EndIndex != nil {
		in, out := &in.EndIndex, &out.EndIndex
		*out = new(string)
		**out = **in
	}
	if in.StartIndex != nil {
		in, out := &in.StartIndex, &out.StartIndex
		*out = new(string)
		**out = **in
	}
	if in.StrValue != nil {
		in, out := &in.StrValue, &out.StrValue
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostTokensParameters.
func (in *HostTokensParameters) DeepCopy() *HostTokensParameters {
	if in == nil {
		return nil
	}
	out := new(HostTokensParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Http2PropertiesInitParameters) DeepCopyInto(out *Http2PropertiesInitParameters) {
	*out = *in
	if in.MaxHttp2ControlFramesPerConnection != nil {
		in, out := &in.MaxHttp2ControlFramesPerConnection, &out.MaxHttp2ControlFramesPerConnection
		*out = new(string)
		**out = **in
	}
	if in.MaxHttp2HeaderFieldSize != nil {
		in, out := &in.MaxHttp2HeaderFieldSize, &out.MaxHttp2HeaderFieldSize
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Http2PropertiesInitParameters.
func (in *Http2PropertiesInitParameters) DeepCopy() *Http2PropertiesInitParameters {
	if in == nil {
		return nil
	}
	out := new(Http2PropertiesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Http2PropertiesObservation) DeepCopyInto(out *Http2PropertiesObservation) {
	*out = *in
	if in.MaxHttp2ControlFramesPerConnection != nil {
		in, out := &in.MaxHttp2ControlFramesPerConnection, &out.MaxHttp2ControlFramesPerConnection
		*out = new(string)
		**out = **in
	}
	if in.MaxHttp2HeaderFieldSize != nil {
		in, out := &in.MaxHttp2HeaderFieldSize, &out.MaxHttp2HeaderFieldSize
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Http2PropertiesObservation.
func (in *Http2PropertiesObservation) DeepCopy() *Http2PropertiesObservation {
	if in == nil {
		return nil
	}
	out := new(Http2PropertiesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Http2PropertiesParameters) DeepCopyInto(out *Http2PropertiesParameters) {
	*out = *in
	if in.MaxHttp2ControlFramesPerConnection != nil {
		in, out := &in.MaxHttp2ControlFramesPerConnection, &out.MaxHttp2ControlFramesPerConnection
		*out = new(string)
		**out = **in
	}
	if in.MaxHttp2HeaderFieldSize != nil {
		in, out := &in.MaxHttp2HeaderFieldSize, &out.MaxHttp2HeaderFieldSize
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Http2PropertiesParameters.
func (in *Http2PropertiesParameters) DeepCopy() *Http2PropertiesParameters {
	if in == nil {
		return nil
	}
	out := new(Http2PropertiesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAddrInitParameters) DeepCopyInto(out *IPAddrInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAddrInitParameters.
func (in *IPAddrInitParameters) DeepCopy() *IPAddrInitParameters {
	if in == nil {
		return nil
	}
	out := new(IPAddrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAddrObservation) DeepCopyInto(out *IPAddrObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAddrObservation.
func (in *IPAddrObservation) DeepCopy() *IPAddrObservation {
	if in == nil {
		return nil
	}
	out := new(IPAddrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAddrParameters) DeepCopyInto(out *IPAddrParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAddrParameters.
func (in *IPAddrParameters) DeepCopy() *IPAddrParameters {
	if in == nil {
		return nil
	}
	out := new(IPAddrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAddressIPAddressInitParameters) DeepCopyInto(out *IPAddressIPAddressInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAddressIPAddressInitParameters.
func (in *IPAddressIPAddressInitParameters) DeepCopy() *IPAddressIPAddressInitParameters {
	if in == nil {
		return nil
	}
	out := new(IPAddressIPAddressInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAddressIPAddressObservation) DeepCopyInto(out *IPAddressIPAddressObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAddressIPAddressObservation.
func (in *IPAddressIPAddressObservation) DeepCopy() *IPAddressIPAddressObservation {
	if in == nil {
		return nil
	}
	out := new(IPAddressIPAddressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAddressIPAddressParameters) DeepCopyInto(out *IPAddressIPAddressParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAddressIPAddressParameters.
func (in *IPAddressIPAddressParameters) DeepCopy() *IPAddressIPAddressParameters {
	if in == nil {
		return nil
	}
	out := new(IPAddressIPAddressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAddressInitParameters) DeepCopyInto(out *IPAddressInitParameters) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = make([]IPAddressIPAddressInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAddressInitParameters.
func (in *IPAddressInitParameters) DeepCopy() *IPAddressInitParameters {
	if in == nil {
		return nil
	}
	out := new(IPAddressInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAddressObservation) DeepCopyInto(out *IPAddressObservation) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = make([]IPAddressIPAddressObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAddressObservation.
func (in *IPAddressObservation) DeepCopy() *IPAddressObservation {
	if in == nil {
		return nil
	}
	out := new(IPAddressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAddressParameters) DeepCopyInto(out *IPAddressParameters) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = make([]IPAddressIPAddressParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAddressParameters.
func (in *IPAddressParameters) DeepCopy() *IPAddressParameters {
	if in == nil {
		return nil
	}
	out := new(IPAddressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAddressesInitParameters) DeepCopyInto(out *IPAddressesInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAddressesInitParameters.
func (in *IPAddressesInitParameters) DeepCopy() *IPAddressesInitParameters {
	if in == nil {
		return nil
	}
	out := new(IPAddressesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAddressesObservation) DeepCopyInto(out *IPAddressesObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAddressesObservation.
func (in *IPAddressesObservation) DeepCopy() *IPAddressesObservation {
	if in == nil {
		return nil
	}
	out := new(IPAddressesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAddressesParameters) DeepCopyInto(out *IPAddressesParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAddressesParameters.
func (in *IPAddressesParameters) DeepCopy() *IPAddressesParameters {
	if in == nil {
		return nil
	}
	out := new(IPAddressesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPIPAddrInitParameters) DeepCopyInto(out *IPIPAddrInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPIPAddrInitParameters.
func (in *IPIPAddrInitParameters) DeepCopy() *IPIPAddrInitParameters {
	if in == nil {
		return nil
	}
	out := new(IPIPAddrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPIPAddrObservation) DeepCopyInto(out *IPIPAddrObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPIPAddrObservation.
func (in *IPIPAddrObservation) DeepCopy() *IPIPAddrObservation {
	if in == nil {
		return nil
	}
	out := new(IPIPAddrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPIPAddrParameters) DeepCopyInto(out *IPIPAddrParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPIPAddrParameters.
func (in *IPIPAddrParameters) DeepCopy() *IPIPAddrParameters {
	if in == nil {
		return nil
	}
	out := new(IPIPAddrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPInitParameters) DeepCopyInto(out *IPInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPInitParameters.
func (in *IPInitParameters) DeepCopy() *IPInitParameters {
	if in == nil {
		return nil
	}
	out := new(IPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPObservation) DeepCopyInto(out *IPObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPObservation.
func (in *IPObservation) DeepCopy() *IPObservation {
	if in == nil {
		return nil
	}
	out := new(IPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPParameters) DeepCopyInto(out *IPParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPParameters.
func (in *IPParameters) DeepCopy() *IPParameters {
	if in == nil {
		return nil
	}
	out := new(IPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPReputationTypeInitParameters) DeepCopyInto(out *IPReputationTypeInitParameters) {
	*out = *in
	if in.MatchOperation != nil {
		in, out := &in.MatchOperation, &out.MatchOperation
		*out = new(string)
		**out = **in
	}
	if in.ReputationTypes != nil {
		in, out := &in.ReputationTypes, &out.ReputationTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPReputationTypeInitParameters.
func (in *IPReputationTypeInitParameters) DeepCopy() *IPReputationTypeInitParameters {
	if in == nil {
		return nil
	}
	out := new(IPReputationTypeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPReputationTypeObservation) DeepCopyInto(out *IPReputationTypeObservation) {
	*out = *in
	if in.MatchOperation != nil {
		in, out := &in.MatchOperation, &out.MatchOperation
		*out = new(string)
		**out = **in
	}
	if in.ReputationTypes != nil {
		in, out := &in.ReputationTypes, &out.ReputationTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPReputationTypeObservation.
func (in *IPReputationTypeObservation) DeepCopy() *IPReputationTypeObservation {
	if in == nil {
		return nil
	}
	out := new(IPReputationTypeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPReputationTypeParameters) DeepCopyInto(out *IPReputationTypeParameters) {
	*out = *in
	if in.MatchOperation != nil {
		in, out := &in.MatchOperation, &out.MatchOperation
		*out = new(string)
		**out = **in
	}
	if in.ReputationTypes != nil {
		in, out := &in.ReputationTypes, &out.ReputationTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPReputationTypeParameters.
func (in *IPReputationTypeParameters) DeepCopy() *IPReputationTypeParameters {
	if in == nil {
		return nil
	}
	out := new(IPReputationTypeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFlavorInfoInitParameters) DeepCopyInto(out *InstanceFlavorInfoInitParameters) {
	*out = *in
	if in.Cost != nil {
		in, out := &in.Cost, &out.Cost
		*out = new(string)
		**out = **in
	}
	if in.DiskGb != nil {
		in, out := &in.DiskGb, &out.DiskGb
		*out = new(string)
		**out = **in
	}
	if in.EnhancedNw != nil {
		in, out := &in.EnhancedNw, &out.EnhancedNw
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsRecommended != nil {
		in, out := &in.IsRecommended, &out.IsRecommended
		*out = new(string)
		**out = **in
	}
	if in.MaxIp6SPerNic != nil {
		in, out := &in.MaxIp6SPerNic, &out.MaxIp6SPerNic
		*out = new(string)
		**out = **in
	}
	if in.MaxIpsPerNic != nil {
		in, out := &in.MaxIpsPerNic, &out.MaxIpsPerNic
		*out = new(string)
		**out = **in
	}
	if in.MaxNics != nil {
		in, out := &in.MaxNics, &out.MaxNics
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]MetaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Public != nil {
		in, out := &in.Public, &out.Public
		*out = new(string)
		**out = **in
	}
	if in.RAMMb != nil {
		in, out := &in.RAMMb, &out.RAMMb
		*out = new(string)
		**out = **in
	}
	if in.Vcpus != nil {
		in, out := &in.Vcpus, &out.Vcpus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFlavorInfoInitParameters.
func (in *InstanceFlavorInfoInitParameters) DeepCopy() *InstanceFlavorInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFlavorInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFlavorInfoObservation) DeepCopyInto(out *InstanceFlavorInfoObservation) {
	*out = *in
	if in.Cost != nil {
		in, out := &in.Cost, &out.Cost
		*out = new(string)
		**out = **in
	}
	if in.DiskGb != nil {
		in, out := &in.DiskGb, &out.DiskGb
		*out = new(string)
		**out = **in
	}
	if in.EnhancedNw != nil {
		in, out := &in.EnhancedNw, &out.EnhancedNw
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsRecommended != nil {
		in, out := &in.IsRecommended, &out.IsRecommended
		*out = new(string)
		**out = **in
	}
	if in.MaxIp6SPerNic != nil {
		in, out := &in.MaxIp6SPerNic, &out.MaxIp6SPerNic
		*out = new(string)
		**out = **in
	}
	if in.MaxIpsPerNic != nil {
		in, out := &in.MaxIpsPerNic, &out.MaxIpsPerNic
		*out = new(string)
		**out = **in
	}
	if in.MaxNics != nil {
		in, out := &in.MaxNics, &out.MaxNics
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]MetaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Public != nil {
		in, out := &in.Public, &out.Public
		*out = new(string)
		**out = **in
	}
	if in.RAMMb != nil {
		in, out := &in.RAMMb, &out.RAMMb
		*out = new(string)
		**out = **in
	}
	if in.Vcpus != nil {
		in, out := &in.Vcpus, &out.Vcpus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFlavorInfoObservation.
func (in *InstanceFlavorInfoObservation) DeepCopy() *InstanceFlavorInfoObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceFlavorInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceFlavorInfoParameters) DeepCopyInto(out *InstanceFlavorInfoParameters) {
	*out = *in
	if in.Cost != nil {
		in, out := &in.Cost, &out.Cost
		*out = new(string)
		**out = **in
	}
	if in.DiskGb != nil {
		in, out := &in.DiskGb, &out.DiskGb
		*out = new(string)
		**out = **in
	}
	if in.EnhancedNw != nil {
		in, out := &in.EnhancedNw, &out.EnhancedNw
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsRecommended != nil {
		in, out := &in.IsRecommended, &out.IsRecommended
		*out = new(string)
		**out = **in
	}
	if in.MaxIp6SPerNic != nil {
		in, out := &in.MaxIp6SPerNic, &out.MaxIp6SPerNic
		*out = new(string)
		**out = **in
	}
	if in.MaxIpsPerNic != nil {
		in, out := &in.MaxIpsPerNic, &out.MaxIpsPerNic
		*out = new(string)
		**out = **in
	}
	if in.MaxNics != nil {
		in, out := &in.MaxNics, &out.MaxNics
		*out = new(string)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make([]MetaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Public != nil {
		in, out := &in.Public, &out.Public
		*out = new(string)
		**out = **in
	}
	if in.RAMMb != nil {
		in, out := &in.RAMMb, &out.RAMMb
		*out = new(string)
		**out = **in
	}
	if in.Vcpus != nil {
		in, out := &in.Vcpus, &out.Vcpus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceFlavorInfoParameters.
func (in *InstanceFlavorInfoParameters) DeepCopy() *InstanceFlavorInfoParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceFlavorInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ip6AddressInitParameters) DeepCopyInto(out *Ip6AddressInitParameters) {
	*out = *in
	if in.Ip6Address != nil {
		in, out := &in.Ip6Address, &out.Ip6Address
		*out = make([]Ip6AddressIp6AddressInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ip6AddressInitParameters.
func (in *Ip6AddressInitParameters) DeepCopy() *Ip6AddressInitParameters {
	if in == nil {
		return nil
	}
	out := new(Ip6AddressInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ip6AddressIp6AddressInitParameters) DeepCopyInto(out *Ip6AddressIp6AddressInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ip6AddressIp6AddressInitParameters.
func (in *Ip6AddressIp6AddressInitParameters) DeepCopy() *Ip6AddressIp6AddressInitParameters {
	if in == nil {
		return nil
	}
	out := new(Ip6AddressIp6AddressInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ip6AddressIp6AddressObservation) DeepCopyInto(out *Ip6AddressIp6AddressObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ip6AddressIp6AddressObservation.
func (in *Ip6AddressIp6AddressObservation) DeepCopy() *Ip6AddressIp6AddressObservation {
	if in == nil {
		return nil
	}
	out := new(Ip6AddressIp6AddressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ip6AddressIp6AddressParameters) DeepCopyInto(out *Ip6AddressIp6AddressParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ip6AddressIp6AddressParameters.
func (in *Ip6AddressIp6AddressParameters) DeepCopy() *Ip6AddressIp6AddressParameters {
	if in == nil {
		return nil
	}
	out := new(Ip6AddressIp6AddressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ip6AddressObservation) DeepCopyInto(out *Ip6AddressObservation) {
	*out = *in
	if in.Ip6Address != nil {
		in, out := &in.Ip6Address, &out.Ip6Address
		*out = make([]Ip6AddressIp6AddressObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ip6AddressObservation.
func (in *Ip6AddressObservation) DeepCopy() *Ip6AddressObservation {
	if in == nil {
		return nil
	}
	out := new(Ip6AddressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ip6AddressParameters) DeepCopyInto(out *Ip6AddressParameters) {
	*out = *in
	if in.Ip6Address != nil {
		in, out := &in.Ip6Address, &out.Ip6Address
		*out = make([]Ip6AddressIp6AddressParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ip6AddressParameters.
func (in *Ip6AddressParameters) DeepCopy() *Ip6AddressParameters {
	if in == nil {
		return nil
	}
	out := new(Ip6AddressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpamNetworkSubnetInitParameters) DeepCopyInto(out *IpamNetworkSubnetInitParameters) {
	*out = *in
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]IpamNetworkSubnetSubnetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnet6 != nil {
		in, out := &in.Subnet6, &out.Subnet6
		*out = make([]IpamNetworkSubnetSubnet6InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnet6UUID != nil {
		in, out := &in.Subnet6UUID, &out.Subnet6UUID
		*out = new(string)
		**out = **in
	}
	if in.SubnetUUID != nil {
		in, out := &in.SubnetUUID, &out.SubnetUUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpamNetworkSubnetInitParameters.
func (in *IpamNetworkSubnetInitParameters) DeepCopy() *IpamNetworkSubnetInitParameters {
	if in == nil {
		return nil
	}
	out := new(IpamNetworkSubnetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpamNetworkSubnetObservation) DeepCopyInto(out *IpamNetworkSubnetObservation) {
	*out = *in
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]IpamNetworkSubnetSubnetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnet6 != nil {
		in, out := &in.Subnet6, &out.Subnet6
		*out = make([]IpamNetworkSubnetSubnet6Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnet6UUID != nil {
		in, out := &in.Subnet6UUID, &out.Subnet6UUID
		*out = new(string)
		**out = **in
	}
	if in.SubnetUUID != nil {
		in, out := &in.SubnetUUID, &out.SubnetUUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpamNetworkSubnetObservation.
func (in *IpamNetworkSubnetObservation) DeepCopy() *IpamNetworkSubnetObservation {
	if in == nil {
		return nil
	}
	out := new(IpamNetworkSubnetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpamNetworkSubnetParameters) DeepCopyInto(out *IpamNetworkSubnetParameters) {
	*out = *in
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]IpamNetworkSubnetSubnetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnet6 != nil {
		in, out := &in.Subnet6, &out.Subnet6
		*out = make([]IpamNetworkSubnetSubnet6Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnet6UUID != nil {
		in, out := &in.Subnet6UUID, &out.Subnet6UUID
		*out = new(string)
		**out = **in
	}
	if in.SubnetUUID != nil {
		in, out := &in.SubnetUUID, &out.SubnetUUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpamNetworkSubnetParameters.
func (in *IpamNetworkSubnetParameters) DeepCopy() *IpamNetworkSubnetParameters {
	if in == nil {
		return nil
	}
	out := new(IpamNetworkSubnetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpamNetworkSubnetSubnet6IPAddrInitParameters) DeepCopyInto(out *IpamNetworkSubnetSubnet6IPAddrInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpamNetworkSubnetSubnet6IPAddrInitParameters.
func (in *IpamNetworkSubnetSubnet6IPAddrInitParameters) DeepCopy() *IpamNetworkSubnetSubnet6IPAddrInitParameters {
	if in == nil {
		return nil
	}
	out := new(IpamNetworkSubnetSubnet6IPAddrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpamNetworkSubnetSubnet6IPAddrObservation) DeepCopyInto(out *IpamNetworkSubnetSubnet6IPAddrObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpamNetworkSubnetSubnet6IPAddrObservation.
func (in *IpamNetworkSubnetSubnet6IPAddrObservation) DeepCopy() *IpamNetworkSubnetSubnet6IPAddrObservation {
	if in == nil {
		return nil
	}
	out := new(IpamNetworkSubnetSubnet6IPAddrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpamNetworkSubnetSubnet6IPAddrParameters) DeepCopyInto(out *IpamNetworkSubnetSubnet6IPAddrParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpamNetworkSubnetSubnet6IPAddrParameters.
func (in *IpamNetworkSubnetSubnet6IPAddrParameters) DeepCopy() *IpamNetworkSubnetSubnet6IPAddrParameters {
	if in == nil {
		return nil
	}
	out := new(IpamNetworkSubnetSubnet6IPAddrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpamNetworkSubnetSubnet6InitParameters) DeepCopyInto(out *IpamNetworkSubnetSubnet6InitParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]IpamNetworkSubnetSubnet6IPAddrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpamNetworkSubnetSubnet6InitParameters.
func (in *IpamNetworkSubnetSubnet6InitParameters) DeepCopy() *IpamNetworkSubnetSubnet6InitParameters {
	if in == nil {
		return nil
	}
	out := new(IpamNetworkSubnetSubnet6InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpamNetworkSubnetSubnet6Observation) DeepCopyInto(out *IpamNetworkSubnetSubnet6Observation) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]IpamNetworkSubnetSubnet6IPAddrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpamNetworkSubnetSubnet6Observation.
func (in *IpamNetworkSubnetSubnet6Observation) DeepCopy() *IpamNetworkSubnetSubnet6Observation {
	if in == nil {
		return nil
	}
	out := new(IpamNetworkSubnetSubnet6Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpamNetworkSubnetSubnet6Parameters) DeepCopyInto(out *IpamNetworkSubnetSubnet6Parameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]IpamNetworkSubnetSubnet6IPAddrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpamNetworkSubnetSubnet6Parameters.
func (in *IpamNetworkSubnetSubnet6Parameters) DeepCopy() *IpamNetworkSubnetSubnet6Parameters {
	if in == nil {
		return nil
	}
	out := new(IpamNetworkSubnetSubnet6Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpamNetworkSubnetSubnetIPAddrInitParameters) DeepCopyInto(out *IpamNetworkSubnetSubnetIPAddrInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpamNetworkSubnetSubnetIPAddrInitParameters.
func (in *IpamNetworkSubnetSubnetIPAddrInitParameters) DeepCopy() *IpamNetworkSubnetSubnetIPAddrInitParameters {
	if in == nil {
		return nil
	}
	out := new(IpamNetworkSubnetSubnetIPAddrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpamNetworkSubnetSubnetIPAddrObservation) DeepCopyInto(out *IpamNetworkSubnetSubnetIPAddrObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpamNetworkSubnetSubnetIPAddrObservation.
func (in *IpamNetworkSubnetSubnetIPAddrObservation) DeepCopy() *IpamNetworkSubnetSubnetIPAddrObservation {
	if in == nil {
		return nil
	}
	out := new(IpamNetworkSubnetSubnetIPAddrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpamNetworkSubnetSubnetIPAddrParameters) DeepCopyInto(out *IpamNetworkSubnetSubnetIPAddrParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpamNetworkSubnetSubnetIPAddrParameters.
func (in *IpamNetworkSubnetSubnetIPAddrParameters) DeepCopy() *IpamNetworkSubnetSubnetIPAddrParameters {
	if in == nil {
		return nil
	}
	out := new(IpamNetworkSubnetSubnetIPAddrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpamNetworkSubnetSubnetInitParameters) DeepCopyInto(out *IpamNetworkSubnetSubnetInitParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]IpamNetworkSubnetSubnetIPAddrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpamNetworkSubnetSubnetInitParameters.
func (in *IpamNetworkSubnetSubnetInitParameters) DeepCopy() *IpamNetworkSubnetSubnetInitParameters {
	if in == nil {
		return nil
	}
	out := new(IpamNetworkSubnetSubnetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpamNetworkSubnetSubnetObservation) DeepCopyInto(out *IpamNetworkSubnetSubnetObservation) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]IpamNetworkSubnetSubnetIPAddrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpamNetworkSubnetSubnetObservation.
func (in *IpamNetworkSubnetSubnetObservation) DeepCopy() *IpamNetworkSubnetSubnetObservation {
	if in == nil {
		return nil
	}
	out := new(IpamNetworkSubnetSubnetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpamNetworkSubnetSubnetParameters) DeepCopyInto(out *IpamNetworkSubnetSubnetParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]IpamNetworkSubnetSubnetIPAddrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpamNetworkSubnetSubnetParameters.
func (in *IpamNetworkSubnetSubnetParameters) DeepCopy() *IpamNetworkSubnetSubnetParameters {
	if in == nil {
		return nil
	}
	out := new(IpamNetworkSubnetSubnetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IptablesInitParameters) DeepCopyInto(out *IptablesInitParameters) {
	*out = *in
	if in.Chain != nil {
		in, out := &in.Chain, &out.Chain
		*out = new(string)
		**out = **in
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IptablesInitParameters.
func (in *IptablesInitParameters) DeepCopy() *IptablesInitParameters {
	if in == nil {
		return nil
	}
	out := new(IptablesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IptablesObservation) DeepCopyInto(out *IptablesObservation) {
	*out = *in
	if in.Chain != nil {
		in, out := &in.Chain, &out.Chain
		*out = new(string)
		**out = **in
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IptablesObservation.
func (in *IptablesObservation) DeepCopy() *IptablesObservation {
	if in == nil {
		return nil
	}
	out := new(IptablesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IptablesParameters) DeepCopyInto(out *IptablesParameters) {
	*out = *in
	if in.Chain != nil {
		in, out := &in.Chain, &out.Chain
		*out = new(string)
		**out = **in
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]RulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IptablesParameters.
func (in *IptablesParameters) DeepCopy() *IptablesParameters {
	if in == nil {
		return nil
	}
	out := new(IptablesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JwtConfigInitParameters) DeepCopyInto(out *JwtConfigInitParameters) {
	*out = *in
	if in.Audience != nil {
		in, out := &in.Audience, &out.Audience
		*out = new(string)
		**out = **in
	}
	if in.JwtLocation != nil {
		in, out := &in.JwtLocation, &out.JwtLocation
		*out = new(string)
		**out = **in
	}
	if in.JwtName != nil {
		in, out := &in.JwtName, &out.JwtName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JwtConfigInitParameters.
func (in *JwtConfigInitParameters) DeepCopy() *JwtConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(JwtConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JwtConfigObservation) DeepCopyInto(out *JwtConfigObservation) {
	*out = *in
	if in.Audience != nil {
		in, out := &in.Audience, &out.Audience
		*out = new(string)
		**out = **in
	}
	if in.JwtLocation != nil {
		in, out := &in.JwtLocation, &out.JwtLocation
		*out = new(string)
		**out = **in
	}
	if in.JwtName != nil {
		in, out := &in.JwtName, &out.JwtName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JwtConfigObservation.
func (in *JwtConfigObservation) DeepCopy() *JwtConfigObservation {
	if in == nil {
		return nil
	}
	out := new(JwtConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JwtConfigParameters) DeepCopyInto(out *JwtConfigParameters) {
	*out = *in
	if in.Audience != nil {
		in, out := &in.Audience, &out.Audience
		*out = new(string)
		**out = **in
	}
	if in.JwtLocation != nil {
		in, out := &in.JwtLocation, &out.JwtLocation
		*out = new(string)
		**out = **in
	}
	if in.JwtName != nil {
		in, out := &in.JwtName, &out.JwtName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JwtConfigParameters.
func (in *JwtConfigParameters) DeepCopy() *JwtConfigParameters {
	if in == nil {
		return nil
	}
	out := new(JwtConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JwtParamsInitParameters) DeepCopyInto(out *JwtParamsInitParameters) {
	*out = *in
	if in.Audience != nil {
		in, out := &in.Audience, &out.Audience
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JwtParamsInitParameters.
func (in *JwtParamsInitParameters) DeepCopy() *JwtParamsInitParameters {
	if in == nil {
		return nil
	}
	out := new(JwtParamsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JwtParamsObservation) DeepCopyInto(out *JwtParamsObservation) {
	*out = *in
	if in.Audience != nil {
		in, out := &in.Audience, &out.Audience
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JwtParamsObservation.
func (in *JwtParamsObservation) DeepCopy() *JwtParamsObservation {
	if in == nil {
		return nil
	}
	out := new(JwtParamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JwtParamsParameters) DeepCopyInto(out *JwtParamsParameters) {
	*out = *in
	if in.Audience != nil {
		in, out := &in.Audience, &out.Audience
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JwtParamsParameters.
func (in *JwtParamsParameters) DeepCopy() *JwtParamsParameters {
	if in == nil {
		return nil
	}
	out := new(JwtParamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyInitParameters) DeepCopyInto(out *KeyInitParameters) {
	*out = *in
	if in.AesKey != nil {
		in, out := &in.AesKey, &out.AesKey
		*out = new(string)
		**out = **in
	}
	if in.HMACKey != nil {
		in, out := &in.HMACKey, &out.HMACKey
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyInitParameters.
func (in *KeyInitParameters) DeepCopy() *KeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(KeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyObservation) DeepCopyInto(out *KeyObservation) {
	*out = *in
	if in.AesKey != nil {
		in, out := &in.AesKey, &out.AesKey
		*out = new(string)
		**out = **in
	}
	if in.HMACKey != nil {
		in, out := &in.HMACKey, &out.HMACKey
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyObservation.
func (in *KeyObservation) DeepCopy() *KeyObservation {
	if in == nil {
		return nil
	}
	out := new(KeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyParameters) DeepCopyInto(out *KeyParameters) {
	*out = *in
	if in.AesKey != nil {
		in, out := &in.AesKey, &out.AesKey
		*out = new(string)
		**out = **in
	}
	if in.HMACKey != nil {
		in, out := &in.HMACKey, &out.HMACKey
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyParameters.
func (in *KeyParameters) DeepCopy() *KeyParameters {
	if in == nil {
		return nil
	}
	out := new(KeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KniAllowedServerPortsInitParameters) DeepCopyInto(out *KniAllowedServerPortsInitParameters) {
	*out = *in
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]RangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KniAllowedServerPortsInitParameters.
func (in *KniAllowedServerPortsInitParameters) DeepCopy() *KniAllowedServerPortsInitParameters {
	if in == nil {
		return nil
	}
	out := new(KniAllowedServerPortsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KniAllowedServerPortsObservation) DeepCopyInto(out *KniAllowedServerPortsObservation) {
	*out = *in
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]RangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KniAllowedServerPortsObservation.
func (in *KniAllowedServerPortsObservation) DeepCopy() *KniAllowedServerPortsObservation {
	if in == nil {
		return nil
	}
	out := new(KniAllowedServerPortsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KniAllowedServerPortsParameters) DeepCopyInto(out *KniAllowedServerPortsParameters) {
	*out = *in
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]RangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KniAllowedServerPortsParameters.
func (in *KniAllowedServerPortsParameters) DeepCopy() *KniAllowedServerPortsParameters {
	if in == nil {
		return nil
	}
	out := new(KniAllowedServerPortsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *L4PoliciesInitParameters) DeepCopyInto(out *L4PoliciesInitParameters) {
	*out = *in
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
	if in.L4PolicySetRef != nil {
		in, out := &in.L4PolicySetRef, &out.L4PolicySetRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new L4PoliciesInitParameters.
func (in *L4PoliciesInitParameters) DeepCopy() *L4PoliciesInitParameters {
	if in == nil {
		return nil
	}
	out := new(L4PoliciesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *L4PoliciesObservation) DeepCopyInto(out *L4PoliciesObservation) {
	*out = *in
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
	if in.L4PolicySetRef != nil {
		in, out := &in.L4PolicySetRef, &out.L4PolicySetRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new L4PoliciesObservation.
func (in *L4PoliciesObservation) DeepCopy() *L4PoliciesObservation {
	if in == nil {
		return nil
	}
	out := new(L4PoliciesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *L4PoliciesParameters) DeepCopyInto(out *L4PoliciesParameters) {
	*out = *in
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
	if in.L4PolicySetRef != nil {
		in, out := &in.L4PolicySetRef, &out.L4PolicySetRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new L4PoliciesParameters.
func (in *L4PoliciesParameters) DeepCopy() *L4PoliciesParameters {
	if in == nil {
		return nil
	}
	out := new(L4PoliciesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelsInitParameters) DeepCopyInto(out *LabelsInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelsInitParameters.
func (in *LabelsInitParameters) DeepCopy() *LabelsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LabelsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelsObservation) DeepCopyInto(out *LabelsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelsObservation.
func (in *LabelsObservation) DeepCopy() *LabelsObservation {
	if in == nil {
		return nil
	}
	out := new(LabelsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelsParameters) DeepCopyInto(out *LabelsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelsParameters.
func (in *LabelsParameters) DeepCopy() *LabelsParameters {
	if in == nil {
		return nil
	}
	out := new(LabelsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LdapVsConfigInitParameters) DeepCopyInto(out *LdapVsConfigInitParameters) {
	*out = *in
	if in.Realm != nil {
		in, out := &in.Realm, &out.Realm
		*out = new(string)
		**out = **in
	}
	if in.SeAuthLdapBindTimeout != nil {
		in, out := &in.SeAuthLdapBindTimeout, &out.SeAuthLdapBindTimeout
		*out = new(string)
		**out = **in
	}
	if in.SeAuthLdapCacheSize != nil {
		in, out := &in.SeAuthLdapCacheSize, &out.SeAuthLdapCacheSize
		*out = new(string)
		**out = **in
	}
	if in.SeAuthLdapConnectTimeout != nil {
		in, out := &in.SeAuthLdapConnectTimeout, &out.SeAuthLdapConnectTimeout
		*out = new(string)
		**out = **in
	}
	if in.SeAuthLdapConnsPerServer != nil {
		in, out := &in.SeAuthLdapConnsPerServer, &out.SeAuthLdapConnsPerServer
		*out = new(string)
		**out = **in
	}
	if in.SeAuthLdapReconnectTimeout != nil {
		in, out := &in.SeAuthLdapReconnectTimeout, &out.SeAuthLdapReconnectTimeout
		*out = new(string)
		**out = **in
	}
	if in.SeAuthLdapRequestTimeout != nil {
		in, out := &in.SeAuthLdapRequestTimeout, &out.SeAuthLdapRequestTimeout
		*out = new(string)
		**out = **in
	}
	if in.SeAuthLdapServersFailoverOnly != nil {
		in, out := &in.SeAuthLdapServersFailoverOnly, &out.SeAuthLdapServersFailoverOnly
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LdapVsConfigInitParameters.
func (in *LdapVsConfigInitParameters) DeepCopy() *LdapVsConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(LdapVsConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LdapVsConfigObservation) DeepCopyInto(out *LdapVsConfigObservation) {
	*out = *in
	if in.Realm != nil {
		in, out := &in.Realm, &out.Realm
		*out = new(string)
		**out = **in
	}
	if in.SeAuthLdapBindTimeout != nil {
		in, out := &in.SeAuthLdapBindTimeout, &out.SeAuthLdapBindTimeout
		*out = new(string)
		**out = **in
	}
	if in.SeAuthLdapCacheSize != nil {
		in, out := &in.SeAuthLdapCacheSize, &out.SeAuthLdapCacheSize
		*out = new(string)
		**out = **in
	}
	if in.SeAuthLdapConnectTimeout != nil {
		in, out := &in.SeAuthLdapConnectTimeout, &out.SeAuthLdapConnectTimeout
		*out = new(string)
		**out = **in
	}
	if in.SeAuthLdapConnsPerServer != nil {
		in, out := &in.SeAuthLdapConnsPerServer, &out.SeAuthLdapConnsPerServer
		*out = new(string)
		**out = **in
	}
	if in.SeAuthLdapReconnectTimeout != nil {
		in, out := &in.SeAuthLdapReconnectTimeout, &out.SeAuthLdapReconnectTimeout
		*out = new(string)
		**out = **in
	}
	if in.SeAuthLdapRequestTimeout != nil {
		in, out := &in.SeAuthLdapRequestTimeout, &out.SeAuthLdapRequestTimeout
		*out = new(string)
		**out = **in
	}
	if in.SeAuthLdapServersFailoverOnly != nil {
		in, out := &in.SeAuthLdapServersFailoverOnly, &out.SeAuthLdapServersFailoverOnly
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LdapVsConfigObservation.
func (in *LdapVsConfigObservation) DeepCopy() *LdapVsConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LdapVsConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LdapVsConfigParameters) DeepCopyInto(out *LdapVsConfigParameters) {
	*out = *in
	if in.Realm != nil {
		in, out := &in.Realm, &out.Realm
		*out = new(string)
		**out = **in
	}
	if in.SeAuthLdapBindTimeout != nil {
		in, out := &in.SeAuthLdapBindTimeout, &out.SeAuthLdapBindTimeout
		*out = new(string)
		**out = **in
	}
	if in.SeAuthLdapCacheSize != nil {
		in, out := &in.SeAuthLdapCacheSize, &out.SeAuthLdapCacheSize
		*out = new(string)
		**out = **in
	}
	if in.SeAuthLdapConnectTimeout != nil {
		in, out := &in.SeAuthLdapConnectTimeout, &out.SeAuthLdapConnectTimeout
		*out = new(string)
		**out = **in
	}
	if in.SeAuthLdapConnsPerServer != nil {
		in, out := &in.SeAuthLdapConnsPerServer, &out.SeAuthLdapConnsPerServer
		*out = new(string)
		**out = **in
	}
	if in.SeAuthLdapReconnectTimeout != nil {
		in, out := &in.SeAuthLdapReconnectTimeout, &out.SeAuthLdapReconnectTimeout
		*out = new(string)
		**out = **in
	}
	if in.SeAuthLdapRequestTimeout != nil {
		in, out := &in.SeAuthLdapRequestTimeout, &out.SeAuthLdapRequestTimeout
		*out = new(string)
		**out = **in
	}
	if in.SeAuthLdapServersFailoverOnly != nil {
		in, out := &in.SeAuthLdapServersFailoverOnly, &out.SeAuthLdapServersFailoverOnly
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LdapVsConfigParameters.
func (in *LdapVsConfigParameters) DeepCopy() *LdapVsConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LdapVsConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningLogPolicyInitParameters) DeepCopyInto(out *LearningLogPolicyInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningLogPolicyInitParameters.
func (in *LearningLogPolicyInitParameters) DeepCopy() *LearningLogPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(LearningLogPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningLogPolicyObservation) DeepCopyInto(out *LearningLogPolicyObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningLogPolicyObservation.
func (in *LearningLogPolicyObservation) DeepCopy() *LearningLogPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(LearningLogPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningLogPolicyParameters) DeepCopyInto(out *LearningLogPolicyParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningLogPolicyParameters.
func (in *LearningLogPolicyParameters) DeepCopy() *LearningLogPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(LearningLogPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalRspInitParameters) DeepCopyInto(out *LocalRspInitParameters) {
	*out = *in
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]FileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalRspInitParameters.
func (in *LocalRspInitParameters) DeepCopy() *LocalRspInitParameters {
	if in == nil {
		return nil
	}
	out := new(LocalRspInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalRspObservation) DeepCopyInto(out *LocalRspObservation) {
	*out = *in
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]FileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalRspObservation.
func (in *LocalRspObservation) DeepCopy() *LocalRspObservation {
	if in == nil {
		return nil
	}
	out := new(LocalRspObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalRspParameters) DeepCopyInto(out *LocalRspParameters) {
	*out = *in
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]FileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalRspParameters.
func (in *LocalRspParameters) DeepCopy() *LocalRspParameters {
	if in == nil {
		return nil
	}
	out := new(LocalRspParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocationInitParameters) DeepCopyInto(out *LocationInitParameters) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = make([]LocationLocationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocationInitParameters.
func (in *LocationInitParameters) DeepCopy() *LocationInitParameters {
	if in == nil {
		return nil
	}
	out := new(LocationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocationLocationInitParameters) DeepCopyInto(out *LocationLocationInitParameters) {
	*out = *in
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(string)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocationLocationInitParameters.
func (in *LocationLocationInitParameters) DeepCopy() *LocationLocationInitParameters {
	if in == nil {
		return nil
	}
	out := new(LocationLocationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocationLocationObservation) DeepCopyInto(out *LocationLocationObservation) {
	*out = *in
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(string)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocationLocationObservation.
func (in *LocationLocationObservation) DeepCopy() *LocationLocationObservation {
	if in == nil {
		return nil
	}
	out := new(LocationLocationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocationLocationParameters) DeepCopyInto(out *LocationLocationParameters) {
	*out = *in
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(string)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocationLocationParameters.
func (in *LocationLocationParameters) DeepCopy() *LocationLocationParameters {
	if in == nil {
		return nil
	}
	out := new(LocationLocationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocationObservation) DeepCopyInto(out *LocationObservation) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = make([]LocationLocationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocationObservation.
func (in *LocationObservation) DeepCopy() *LocationObservation {
	if in == nil {
		return nil
	}
	out := new(LocationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocationParameters) DeepCopyInto(out *LocationParameters) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = make([]LocationLocationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocationParameters.
func (in *LocationParameters) DeepCopy() *LocationParameters {
	if in == nil {
		return nil
	}
	out := new(LocationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MarkersInitParameters) DeepCopyInto(out *MarkersInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MarkersInitParameters.
func (in *MarkersInitParameters) DeepCopy() *MarkersInitParameters {
	if in == nil {
		return nil
	}
	out := new(MarkersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MarkersObservation) DeepCopyInto(out *MarkersObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MarkersObservation.
func (in *MarkersObservation) DeepCopy() *MarkersObservation {
	if in == nil {
		return nil
	}
	out := new(MarkersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MarkersParameters) DeepCopyInto(out *MarkersParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MarkersParameters.
func (in *MarkersParameters) DeepCopy() *MarkersParameters {
	if in == nil {
		return nil
	}
	out := new(MarkersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchesClientIPAddrsInitParameters) DeepCopyInto(out *MatchesClientIPAddrsInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchesClientIPAddrsInitParameters.
func (in *MatchesClientIPAddrsInitParameters) DeepCopy() *MatchesClientIPAddrsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MatchesClientIPAddrsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchesClientIPAddrsObservation) DeepCopyInto(out *MatchesClientIPAddrsObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchesClientIPAddrsObservation.
func (in *MatchesClientIPAddrsObservation) DeepCopy() *MatchesClientIPAddrsObservation {
	if in == nil {
		return nil
	}
	out := new(MatchesClientIPAddrsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchesClientIPAddrsParameters) DeepCopyInto(out *MatchesClientIPAddrsParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchesClientIPAddrsParameters.
func (in *MatchesClientIPAddrsParameters) DeepCopy() *MatchesClientIPAddrsParameters {
	if in == nil {
		return nil
	}
	out := new(MatchesClientIPAddrsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchesClientIPInitParameters) DeepCopyInto(out *MatchesClientIPInitParameters) {
	*out = *in
	if in.Addrs != nil {
		in, out := &in.Addrs, &out.Addrs
		*out = make([]MatchesClientIPAddrsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupRefs != nil {
		in, out := &in.GroupRefs, &out.GroupRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Prefixes != nil {
		in, out := &in.Prefixes, &out.Prefixes
		*out = make([]MatchesClientIPPrefixesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]MatchesClientIPRangesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchesClientIPInitParameters.
func (in *MatchesClientIPInitParameters) DeepCopy() *MatchesClientIPInitParameters {
	if in == nil {
		return nil
	}
	out := new(MatchesClientIPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchesClientIPObservation) DeepCopyInto(out *MatchesClientIPObservation) {
	*out = *in
	if in.Addrs != nil {
		in, out := &in.Addrs, &out.Addrs
		*out = make([]MatchesClientIPAddrsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupRefs != nil {
		in, out := &in.GroupRefs, &out.GroupRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Prefixes != nil {
		in, out := &in.Prefixes, &out.Prefixes
		*out = make([]MatchesClientIPPrefixesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]MatchesClientIPRangesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchesClientIPObservation.
func (in *MatchesClientIPObservation) DeepCopy() *MatchesClientIPObservation {
	if in == nil {
		return nil
	}
	out := new(MatchesClientIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchesClientIPParameters) DeepCopyInto(out *MatchesClientIPParameters) {
	*out = *in
	if in.Addrs != nil {
		in, out := &in.Addrs, &out.Addrs
		*out = make([]MatchesClientIPAddrsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupRefs != nil {
		in, out := &in.GroupRefs, &out.GroupRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Prefixes != nil {
		in, out := &in.Prefixes, &out.Prefixes
		*out = make([]MatchesClientIPPrefixesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]MatchesClientIPRangesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchesClientIPParameters.
func (in *MatchesClientIPParameters) DeepCopy() *MatchesClientIPParameters {
	if in == nil {
		return nil
	}
	out := new(MatchesClientIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchesClientIPPrefixesIPAddrInitParameters) DeepCopyInto(out *MatchesClientIPPrefixesIPAddrInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchesClientIPPrefixesIPAddrInitParameters.
func (in *MatchesClientIPPrefixesIPAddrInitParameters) DeepCopy() *MatchesClientIPPrefixesIPAddrInitParameters {
	if in == nil {
		return nil
	}
	out := new(MatchesClientIPPrefixesIPAddrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchesClientIPPrefixesIPAddrObservation) DeepCopyInto(out *MatchesClientIPPrefixesIPAddrObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchesClientIPPrefixesIPAddrObservation.
func (in *MatchesClientIPPrefixesIPAddrObservation) DeepCopy() *MatchesClientIPPrefixesIPAddrObservation {
	if in == nil {
		return nil
	}
	out := new(MatchesClientIPPrefixesIPAddrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchesClientIPPrefixesIPAddrParameters) DeepCopyInto(out *MatchesClientIPPrefixesIPAddrParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchesClientIPPrefixesIPAddrParameters.
func (in *MatchesClientIPPrefixesIPAddrParameters) DeepCopy() *MatchesClientIPPrefixesIPAddrParameters {
	if in == nil {
		return nil
	}
	out := new(MatchesClientIPPrefixesIPAddrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchesClientIPPrefixesInitParameters) DeepCopyInto(out *MatchesClientIPPrefixesInitParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]MatchesClientIPPrefixesIPAddrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchesClientIPPrefixesInitParameters.
func (in *MatchesClientIPPrefixesInitParameters) DeepCopy() *MatchesClientIPPrefixesInitParameters {
	if in == nil {
		return nil
	}
	out := new(MatchesClientIPPrefixesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchesClientIPPrefixesObservation) DeepCopyInto(out *MatchesClientIPPrefixesObservation) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]MatchesClientIPPrefixesIPAddrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchesClientIPPrefixesObservation.
func (in *MatchesClientIPPrefixesObservation) DeepCopy() *MatchesClientIPPrefixesObservation {
	if in == nil {
		return nil
	}
	out := new(MatchesClientIPPrefixesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchesClientIPPrefixesParameters) DeepCopyInto(out *MatchesClientIPPrefixesParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]MatchesClientIPPrefixesIPAddrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchesClientIPPrefixesParameters.
func (in *MatchesClientIPPrefixesParameters) DeepCopy() *MatchesClientIPPrefixesParameters {
	if in == nil {
		return nil
	}
	out := new(MatchesClientIPPrefixesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchesClientIPRangesBeginInitParameters) DeepCopyInto(out *MatchesClientIPRangesBeginInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchesClientIPRangesBeginInitParameters.
func (in *MatchesClientIPRangesBeginInitParameters) DeepCopy() *MatchesClientIPRangesBeginInitParameters {
	if in == nil {
		return nil
	}
	out := new(MatchesClientIPRangesBeginInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchesClientIPRangesBeginObservation) DeepCopyInto(out *MatchesClientIPRangesBeginObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchesClientIPRangesBeginObservation.
func (in *MatchesClientIPRangesBeginObservation) DeepCopy() *MatchesClientIPRangesBeginObservation {
	if in == nil {
		return nil
	}
	out := new(MatchesClientIPRangesBeginObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchesClientIPRangesBeginParameters) DeepCopyInto(out *MatchesClientIPRangesBeginParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchesClientIPRangesBeginParameters.
func (in *MatchesClientIPRangesBeginParameters) DeepCopy() *MatchesClientIPRangesBeginParameters {
	if in == nil {
		return nil
	}
	out := new(MatchesClientIPRangesBeginParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchesClientIPRangesEndInitParameters) DeepCopyInto(out *MatchesClientIPRangesEndInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchesClientIPRangesEndInitParameters.
func (in *MatchesClientIPRangesEndInitParameters) DeepCopy() *MatchesClientIPRangesEndInitParameters {
	if in == nil {
		return nil
	}
	out := new(MatchesClientIPRangesEndInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchesClientIPRangesEndObservation) DeepCopyInto(out *MatchesClientIPRangesEndObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchesClientIPRangesEndObservation.
func (in *MatchesClientIPRangesEndObservation) DeepCopy() *MatchesClientIPRangesEndObservation {
	if in == nil {
		return nil
	}
	out := new(MatchesClientIPRangesEndObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchesClientIPRangesEndParameters) DeepCopyInto(out *MatchesClientIPRangesEndParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchesClientIPRangesEndParameters.
func (in *MatchesClientIPRangesEndParameters) DeepCopy() *MatchesClientIPRangesEndParameters {
	if in == nil {
		return nil
	}
	out := new(MatchesClientIPRangesEndParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchesClientIPRangesInitParameters) DeepCopyInto(out *MatchesClientIPRangesInitParameters) {
	*out = *in
	if in.Begin != nil {
		in, out := &in.Begin, &out.Begin
		*out = make([]MatchesClientIPRangesBeginInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = make([]MatchesClientIPRangesEndInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchesClientIPRangesInitParameters.
func (in *MatchesClientIPRangesInitParameters) DeepCopy() *MatchesClientIPRangesInitParameters {
	if in == nil {
		return nil
	}
	out := new(MatchesClientIPRangesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchesClientIPRangesObservation) DeepCopyInto(out *MatchesClientIPRangesObservation) {
	*out = *in
	if in.Begin != nil {
		in, out := &in.Begin, &out.Begin
		*out = make([]MatchesClientIPRangesBeginObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = make([]MatchesClientIPRangesEndObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchesClientIPRangesObservation.
func (in *MatchesClientIPRangesObservation) DeepCopy() *MatchesClientIPRangesObservation {
	if in == nil {
		return nil
	}
	out := new(MatchesClientIPRangesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchesClientIPRangesParameters) DeepCopyInto(out *MatchesClientIPRangesParameters) {
	*out = *in
	if in.Begin != nil {
		in, out := &in.Begin, &out.Begin
		*out = make([]MatchesClientIPRangesBeginParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = make([]MatchesClientIPRangesEndParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchesClientIPRangesParameters.
func (in *MatchesClientIPRangesParameters) DeepCopy() *MatchesClientIPRangesParameters {
	if in == nil {
		return nil
	}
	out := new(MatchesClientIPRangesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchesInitParameters) DeepCopyInto(out *MatchesInitParameters) {
	*out = *in
	if in.BotDetectionResult != nil {
		in, out := &in.BotDetectionResult, &out.BotDetectionResult
		*out = make([]BotDetectionResultInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientIP != nil {
		in, out := &in.ClientIP, &out.ClientIP
		*out = make([]MatchesClientIPInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cookie != nil {
		in, out := &in.Cookie, &out.Cookie
		*out = make([]CookieInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GeoMatches != nil {
		in, out := &in.GeoMatches, &out.GeoMatches
		*out = make([]GeoMatchesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hdrs != nil {
		in, out := &in.Hdrs, &out.Hdrs
		*out = make([]HdrsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HostHdr != nil {
		in, out := &in.HostHdr, &out.HostHdr
		*out = make([]HostHdrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPReputationType != nil {
		in, out := &in.IPReputationType, &out.IPReputationType
		*out = make([]IPReputationTypeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = make([]MethodInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = make([]MatchesPathInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = make([]ProtocolInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = make([]QueryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceIP != nil {
		in, out := &in.SourceIP, &out.SourceIP
		*out = make([]SourceIPInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSFingerprintMatch != nil {
		in, out := &in.TLSFingerprintMatch, &out.TLSFingerprintMatch
		*out = make([]TLSFingerprintMatchInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = make([]VersionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VsPort != nil {
		in, out := &in.VsPort, &out.VsPort
		*out = make([]VsPortInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchesInitParameters.
func (in *MatchesInitParameters) DeepCopy() *MatchesInitParameters {
	if in == nil {
		return nil
	}
	out := new(MatchesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchesObservation) DeepCopyInto(out *MatchesObservation) {
	*out = *in
	if in.BotDetectionResult != nil {
		in, out := &in.BotDetectionResult, &out.BotDetectionResult
		*out = make([]BotDetectionResultObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientIP != nil {
		in, out := &in.ClientIP, &out.ClientIP
		*out = make([]MatchesClientIPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cookie != nil {
		in, out := &in.Cookie, &out.Cookie
		*out = make([]CookieObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GeoMatches != nil {
		in, out := &in.GeoMatches, &out.GeoMatches
		*out = make([]GeoMatchesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hdrs != nil {
		in, out := &in.Hdrs, &out.Hdrs
		*out = make([]HdrsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HostHdr != nil {
		in, out := &in.HostHdr, &out.HostHdr
		*out = make([]HostHdrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPReputationType != nil {
		in, out := &in.IPReputationType, &out.IPReputationType
		*out = make([]IPReputationTypeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = make([]MethodObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = make([]MatchesPathObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = make([]ProtocolObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = make([]QueryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceIP != nil {
		in, out := &in.SourceIP, &out.SourceIP
		*out = make([]SourceIPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSFingerprintMatch != nil {
		in, out := &in.TLSFingerprintMatch, &out.TLSFingerprintMatch
		*out = make([]TLSFingerprintMatchObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = make([]VersionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VsPort != nil {
		in, out := &in.VsPort, &out.VsPort
		*out = make([]VsPortObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchesObservation.
func (in *MatchesObservation) DeepCopy() *MatchesObservation {
	if in == nil {
		return nil
	}
	out := new(MatchesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchesParameters) DeepCopyInto(out *MatchesParameters) {
	*out = *in
	if in.BotDetectionResult != nil {
		in, out := &in.BotDetectionResult, &out.BotDetectionResult
		*out = make([]BotDetectionResultParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientIP != nil {
		in, out := &in.ClientIP, &out.ClientIP
		*out = make([]MatchesClientIPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cookie != nil {
		in, out := &in.Cookie, &out.Cookie
		*out = make([]CookieParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GeoMatches != nil {
		in, out := &in.GeoMatches, &out.GeoMatches
		*out = make([]GeoMatchesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hdrs != nil {
		in, out := &in.Hdrs, &out.Hdrs
		*out = make([]HdrsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HostHdr != nil {
		in, out := &in.HostHdr, &out.HostHdr
		*out = make([]HostHdrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPReputationType != nil {
		in, out := &in.IPReputationType, &out.IPReputationType
		*out = make([]IPReputationTypeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = make([]MethodParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = make([]MatchesPathParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = make([]ProtocolParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = make([]QueryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceIP != nil {
		in, out := &in.SourceIP, &out.SourceIP
		*out = make([]SourceIPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSFingerprintMatch != nil {
		in, out := &in.TLSFingerprintMatch, &out.TLSFingerprintMatch
		*out = make([]TLSFingerprintMatchParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = make([]VersionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VsPort != nil {
		in, out := &in.VsPort, &out.VsPort
		*out = make([]VsPortParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchesParameters.
func (in *MatchesParameters) DeepCopy() *MatchesParameters {
	if in == nil {
		return nil
	}
	out := new(MatchesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchesPathInitParameters) DeepCopyInto(out *MatchesPathInitParameters) {
	*out = *in
	if in.MatchCase != nil {
		in, out := &in.MatchCase, &out.MatchCase
		*out = new(string)
		**out = **in
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.MatchDecodedString != nil {
		in, out := &in.MatchDecodedString, &out.MatchDecodedString
		*out = new(string)
		**out = **in
	}
	if in.MatchStr != nil {
		in, out := &in.MatchStr, &out.MatchStr
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StringGroupRefs != nil {
		in, out := &in.StringGroupRefs, &out.StringGroupRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchesPathInitParameters.
func (in *MatchesPathInitParameters) DeepCopy() *MatchesPathInitParameters {
	if in == nil {
		return nil
	}
	out := new(MatchesPathInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchesPathObservation) DeepCopyInto(out *MatchesPathObservation) {
	*out = *in
	if in.MatchCase != nil {
		in, out := &in.MatchCase, &out.MatchCase
		*out = new(string)
		**out = **in
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.MatchDecodedString != nil {
		in, out := &in.MatchDecodedString, &out.MatchDecodedString
		*out = new(string)
		**out = **in
	}
	if in.MatchStr != nil {
		in, out := &in.MatchStr, &out.MatchStr
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StringGroupRefs != nil {
		in, out := &in.StringGroupRefs, &out.StringGroupRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchesPathObservation.
func (in *MatchesPathObservation) DeepCopy() *MatchesPathObservation {
	if in == nil {
		return nil
	}
	out := new(MatchesPathObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchesPathParameters) DeepCopyInto(out *MatchesPathParameters) {
	*out = *in
	if in.MatchCase != nil {
		in, out := &in.MatchCase, &out.MatchCase
		*out = new(string)
		**out = **in
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.MatchDecodedString != nil {
		in, out := &in.MatchDecodedString, &out.MatchDecodedString
		*out = new(string)
		**out = **in
	}
	if in.MatchStr != nil {
		in, out := &in.MatchStr, &out.MatchStr
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StringGroupRefs != nil {
		in, out := &in.StringGroupRefs, &out.StringGroupRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchesPathParameters.
func (in *MatchesPathParameters) DeepCopy() *MatchesPathParameters {
	if in == nil {
		return nil
	}
	out := new(MatchesPathParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaxConnRatePerServerInitParameters) DeepCopyInto(out *MaxConnRatePerServerInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]ActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExplicitTracking != nil {
		in, out := &in.ExplicitTracking, &out.ExplicitTracking
		*out = new(string)
		**out = **in
	}
	if in.FineGrain != nil {
		in, out := &in.FineGrain, &out.FineGrain
		*out = new(string)
		**out = **in
	}
	if in.HTTPCookie != nil {
		in, out := &in.HTTPCookie, &out.HTTPCookie
		*out = new(string)
		**out = **in
	}
	if in.HTTPHeader != nil {
		in, out := &in.HTTPHeader, &out.HTTPHeader
		*out = new(string)
		**out = **in
	}
	if in.RateLimiter != nil {
		in, out := &in.RateLimiter, &out.RateLimiter
		*out = make([]RateLimiterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaxConnRatePerServerInitParameters.
func (in *MaxConnRatePerServerInitParameters) DeepCopy() *MaxConnRatePerServerInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaxConnRatePerServerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaxConnRatePerServerObservation) DeepCopyInto(out *MaxConnRatePerServerObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]ActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExplicitTracking != nil {
		in, out := &in.ExplicitTracking, &out.ExplicitTracking
		*out = new(string)
		**out = **in
	}
	if in.FineGrain != nil {
		in, out := &in.FineGrain, &out.FineGrain
		*out = new(string)
		**out = **in
	}
	if in.HTTPCookie != nil {
		in, out := &in.HTTPCookie, &out.HTTPCookie
		*out = new(string)
		**out = **in
	}
	if in.HTTPHeader != nil {
		in, out := &in.HTTPHeader, &out.HTTPHeader
		*out = new(string)
		**out = **in
	}
	if in.RateLimiter != nil {
		in, out := &in.RateLimiter, &out.RateLimiter
		*out = make([]RateLimiterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaxConnRatePerServerObservation.
func (in *MaxConnRatePerServerObservation) DeepCopy() *MaxConnRatePerServerObservation {
	if in == nil {
		return nil
	}
	out := new(MaxConnRatePerServerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaxConnRatePerServerParameters) DeepCopyInto(out *MaxConnRatePerServerParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]ActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExplicitTracking != nil {
		in, out := &in.ExplicitTracking, &out.ExplicitTracking
		*out = new(string)
		**out = **in
	}
	if in.FineGrain != nil {
		in, out := &in.FineGrain, &out.FineGrain
		*out = new(string)
		**out = **in
	}
	if in.HTTPCookie != nil {
		in, out := &in.HTTPCookie, &out.HTTPCookie
		*out = new(string)
		**out = **in
	}
	if in.HTTPHeader != nil {
		in, out := &in.HTTPHeader, &out.HTTPHeader
		*out = new(string)
		**out = **in
	}
	if in.RateLimiter != nil {
		in, out := &in.RateLimiter, &out.RateLimiter
		*out = make([]RateLimiterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaxConnRatePerServerParameters.
func (in *MaxConnRatePerServerParameters) DeepCopy() *MaxConnRatePerServerParameters {
	if in == nil {
		return nil
	}
	out := new(MaxConnRatePerServerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MembersInitParameters) DeepCopyInto(out *MembersInitParameters) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(string)
		**out = **in
	}
	if in.IfName != nil {
		in, out := &in.IfName, &out.IfName
		*out = new(string)
		**out = **in
	}
	if in.MacAddress != nil {
		in, out := &in.MacAddress, &out.MacAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MembersInitParameters.
func (in *MembersInitParameters) DeepCopy() *MembersInitParameters {
	if in == nil {
		return nil
	}
	out := new(MembersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MembersObservation) DeepCopyInto(out *MembersObservation) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(string)
		**out = **in
	}
	if in.IfName != nil {
		in, out := &in.IfName, &out.IfName
		*out = new(string)
		**out = **in
	}
	if in.MacAddress != nil {
		in, out := &in.MacAddress, &out.MacAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MembersObservation.
func (in *MembersObservation) DeepCopy() *MembersObservation {
	if in == nil {
		return nil
	}
	out := new(MembersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MembersParameters) DeepCopyInto(out *MembersParameters) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(string)
		**out = **in
	}
	if in.IfName != nil {
		in, out := &in.IfName, &out.IfName
		*out = new(string)
		**out = **in
	}
	if in.MacAddress != nil {
		in, out := &in.MacAddress, &out.MacAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MembersParameters.
func (in *MembersParameters) DeepCopy() *MembersParameters {
	if in == nil {
		return nil
	}
	out := new(MembersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetaInitParameters) DeepCopyInto(out *MetaInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetaInitParameters.
func (in *MetaInitParameters) DeepCopy() *MetaInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetaObservation) DeepCopyInto(out *MetaObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetaObservation.
func (in *MetaObservation) DeepCopy() *MetaObservation {
	if in == nil {
		return nil
	}
	out := new(MetaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetaParameters) DeepCopyInto(out *MetaParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetaParameters.
func (in *MetaParameters) DeepCopy() *MetaParameters {
	if in == nil {
		return nil
	}
	out := new(MetaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MethodInitParameters) DeepCopyInto(out *MethodInitParameters) {
	*out = *in
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Methods != nil {
		in, out := &in.Methods, &out.Methods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MethodInitParameters.
func (in *MethodInitParameters) DeepCopy() *MethodInitParameters {
	if in == nil {
		return nil
	}
	out := new(MethodInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MethodObservation) DeepCopyInto(out *MethodObservation) {
	*out = *in
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Methods != nil {
		in, out := &in.Methods, &out.Methods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MethodObservation.
func (in *MethodObservation) DeepCopy() *MethodObservation {
	if in == nil {
		return nil
	}
	out := new(MethodObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MethodParameters) DeepCopyInto(out *MethodParameters) {
	*out = *in
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Methods != nil {
		in, out := &in.Methods, &out.Methods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MethodParameters.
func (in *MethodParameters) DeepCopy() *MethodParameters {
	if in == nil {
		return nil
	}
	out := new(MethodParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricsEventThresholdsInitParameters) DeepCopyInto(out *MetricsEventThresholdsInitParameters) {
	*out = *in
	if in.MetricsEventThresholdType != nil {
		in, out := &in.MetricsEventThresholdType, &out.MetricsEventThresholdType
		*out = new(string)
		**out = **in
	}
	if in.ResetThreshold != nil {
		in, out := &in.ResetThreshold, &out.ResetThreshold
		*out = new(string)
		**out = **in
	}
	if in.WatermarkThresholds != nil {
		in, out := &in.WatermarkThresholds, &out.WatermarkThresholds
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricsEventThresholdsInitParameters.
func (in *MetricsEventThresholdsInitParameters) DeepCopy() *MetricsEventThresholdsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetricsEventThresholdsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricsEventThresholdsObservation) DeepCopyInto(out *MetricsEventThresholdsObservation) {
	*out = *in
	if in.MetricsEventThresholdType != nil {
		in, out := &in.MetricsEventThresholdType, &out.MetricsEventThresholdType
		*out = new(string)
		**out = **in
	}
	if in.ResetThreshold != nil {
		in, out := &in.ResetThreshold, &out.ResetThreshold
		*out = new(string)
		**out = **in
	}
	if in.WatermarkThresholds != nil {
		in, out := &in.WatermarkThresholds, &out.WatermarkThresholds
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricsEventThresholdsObservation.
func (in *MetricsEventThresholdsObservation) DeepCopy() *MetricsEventThresholdsObservation {
	if in == nil {
		return nil
	}
	out := new(MetricsEventThresholdsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricsEventThresholdsParameters) DeepCopyInto(out *MetricsEventThresholdsParameters) {
	*out = *in
	if in.MetricsEventThresholdType != nil {
		in, out := &in.MetricsEventThresholdType, &out.MetricsEventThresholdType
		*out = new(string)
		**out = **in
	}
	if in.ResetThreshold != nil {
		in, out := &in.ResetThreshold, &out.ResetThreshold
		*out = new(string)
		**out = **in
	}
	if in.WatermarkThresholds != nil {
		in, out := &in.WatermarkThresholds, &out.WatermarkThresholds
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricsEventThresholdsParameters.
func (in *MetricsEventThresholdsParameters) DeepCopy() *MetricsEventThresholdsParameters {
	if in == nil {
		return nil
	}
	out := new(MetricsEventThresholdsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricsRealtimeUpdateInitParameters) DeepCopyInto(out *MetricsRealtimeUpdateInitParameters) {
	*out = *in
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricsRealtimeUpdateInitParameters.
func (in *MetricsRealtimeUpdateInitParameters) DeepCopy() *MetricsRealtimeUpdateInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetricsRealtimeUpdateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricsRealtimeUpdateObservation) DeepCopyInto(out *MetricsRealtimeUpdateObservation) {
	*out = *in
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricsRealtimeUpdateObservation.
func (in *MetricsRealtimeUpdateObservation) DeepCopy() *MetricsRealtimeUpdateObservation {
	if in == nil {
		return nil
	}
	out := new(MetricsRealtimeUpdateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricsRealtimeUpdateParameters) DeepCopyInto(out *MetricsRealtimeUpdateParameters) {
	*out = *in
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricsRealtimeUpdateParameters.
func (in *MetricsRealtimeUpdateParameters) DeepCopy() *MetricsRealtimeUpdateParameters {
	if in == nil {
		return nil
	}
	out := new(MetricsRealtimeUpdateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MgmtSubnetIPAddrInitParameters) DeepCopyInto(out *MgmtSubnetIPAddrInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MgmtSubnetIPAddrInitParameters.
func (in *MgmtSubnetIPAddrInitParameters) DeepCopy() *MgmtSubnetIPAddrInitParameters {
	if in == nil {
		return nil
	}
	out := new(MgmtSubnetIPAddrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MgmtSubnetIPAddrObservation) DeepCopyInto(out *MgmtSubnetIPAddrObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MgmtSubnetIPAddrObservation.
func (in *MgmtSubnetIPAddrObservation) DeepCopy() *MgmtSubnetIPAddrObservation {
	if in == nil {
		return nil
	}
	out := new(MgmtSubnetIPAddrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MgmtSubnetIPAddrParameters) DeepCopyInto(out *MgmtSubnetIPAddrParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MgmtSubnetIPAddrParameters.
func (in *MgmtSubnetIPAddrParameters) DeepCopy() *MgmtSubnetIPAddrParameters {
	if in == nil {
		return nil
	}
	out := new(MgmtSubnetIPAddrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MgmtSubnetInitParameters) DeepCopyInto(out *MgmtSubnetInitParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]MgmtSubnetIPAddrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MgmtSubnetInitParameters.
func (in *MgmtSubnetInitParameters) DeepCopy() *MgmtSubnetInitParameters {
	if in == nil {
		return nil
	}
	out := new(MgmtSubnetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MgmtSubnetObservation) DeepCopyInto(out *MgmtSubnetObservation) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]MgmtSubnetIPAddrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MgmtSubnetObservation.
func (in *MgmtSubnetObservation) DeepCopy() *MgmtSubnetObservation {
	if in == nil {
		return nil
	}
	out := new(MgmtSubnetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MgmtSubnetParameters) DeepCopyInto(out *MgmtSubnetParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]MgmtSubnetIPAddrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MgmtSubnetParameters.
func (in *MgmtSubnetParameters) DeepCopy() *MgmtSubnetParameters {
	if in == nil {
		return nil
	}
	out := new(MgmtSubnetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MgmtVnicInitParameters) DeepCopyInto(out *MgmtVnicInitParameters) {
	*out = *in
	if in.Adapter != nil {
		in, out := &in.Adapter, &out.Adapter
		*out = new(string)
		**out = **in
	}
	if in.AggregatorChgd != nil {
		in, out := &in.AggregatorChgd, &out.AggregatorChgd
		*out = new(string)
		**out = **in
	}
	if in.CanSeDpTakeover != nil {
		in, out := &in.CanSeDpTakeover, &out.CanSeDpTakeover
		*out = new(string)
		**out = **in
	}
	if in.Connected != nil {
		in, out := &in.Connected, &out.Connected
		*out = new(string)
		**out = **in
	}
	if in.DHCPEnabled != nil {
		in, out := &in.DHCPEnabled, &out.DHCPEnabled
		*out = new(string)
		**out = **in
	}
	if in.DelPending != nil {
		in, out := &in.DelPending, &out.DelPending
		*out = new(string)
		**out = **in
	}
	if in.DeleteVnic != nil {
		in, out := &in.DeleteVnic, &out.DeleteVnic
		*out = new(string)
		**out = **in
	}
	if in.DpDeletionDone != nil {
		in, out := &in.DpDeletionDone, &out.DpDeletionDone
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.IfName != nil {
		in, out := &in.IfName, &out.IfName
		*out = new(string)
		**out = **in
	}
	if in.Ip6AutocfgEnabled != nil {
		in, out := &in.Ip6AutocfgEnabled, &out.Ip6AutocfgEnabled
		*out = new(string)
		**out = **in
	}
	if in.IsAsm != nil {
		in, out := &in.IsAsm, &out.IsAsm
		*out = new(string)
		**out = **in
	}
	if in.IsAviInternalNetwork != nil {
		in, out := &in.IsAviInternalNetwork, &out.IsAviInternalNetwork
		*out = new(string)
		**out = **in
	}
	if in.IsHSM != nil {
		in, out := &in.IsHSM, &out.IsHSM
		*out = new(string)
		**out = **in
	}
	if in.IsMgmt != nil {
		in, out := &in.IsMgmt, &out.IsMgmt
		*out = new(string)
		**out = **in
	}
	if in.IsPortchannel != nil {
		in, out := &in.IsPortchannel, &out.IsPortchannel
		*out = new(string)
		**out = **in
	}
	if in.LinkUp != nil {
		in, out := &in.LinkUp, &out.LinkUp
		*out = new(string)
		**out = **in
	}
	if in.LinuxName != nil {
		in, out := &in.LinuxName, &out.LinuxName
		*out = new(string)
		**out = **in
	}
	if in.MacAddress != nil {
		in, out := &in.MacAddress, &out.MacAddress
		*out = new(string)
		**out = **in
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]MgmtVnicMembersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(string)
		**out = **in
	}
	if in.NetworkName != nil {
		in, out := &in.NetworkName, &out.NetworkName
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.NumRxDescriptors != nil {
		in, out := &in.NumRxDescriptors, &out.NumRxDescriptors
		*out = new(string)
		**out = **in
	}
	if in.NumTxDescriptors != nil {
		in, out := &in.NumTxDescriptors, &out.NumTxDescriptors
		*out = new(string)
		**out = **in
	}
	if in.PciID != nil {
		in, out := &in.PciID, &out.PciID
		*out = new(string)
		**out = **in
	}
	if in.PortUUID != nil {
		in, out := &in.PortUUID, &out.PortUUID
		*out = new(string)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(string)
		**out = **in
	}
	if in.VlanInterfaces != nil {
		in, out := &in.VlanInterfaces, &out.VlanInterfaces
		*out = make([]MgmtVnicVlanInterfacesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VnicNetworks != nil {
		in, out := &in.VnicNetworks, &out.VnicNetworks
		*out = make([]MgmtVnicVnicNetworksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VrfID != nil {
		in, out := &in.VrfID, &out.VrfID
		*out = new(string)
		**out = **in
	}
	if in.VrfRef != nil {
		in, out := &in.VrfRef, &out.VrfRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MgmtVnicInitParameters.
func (in *MgmtVnicInitParameters) DeepCopy() *MgmtVnicInitParameters {
	if in == nil {
		return nil
	}
	out := new(MgmtVnicInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MgmtVnicMembersInitParameters) DeepCopyInto(out *MgmtVnicMembersInitParameters) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(string)
		**out = **in
	}
	if in.IfName != nil {
		in, out := &in.IfName, &out.IfName
		*out = new(string)
		**out = **in
	}
	if in.MacAddress != nil {
		in, out := &in.MacAddress, &out.MacAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MgmtVnicMembersInitParameters.
func (in *MgmtVnicMembersInitParameters) DeepCopy() *MgmtVnicMembersInitParameters {
	if in == nil {
		return nil
	}
	out := new(MgmtVnicMembersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MgmtVnicMembersObservation) DeepCopyInto(out *MgmtVnicMembersObservation) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(string)
		**out = **in
	}
	if in.IfName != nil {
		in, out := &in.IfName, &out.IfName
		*out = new(string)
		**out = **in
	}
	if in.MacAddress != nil {
		in, out := &in.MacAddress, &out.MacAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MgmtVnicMembersObservation.
func (in *MgmtVnicMembersObservation) DeepCopy() *MgmtVnicMembersObservation {
	if in == nil {
		return nil
	}
	out := new(MgmtVnicMembersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MgmtVnicMembersParameters) DeepCopyInto(out *MgmtVnicMembersParameters) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(string)
		**out = **in
	}
	if in.IfName != nil {
		in, out := &in.IfName, &out.IfName
		*out = new(string)
		**out = **in
	}
	if in.MacAddress != nil {
		in, out := &in.MacAddress, &out.MacAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MgmtVnicMembersParameters.
func (in *MgmtVnicMembersParameters) DeepCopy() *MgmtVnicMembersParameters {
	if in == nil {
		return nil
	}
	out := new(MgmtVnicMembersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MgmtVnicObservation) DeepCopyInto(out *MgmtVnicObservation) {
	*out = *in
	if in.Adapter != nil {
		in, out := &in.Adapter, &out.Adapter
		*out = new(string)
		**out = **in
	}
	if in.AggregatorChgd != nil {
		in, out := &in.AggregatorChgd, &out.AggregatorChgd
		*out = new(string)
		**out = **in
	}
	if in.CanSeDpTakeover != nil {
		in, out := &in.CanSeDpTakeover, &out.CanSeDpTakeover
		*out = new(string)
		**out = **in
	}
	if in.Connected != nil {
		in, out := &in.Connected, &out.Connected
		*out = new(string)
		**out = **in
	}
	if in.DHCPEnabled != nil {
		in, out := &in.DHCPEnabled, &out.DHCPEnabled
		*out = new(string)
		**out = **in
	}
	if in.DelPending != nil {
		in, out := &in.DelPending, &out.DelPending
		*out = new(string)
		**out = **in
	}
	if in.DeleteVnic != nil {
		in, out := &in.DeleteVnic, &out.DeleteVnic
		*out = new(string)
		**out = **in
	}
	if in.DpDeletionDone != nil {
		in, out := &in.DpDeletionDone, &out.DpDeletionDone
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.IfName != nil {
		in, out := &in.IfName, &out.IfName
		*out = new(string)
		**out = **in
	}
	if in.Ip6AutocfgEnabled != nil {
		in, out := &in.Ip6AutocfgEnabled, &out.Ip6AutocfgEnabled
		*out = new(string)
		**out = **in
	}
	if in.IsAsm != nil {
		in, out := &in.IsAsm, &out.IsAsm
		*out = new(string)
		**out = **in
	}
	if in.IsAviInternalNetwork != nil {
		in, out := &in.IsAviInternalNetwork, &out.IsAviInternalNetwork
		*out = new(string)
		**out = **in
	}
	if in.IsHSM != nil {
		in, out := &in.IsHSM, &out.IsHSM
		*out = new(string)
		**out = **in
	}
	if in.IsMgmt != nil {
		in, out := &in.IsMgmt, &out.IsMgmt
		*out = new(string)
		**out = **in
	}
	if in.IsPortchannel != nil {
		in, out := &in.IsPortchannel, &out.IsPortchannel
		*out = new(string)
		**out = **in
	}
	if in.LinkUp != nil {
		in, out := &in.LinkUp, &out.LinkUp
		*out = new(string)
		**out = **in
	}
	if in.LinuxName != nil {
		in, out := &in.LinuxName, &out.LinuxName
		*out = new(string)
		**out = **in
	}
	if in.MacAddress != nil {
		in, out := &in.MacAddress, &out.MacAddress
		*out = new(string)
		**out = **in
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]MgmtVnicMembersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(string)
		**out = **in
	}
	if in.NetworkName != nil {
		in, out := &in.NetworkName, &out.NetworkName
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.NumRxDescriptors != nil {
		in, out := &in.NumRxDescriptors, &out.NumRxDescriptors
		*out = new(string)
		**out = **in
	}
	if in.NumTxDescriptors != nil {
		in, out := &in.NumTxDescriptors, &out.NumTxDescriptors
		*out = new(string)
		**out = **in
	}
	if in.PciID != nil {
		in, out := &in.PciID, &out.PciID
		*out = new(string)
		**out = **in
	}
	if in.PortUUID != nil {
		in, out := &in.PortUUID, &out.PortUUID
		*out = new(string)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(string)
		**out = **in
	}
	if in.VlanInterfaces != nil {
		in, out := &in.VlanInterfaces, &out.VlanInterfaces
		*out = make([]MgmtVnicVlanInterfacesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VnicNetworks != nil {
		in, out := &in.VnicNetworks, &out.VnicNetworks
		*out = make([]MgmtVnicVnicNetworksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VrfID != nil {
		in, out := &in.VrfID, &out.VrfID
		*out = new(string)
		**out = **in
	}
	if in.VrfRef != nil {
		in, out := &in.VrfRef, &out.VrfRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MgmtVnicObservation.
func (in *MgmtVnicObservation) DeepCopy() *MgmtVnicObservation {
	if in == nil {
		return nil
	}
	out := new(MgmtVnicObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MgmtVnicParameters) DeepCopyInto(out *MgmtVnicParameters) {
	*out = *in
	if in.Adapter != nil {
		in, out := &in.Adapter, &out.Adapter
		*out = new(string)
		**out = **in
	}
	if in.AggregatorChgd != nil {
		in, out := &in.AggregatorChgd, &out.AggregatorChgd
		*out = new(string)
		**out = **in
	}
	if in.CanSeDpTakeover != nil {
		in, out := &in.CanSeDpTakeover, &out.CanSeDpTakeover
		*out = new(string)
		**out = **in
	}
	if in.Connected != nil {
		in, out := &in.Connected, &out.Connected
		*out = new(string)
		**out = **in
	}
	if in.DHCPEnabled != nil {
		in, out := &in.DHCPEnabled, &out.DHCPEnabled
		*out = new(string)
		**out = **in
	}
	if in.DelPending != nil {
		in, out := &in.DelPending, &out.DelPending
		*out = new(string)
		**out = **in
	}
	if in.DeleteVnic != nil {
		in, out := &in.DeleteVnic, &out.DeleteVnic
		*out = new(string)
		**out = **in
	}
	if in.DpDeletionDone != nil {
		in, out := &in.DpDeletionDone, &out.DpDeletionDone
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.IfName != nil {
		in, out := &in.IfName, &out.IfName
		*out = new(string)
		**out = **in
	}
	if in.Ip6AutocfgEnabled != nil {
		in, out := &in.Ip6AutocfgEnabled, &out.Ip6AutocfgEnabled
		*out = new(string)
		**out = **in
	}
	if in.IsAsm != nil {
		in, out := &in.IsAsm, &out.IsAsm
		*out = new(string)
		**out = **in
	}
	if in.IsAviInternalNetwork != nil {
		in, out := &in.IsAviInternalNetwork, &out.IsAviInternalNetwork
		*out = new(string)
		**out = **in
	}
	if in.IsHSM != nil {
		in, out := &in.IsHSM, &out.IsHSM
		*out = new(string)
		**out = **in
	}
	if in.IsMgmt != nil {
		in, out := &in.IsMgmt, &out.IsMgmt
		*out = new(string)
		**out = **in
	}
	if in.IsPortchannel != nil {
		in, out := &in.IsPortchannel, &out.IsPortchannel
		*out = new(string)
		**out = **in
	}
	if in.LinkUp != nil {
		in, out := &in.LinkUp, &out.LinkUp
		*out = new(string)
		**out = **in
	}
	if in.LinuxName != nil {
		in, out := &in.LinuxName, &out.LinuxName
		*out = new(string)
		**out = **in
	}
	if in.MacAddress != nil {
		in, out := &in.MacAddress, &out.MacAddress
		*out = new(string)
		**out = **in
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]MgmtVnicMembersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(string)
		**out = **in
	}
	if in.NetworkName != nil {
		in, out := &in.NetworkName, &out.NetworkName
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.NumRxDescriptors != nil {
		in, out := &in.NumRxDescriptors, &out.NumRxDescriptors
		*out = new(string)
		**out = **in
	}
	if in.NumTxDescriptors != nil {
		in, out := &in.NumTxDescriptors, &out.NumTxDescriptors
		*out = new(string)
		**out = **in
	}
	if in.PciID != nil {
		in, out := &in.PciID, &out.PciID
		*out = new(string)
		**out = **in
	}
	if in.PortUUID != nil {
		in, out := &in.PortUUID, &out.PortUUID
		*out = new(string)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(string)
		**out = **in
	}
	if in.VlanInterfaces != nil {
		in, out := &in.VlanInterfaces, &out.VlanInterfaces
		*out = make([]MgmtVnicVlanInterfacesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VnicNetworks != nil {
		in, out := &in.VnicNetworks, &out.VnicNetworks
		*out = make([]MgmtVnicVnicNetworksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VrfID != nil {
		in, out := &in.VrfID, &out.VrfID
		*out = new(string)
		**out = **in
	}
	if in.VrfRef != nil {
		in, out := &in.VrfRef, &out.VrfRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MgmtVnicParameters.
func (in *MgmtVnicParameters) DeepCopy() *MgmtVnicParameters {
	if in == nil {
		return nil
	}
	out := new(MgmtVnicParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MgmtVnicVlanInterfacesInitParameters) DeepCopyInto(out *MgmtVnicVlanInterfacesInitParameters) {
	*out = *in
	if in.DHCPEnabled != nil {
		in, out := &in.DHCPEnabled, &out.DHCPEnabled
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.IfName != nil {
		in, out := &in.IfName, &out.IfName
		*out = new(string)
		**out = **in
	}
	if in.Ip6AutocfgEnabled != nil {
		in, out := &in.Ip6AutocfgEnabled, &out.Ip6AutocfgEnabled
		*out = new(string)
		**out = **in
	}
	if in.IsMgmt != nil {
		in, out := &in.IsMgmt, &out.IsMgmt
		*out = new(string)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(string)
		**out = **in
	}
	if in.VnicNetworks != nil {
		in, out := &in.VnicNetworks, &out.VnicNetworks
		*out = make([]VlanInterfacesVnicNetworksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VrfRef != nil {
		in, out := &in.VrfRef, &out.VrfRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MgmtVnicVlanInterfacesInitParameters.
func (in *MgmtVnicVlanInterfacesInitParameters) DeepCopy() *MgmtVnicVlanInterfacesInitParameters {
	if in == nil {
		return nil
	}
	out := new(MgmtVnicVlanInterfacesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MgmtVnicVlanInterfacesObservation) DeepCopyInto(out *MgmtVnicVlanInterfacesObservation) {
	*out = *in
	if in.DHCPEnabled != nil {
		in, out := &in.DHCPEnabled, &out.DHCPEnabled
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.IfName != nil {
		in, out := &in.IfName, &out.IfName
		*out = new(string)
		**out = **in
	}
	if in.Ip6AutocfgEnabled != nil {
		in, out := &in.Ip6AutocfgEnabled, &out.Ip6AutocfgEnabled
		*out = new(string)
		**out = **in
	}
	if in.IsMgmt != nil {
		in, out := &in.IsMgmt, &out.IsMgmt
		*out = new(string)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(string)
		**out = **in
	}
	if in.VnicNetworks != nil {
		in, out := &in.VnicNetworks, &out.VnicNetworks
		*out = make([]VlanInterfacesVnicNetworksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VrfRef != nil {
		in, out := &in.VrfRef, &out.VrfRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MgmtVnicVlanInterfacesObservation.
func (in *MgmtVnicVlanInterfacesObservation) DeepCopy() *MgmtVnicVlanInterfacesObservation {
	if in == nil {
		return nil
	}
	out := new(MgmtVnicVlanInterfacesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MgmtVnicVlanInterfacesParameters) DeepCopyInto(out *MgmtVnicVlanInterfacesParameters) {
	*out = *in
	if in.DHCPEnabled != nil {
		in, out := &in.DHCPEnabled, &out.DHCPEnabled
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.IfName != nil {
		in, out := &in.IfName, &out.IfName
		*out = new(string)
		**out = **in
	}
	if in.Ip6AutocfgEnabled != nil {
		in, out := &in.Ip6AutocfgEnabled, &out.Ip6AutocfgEnabled
		*out = new(string)
		**out = **in
	}
	if in.IsMgmt != nil {
		in, out := &in.IsMgmt, &out.IsMgmt
		*out = new(string)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(string)
		**out = **in
	}
	if in.VnicNetworks != nil {
		in, out := &in.VnicNetworks, &out.VnicNetworks
		*out = make([]VlanInterfacesVnicNetworksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VrfRef != nil {
		in, out := &in.VrfRef, &out.VrfRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MgmtVnicVlanInterfacesParameters.
func (in *MgmtVnicVlanInterfacesParameters) DeepCopy() *MgmtVnicVlanInterfacesParameters {
	if in == nil {
		return nil
	}
	out := new(MgmtVnicVlanInterfacesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MgmtVnicVnicNetworksIPIPAddrInitParameters) DeepCopyInto(out *MgmtVnicVnicNetworksIPIPAddrInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MgmtVnicVnicNetworksIPIPAddrInitParameters.
func (in *MgmtVnicVnicNetworksIPIPAddrInitParameters) DeepCopy() *MgmtVnicVnicNetworksIPIPAddrInitParameters {
	if in == nil {
		return nil
	}
	out := new(MgmtVnicVnicNetworksIPIPAddrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MgmtVnicVnicNetworksIPIPAddrObservation) DeepCopyInto(out *MgmtVnicVnicNetworksIPIPAddrObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MgmtVnicVnicNetworksIPIPAddrObservation.
func (in *MgmtVnicVnicNetworksIPIPAddrObservation) DeepCopy() *MgmtVnicVnicNetworksIPIPAddrObservation {
	if in == nil {
		return nil
	}
	out := new(MgmtVnicVnicNetworksIPIPAddrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MgmtVnicVnicNetworksIPIPAddrParameters) DeepCopyInto(out *MgmtVnicVnicNetworksIPIPAddrParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MgmtVnicVnicNetworksIPIPAddrParameters.
func (in *MgmtVnicVnicNetworksIPIPAddrParameters) DeepCopy() *MgmtVnicVnicNetworksIPIPAddrParameters {
	if in == nil {
		return nil
	}
	out := new(MgmtVnicVnicNetworksIPIPAddrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MgmtVnicVnicNetworksIPInitParameters) DeepCopyInto(out *MgmtVnicVnicNetworksIPInitParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]MgmtVnicVnicNetworksIPIPAddrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MgmtVnicVnicNetworksIPInitParameters.
func (in *MgmtVnicVnicNetworksIPInitParameters) DeepCopy() *MgmtVnicVnicNetworksIPInitParameters {
	if in == nil {
		return nil
	}
	out := new(MgmtVnicVnicNetworksIPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MgmtVnicVnicNetworksIPObservation) DeepCopyInto(out *MgmtVnicVnicNetworksIPObservation) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]MgmtVnicVnicNetworksIPIPAddrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MgmtVnicVnicNetworksIPObservation.
func (in *MgmtVnicVnicNetworksIPObservation) DeepCopy() *MgmtVnicVnicNetworksIPObservation {
	if in == nil {
		return nil
	}
	out := new(MgmtVnicVnicNetworksIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MgmtVnicVnicNetworksIPParameters) DeepCopyInto(out *MgmtVnicVnicNetworksIPParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]MgmtVnicVnicNetworksIPIPAddrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MgmtVnicVnicNetworksIPParameters.
func (in *MgmtVnicVnicNetworksIPParameters) DeepCopy() *MgmtVnicVnicNetworksIPParameters {
	if in == nil {
		return nil
	}
	out := new(MgmtVnicVnicNetworksIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MgmtVnicVnicNetworksInitParameters) DeepCopyInto(out *MgmtVnicVnicNetworksInitParameters) {
	*out = *in
	if in.CtlrAlloc != nil {
		in, out := &in.CtlrAlloc, &out.CtlrAlloc
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = make([]MgmtVnicVnicNetworksIPInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MgmtVnicVnicNetworksInitParameters.
func (in *MgmtVnicVnicNetworksInitParameters) DeepCopy() *MgmtVnicVnicNetworksInitParameters {
	if in == nil {
		return nil
	}
	out := new(MgmtVnicVnicNetworksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MgmtVnicVnicNetworksObservation) DeepCopyInto(out *MgmtVnicVnicNetworksObservation) {
	*out = *in
	if in.CtlrAlloc != nil {
		in, out := &in.CtlrAlloc, &out.CtlrAlloc
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = make([]MgmtVnicVnicNetworksIPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MgmtVnicVnicNetworksObservation.
func (in *MgmtVnicVnicNetworksObservation) DeepCopy() *MgmtVnicVnicNetworksObservation {
	if in == nil {
		return nil
	}
	out := new(MgmtVnicVnicNetworksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MgmtVnicVnicNetworksParameters) DeepCopyInto(out *MgmtVnicVnicNetworksParameters) {
	*out = *in
	if in.CtlrAlloc != nil {
		in, out := &in.CtlrAlloc, &out.CtlrAlloc
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = make([]MgmtVnicVnicNetworksIPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MgmtVnicVnicNetworksParameters.
func (in *MgmtVnicVnicNetworksParameters) DeepCopy() *MgmtVnicVnicNetworksParameters {
	if in == nil {
		return nil
	}
	out := new(MgmtVnicVnicNetworksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MxRecordsInitParameters) DeepCopyInto(out *MxRecordsInitParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MxRecordsInitParameters.
func (in *MxRecordsInitParameters) DeepCopy() *MxRecordsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MxRecordsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MxRecordsObservation) DeepCopyInto(out *MxRecordsObservation) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MxRecordsObservation.
func (in *MxRecordsObservation) DeepCopy() *MxRecordsObservation {
	if in == nil {
		return nil
	}
	out := new(MxRecordsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MxRecordsParameters) DeepCopyInto(out *MxRecordsParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MxRecordsParameters.
func (in *MxRecordsParameters) DeepCopy() *MxRecordsParameters {
	if in == nil {
		return nil
	}
	out := new(MxRecordsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworksInitParameters) DeepCopyInto(out *NetworksInitParameters) {
	*out = *in
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.ServerFilter != nil {
		in, out := &in.ServerFilter, &out.ServerFilter
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworksInitParameters.
func (in *NetworksInitParameters) DeepCopy() *NetworksInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworksObservation) DeepCopyInto(out *NetworksObservation) {
	*out = *in
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.ServerFilter != nil {
		in, out := &in.ServerFilter, &out.ServerFilter
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworksObservation.
func (in *NetworksObservation) DeepCopy() *NetworksObservation {
	if in == nil {
		return nil
	}
	out := new(NetworksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworksParameters) DeepCopyInto(out *NetworksParameters) {
	*out = *in
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.ServerFilter != nil {
		in, out := &in.ServerFilter, &out.ServerFilter
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworksParameters.
func (in *NetworksParameters) DeepCopy() *NetworksParameters {
	if in == nil {
		return nil
	}
	out := new(NetworksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NsIPAddressInitParameters) DeepCopyInto(out *NsIPAddressInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NsIPAddressInitParameters.
func (in *NsIPAddressInitParameters) DeepCopy() *NsIPAddressInitParameters {
	if in == nil {
		return nil
	}
	out := new(NsIPAddressInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NsIPAddressObservation) DeepCopyInto(out *NsIPAddressObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NsIPAddressObservation.
func (in *NsIPAddressObservation) DeepCopy() *NsIPAddressObservation {
	if in == nil {
		return nil
	}
	out := new(NsIPAddressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NsIPAddressParameters) DeepCopyInto(out *NsIPAddressParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NsIPAddressParameters.
func (in *NsIPAddressParameters) DeepCopy() *NsIPAddressParameters {
	if in == nil {
		return nil
	}
	out := new(NsIPAddressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NsInitParameters) DeepCopyInto(out *NsInitParameters) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = make([]NsIPAddressInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ip6Address != nil {
		in, out := &in.Ip6Address, &out.Ip6Address
		*out = make([]NsIp6AddressInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Nsname != nil {
		in, out := &in.Nsname, &out.Nsname
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NsInitParameters.
func (in *NsInitParameters) DeepCopy() *NsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NsIp6AddressInitParameters) DeepCopyInto(out *NsIp6AddressInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NsIp6AddressInitParameters.
func (in *NsIp6AddressInitParameters) DeepCopy() *NsIp6AddressInitParameters {
	if in == nil {
		return nil
	}
	out := new(NsIp6AddressInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NsIp6AddressObservation) DeepCopyInto(out *NsIp6AddressObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NsIp6AddressObservation.
func (in *NsIp6AddressObservation) DeepCopy() *NsIp6AddressObservation {
	if in == nil {
		return nil
	}
	out := new(NsIp6AddressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NsIp6AddressParameters) DeepCopyInto(out *NsIp6AddressParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NsIp6AddressParameters.
func (in *NsIp6AddressParameters) DeepCopy() *NsIp6AddressParameters {
	if in == nil {
		return nil
	}
	out := new(NsIp6AddressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NsObservation) DeepCopyInto(out *NsObservation) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = make([]NsIPAddressObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ip6Address != nil {
		in, out := &in.Ip6Address, &out.Ip6Address
		*out = make([]NsIp6AddressObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Nsname != nil {
		in, out := &in.Nsname, &out.Nsname
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NsObservation.
func (in *NsObservation) DeepCopy() *NsObservation {
	if in == nil {
		return nil
	}
	out := new(NsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NsParameters) DeepCopyInto(out *NsParameters) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = make([]NsIPAddressParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ip6Address != nil {
		in, out := &in.Ip6Address, &out.Ip6Address
		*out = make([]NsIp6AddressParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Nsname != nil {
		in, out := &in.Nsname, &out.Nsname
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NsParameters.
func (in *NsParameters) DeepCopy() *NsParameters {
	if in == nil {
		return nil
	}
	out := new(NsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NsxtClustersInitParameters) DeepCopyInto(out *NsxtClustersInitParameters) {
	*out = *in
	if in.ClusterIds != nil {
		in, out := &in.ClusterIds, &out.ClusterIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NsxtClustersInitParameters.
func (in *NsxtClustersInitParameters) DeepCopy() *NsxtClustersInitParameters {
	if in == nil {
		return nil
	}
	out := new(NsxtClustersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NsxtClustersObservation) DeepCopyInto(out *NsxtClustersObservation) {
	*out = *in
	if in.ClusterIds != nil {
		in, out := &in.ClusterIds, &out.ClusterIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NsxtClustersObservation.
func (in *NsxtClustersObservation) DeepCopy() *NsxtClustersObservation {
	if in == nil {
		return nil
	}
	out := new(NsxtClustersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NsxtClustersParameters) DeepCopyInto(out *NsxtClustersParameters) {
	*out = *in
	if in.ClusterIds != nil {
		in, out := &in.ClusterIds, &out.ClusterIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NsxtClustersParameters.
func (in *NsxtClustersParameters) DeepCopy() *NsxtClustersParameters {
	if in == nil {
		return nil
	}
	out := new(NsxtClustersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NsxtDatastoresInitParameters) DeepCopyInto(out *NsxtDatastoresInitParameters) {
	*out = *in
	if in.DsIds != nil {
		in, out := &in.DsIds, &out.DsIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NsxtDatastoresInitParameters.
func (in *NsxtDatastoresInitParameters) DeepCopy() *NsxtDatastoresInitParameters {
	if in == nil {
		return nil
	}
	out := new(NsxtDatastoresInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NsxtDatastoresObservation) DeepCopyInto(out *NsxtDatastoresObservation) {
	*out = *in
	if in.DsIds != nil {
		in, out := &in.DsIds, &out.DsIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NsxtDatastoresObservation.
func (in *NsxtDatastoresObservation) DeepCopy() *NsxtDatastoresObservation {
	if in == nil {
		return nil
	}
	out := new(NsxtDatastoresObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NsxtDatastoresParameters) DeepCopyInto(out *NsxtDatastoresParameters) {
	*out = *in
	if in.DsIds != nil {
		in, out := &in.DsIds, &out.DsIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NsxtDatastoresParameters.
func (in *NsxtDatastoresParameters) DeepCopy() *NsxtDatastoresParameters {
	if in == nil {
		return nil
	}
	out := new(NsxtDatastoresParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NsxtHostsInitParameters) DeepCopyInto(out *NsxtHostsInitParameters) {
	*out = *in
	if in.HostIds != nil {
		in, out := &in.HostIds, &out.HostIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NsxtHostsInitParameters.
func (in *NsxtHostsInitParameters) DeepCopy() *NsxtHostsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NsxtHostsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NsxtHostsObservation) DeepCopyInto(out *NsxtHostsObservation) {
	*out = *in
	if in.HostIds != nil {
		in, out := &in.HostIds, &out.HostIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NsxtHostsObservation.
func (in *NsxtHostsObservation) DeepCopy() *NsxtHostsObservation {
	if in == nil {
		return nil
	}
	out := new(NsxtHostsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NsxtHostsParameters) DeepCopyInto(out *NsxtHostsParameters) {
	*out = *in
	if in.HostIds != nil {
		in, out := &in.HostIds, &out.HostIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NsxtHostsParameters.
func (in *NsxtHostsParameters) DeepCopy() *NsxtHostsParameters {
	if in == nil {
		return nil
	}
	out := new(NsxtHostsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthSettingsInitParameters) DeepCopyInto(out *OauthSettingsInitParameters) {
	*out = *in
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make([]AppSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthProfileRef != nil {
		in, out := &in.AuthProfileRef, &out.AuthProfileRef
		*out = new(string)
		**out = **in
	}
	if in.ResourceServer != nil {
		in, out := &in.ResourceServer, &out.ResourceServer
		*out = make([]ResourceServerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthSettingsInitParameters.
func (in *OauthSettingsInitParameters) DeepCopy() *OauthSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OauthSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthSettingsObservation) DeepCopyInto(out *OauthSettingsObservation) {
	*out = *in
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make([]AppSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthProfileRef != nil {
		in, out := &in.AuthProfileRef, &out.AuthProfileRef
		*out = new(string)
		**out = **in
	}
	if in.ResourceServer != nil {
		in, out := &in.ResourceServer, &out.ResourceServer
		*out = make([]ResourceServerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthSettingsObservation.
func (in *OauthSettingsObservation) DeepCopy() *OauthSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(OauthSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthSettingsParameters) DeepCopyInto(out *OauthSettingsParameters) {
	*out = *in
	if in.AppSettings != nil {
		in, out := &in.AppSettings, &out.AppSettings
		*out = make([]AppSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthProfileRef != nil {
		in, out := &in.AuthProfileRef, &out.AuthProfileRef
		*out = new(string)
		**out = **in
	}
	if in.ResourceServer != nil {
		in, out := &in.ResourceServer, &out.ResourceServer
		*out = make([]ResourceServerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthSettingsParameters.
func (in *OauthSettingsParameters) DeepCopy() *OauthSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(OauthSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthVsConfigInitParameters) DeepCopyInto(out *OauthVsConfigInitParameters) {
	*out = *in
	if in.CookieName != nil {
		in, out := &in.CookieName, &out.CookieName
		*out = new(string)
		**out = **in
	}
	if in.CookieTimeout != nil {
		in, out := &in.CookieTimeout, &out.CookieTimeout
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = make([]KeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LogoutURI != nil {
		in, out := &in.LogoutURI, &out.LogoutURI
		*out = new(string)
		**out = **in
	}
	if in.OauthSettings != nil {
		in, out := &in.OauthSettings, &out.OauthSettings
		*out = make([]OauthSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PostLogoutRedirectURI != nil {
		in, out := &in.PostLogoutRedirectURI, &out.PostLogoutRedirectURI
		*out = new(string)
		**out = **in
	}
	if in.RedirectURI != nil {
		in, out := &in.RedirectURI, &out.RedirectURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthVsConfigInitParameters.
func (in *OauthVsConfigInitParameters) DeepCopy() *OauthVsConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(OauthVsConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthVsConfigObservation) DeepCopyInto(out *OauthVsConfigObservation) {
	*out = *in
	if in.CookieName != nil {
		in, out := &in.CookieName, &out.CookieName
		*out = new(string)
		**out = **in
	}
	if in.CookieTimeout != nil {
		in, out := &in.CookieTimeout, &out.CookieTimeout
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = make([]KeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LogoutURI != nil {
		in, out := &in.LogoutURI, &out.LogoutURI
		*out = new(string)
		**out = **in
	}
	if in.OauthSettings != nil {
		in, out := &in.OauthSettings, &out.OauthSettings
		*out = make([]OauthSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PostLogoutRedirectURI != nil {
		in, out := &in.PostLogoutRedirectURI, &out.PostLogoutRedirectURI
		*out = new(string)
		**out = **in
	}
	if in.RedirectURI != nil {
		in, out := &in.RedirectURI, &out.RedirectURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthVsConfigObservation.
func (in *OauthVsConfigObservation) DeepCopy() *OauthVsConfigObservation {
	if in == nil {
		return nil
	}
	out := new(OauthVsConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthVsConfigParameters) DeepCopyInto(out *OauthVsConfigParameters) {
	*out = *in
	if in.CookieName != nil {
		in, out := &in.CookieName, &out.CookieName
		*out = new(string)
		**out = **in
	}
	if in.CookieTimeout != nil {
		in, out := &in.CookieTimeout, &out.CookieTimeout
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = make([]KeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LogoutURI != nil {
		in, out := &in.LogoutURI, &out.LogoutURI
		*out = new(string)
		**out = **in
	}
	if in.OauthSettings != nil {
		in, out := &in.OauthSettings, &out.OauthSettings
		*out = make([]OauthSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PostLogoutRedirectURI != nil {
		in, out := &in.PostLogoutRedirectURI, &out.PostLogoutRedirectURI
		*out = new(string)
		**out = **in
	}
	if in.RedirectURI != nil {
		in, out := &in.RedirectURI, &out.RedirectURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthVsConfigParameters.
func (in *OauthVsConfigParameters) DeepCopy() *OauthVsConfigParameters {
	if in == nil {
		return nil
	}
	out := new(OauthVsConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjsyncConfigInitParameters) DeepCopyInto(out *ObjsyncConfigInitParameters) {
	*out = *in
	if in.ObjsyncCPULimit != nil {
		in, out := &in.ObjsyncCPULimit, &out.ObjsyncCPULimit
		*out = new(string)
		**out = **in
	}
	if in.ObjsyncHubElectInterval != nil {
		in, out := &in.ObjsyncHubElectInterval, &out.ObjsyncHubElectInterval
		*out = new(string)
		**out = **in
	}
	if in.ObjsyncReconcileInterval != nil {
		in, out := &in.ObjsyncReconcileInterval, &out.ObjsyncReconcileInterval
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjsyncConfigInitParameters.
func (in *ObjsyncConfigInitParameters) DeepCopy() *ObjsyncConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ObjsyncConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjsyncConfigObservation) DeepCopyInto(out *ObjsyncConfigObservation) {
	*out = *in
	if in.ObjsyncCPULimit != nil {
		in, out := &in.ObjsyncCPULimit, &out.ObjsyncCPULimit
		*out = new(string)
		**out = **in
	}
	if in.ObjsyncHubElectInterval != nil {
		in, out := &in.ObjsyncHubElectInterval, &out.ObjsyncHubElectInterval
		*out = new(string)
		**out = **in
	}
	if in.ObjsyncReconcileInterval != nil {
		in, out := &in.ObjsyncReconcileInterval, &out.ObjsyncReconcileInterval
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjsyncConfigObservation.
func (in *ObjsyncConfigObservation) DeepCopy() *ObjsyncConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ObjsyncConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjsyncConfigParameters) DeepCopyInto(out *ObjsyncConfigParameters) {
	*out = *in
	if in.ObjsyncCPULimit != nil {
		in, out := &in.ObjsyncCPULimit, &out.ObjsyncCPULimit
		*out = new(string)
		**out = **in
	}
	if in.ObjsyncHubElectInterval != nil {
		in, out := &in.ObjsyncHubElectInterval, &out.ObjsyncHubElectInterval
		*out = new(string)
		**out = **in
	}
	if in.ObjsyncReconcileInterval != nil {
		in, out := &in.ObjsyncReconcileInterval, &out.ObjsyncReconcileInterval
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjsyncConfigParameters.
func (in *ObjsyncConfigParameters) DeepCopy() *ObjsyncConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ObjsyncConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OidcConfigInitParameters) DeepCopyInto(out *OidcConfigInitParameters) {
	*out = *in
	if in.OidcEnable != nil {
		in, out := &in.OidcEnable, &out.OidcEnable
		*out = new(string)
		**out = **in
	}
	if in.Profile != nil {
		in, out := &in.Profile, &out.Profile
		*out = new(string)
		**out = **in
	}
	if in.Userinfo != nil {
		in, out := &in.Userinfo, &out.Userinfo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OidcConfigInitParameters.
func (in *OidcConfigInitParameters) DeepCopy() *OidcConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(OidcConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OidcConfigObservation) DeepCopyInto(out *OidcConfigObservation) {
	*out = *in
	if in.OidcEnable != nil {
		in, out := &in.OidcEnable, &out.OidcEnable
		*out = new(string)
		**out = **in
	}
	if in.Profile != nil {
		in, out := &in.Profile, &out.Profile
		*out = new(string)
		**out = **in
	}
	if in.Userinfo != nil {
		in, out := &in.Userinfo, &out.Userinfo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OidcConfigObservation.
func (in *OidcConfigObservation) DeepCopy() *OidcConfigObservation {
	if in == nil {
		return nil
	}
	out := new(OidcConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OidcConfigParameters) DeepCopyInto(out *OidcConfigParameters) {
	*out = *in
	if in.OidcEnable != nil {
		in, out := &in.OidcEnable, &out.OidcEnable
		*out = new(string)
		**out = **in
	}
	if in.Profile != nil {
		in, out := &in.Profile, &out.Profile
		*out = new(string)
		**out = **in
	}
	if in.Userinfo != nil {
		in, out := &in.Userinfo, &out.Userinfo
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OidcConfigParameters.
func (in *OidcConfigParameters) DeepCopy() *OidcConfigParameters {
	if in == nil {
		return nil
	}
	out := new(OidcConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpaqueTokenParamsInitParameters) DeepCopyInto(out *OpaqueTokenParamsInitParameters) {
	*out = *in
	if in.ServerID != nil {
		in, out := &in.ServerID, &out.ServerID
		*out = new(string)
		**out = **in
	}
	out.ServerSecretSecretRef = in.ServerSecretSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpaqueTokenParamsInitParameters.
func (in *OpaqueTokenParamsInitParameters) DeepCopy() *OpaqueTokenParamsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OpaqueTokenParamsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpaqueTokenParamsObservation) DeepCopyInto(out *OpaqueTokenParamsObservation) {
	*out = *in
	if in.ServerID != nil {
		in, out := &in.ServerID, &out.ServerID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpaqueTokenParamsObservation.
func (in *OpaqueTokenParamsObservation) DeepCopy() *OpaqueTokenParamsObservation {
	if in == nil {
		return nil
	}
	out := new(OpaqueTokenParamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpaqueTokenParamsParameters) DeepCopyInto(out *OpaqueTokenParamsParameters) {
	*out = *in
	if in.ServerID != nil {
		in, out := &in.ServerID, &out.ServerID
		*out = new(string)
		**out = **in
	}
	out.ServerSecretSecretRef = in.ServerSecretSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpaqueTokenParamsParameters.
func (in *OpaqueTokenParamsParameters) DeepCopy() *OpaqueTokenParamsParameters {
	if in == nil {
		return nil
	}
	out := new(OpaqueTokenParamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PairsInitParameters) DeepCopyInto(out *PairsInitParameters) {
	*out = *in
	if in.ReplacementString != nil {
		in, out := &in.ReplacementString, &out.ReplacementString
		*out = make([]ReplacementStringInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SearchString != nil {
		in, out := &in.SearchString, &out.SearchString
		*out = make([]SearchStringInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PairsInitParameters.
func (in *PairsInitParameters) DeepCopy() *PairsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PairsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PairsObservation) DeepCopyInto(out *PairsObservation) {
	*out = *in
	if in.ReplacementString != nil {
		in, out := &in.ReplacementString, &out.ReplacementString
		*out = make([]ReplacementStringObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SearchString != nil {
		in, out := &in.SearchString, &out.SearchString
		*out = make([]SearchStringObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PairsObservation.
func (in *PairsObservation) DeepCopy() *PairsObservation {
	if in == nil {
		return nil
	}
	out := new(PairsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PairsParameters) DeepCopyInto(out *PairsParameters) {
	*out = *in
	if in.ReplacementString != nil {
		in, out := &in.ReplacementString, &out.ReplacementString
		*out = make([]ReplacementStringParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SearchString != nil {
		in, out := &in.SearchString, &out.SearchString
		*out = make([]SearchStringParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PairsParameters.
func (in *PairsParameters) DeepCopy() *PairsParameters {
	if in == nil {
		return nil
	}
	out := new(PairsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathInitParameters) DeepCopyInto(out *PathInitParameters) {
	*out = *in
	if in.Tokens != nil {
		in, out := &in.Tokens, &out.Tokens
		*out = make([]PathTokensInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathInitParameters.
func (in *PathInitParameters) DeepCopy() *PathInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathObservation) DeepCopyInto(out *PathObservation) {
	*out = *in
	if in.Tokens != nil {
		in, out := &in.Tokens, &out.Tokens
		*out = make([]PathTokensObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathObservation.
func (in *PathObservation) DeepCopy() *PathObservation {
	if in == nil {
		return nil
	}
	out := new(PathObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathParameters) DeepCopyInto(out *PathParameters) {
	*out = *in
	if in.Tokens != nil {
		in, out := &in.Tokens, &out.Tokens
		*out = make([]PathTokensParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathParameters.
func (in *PathParameters) DeepCopy() *PathParameters {
	if in == nil {
		return nil
	}
	out := new(PathParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathTokensInitParameters) DeepCopyInto(out *PathTokensInitParameters) {
	*out = *in
	if in.EndIndex != nil {
		in, out := &in.EndIndex, &out.EndIndex
		*out = new(string)
		**out = **in
	}
	if in.StartIndex != nil {
		in, out := &in.StartIndex, &out.StartIndex
		*out = new(string)
		**out = **in
	}
	if in.StrValue != nil {
		in, out := &in.StrValue, &out.StrValue
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathTokensInitParameters.
func (in *PathTokensInitParameters) DeepCopy() *PathTokensInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathTokensInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathTokensObservation) DeepCopyInto(out *PathTokensObservation) {
	*out = *in
	if in.EndIndex != nil {
		in, out := &in.EndIndex, &out.EndIndex
		*out = new(string)
		**out = **in
	}
	if in.StartIndex != nil {
		in, out := &in.StartIndex, &out.StartIndex
		*out = new(string)
		**out = **in
	}
	if in.StrValue != nil {
		in, out := &in.StrValue, &out.StrValue
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathTokensObservation.
func (in *PathTokensObservation) DeepCopy() *PathTokensObservation {
	if in == nil {
		return nil
	}
	out := new(PathTokensObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathTokensParameters) DeepCopyInto(out *PathTokensParameters) {
	*out = *in
	if in.EndIndex != nil {
		in, out := &in.EndIndex, &out.EndIndex
		*out = new(string)
		**out = **in
	}
	if in.StartIndex != nil {
		in, out := &in.StartIndex, &out.StartIndex
		*out = new(string)
		**out = **in
	}
	if in.StrValue != nil {
		in, out := &in.StrValue, &out.StrValue
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathTokensParameters.
func (in *PathTokensParameters) DeepCopy() *PathTokensParameters {
	if in == nil {
		return nil
	}
	out := new(PathTokensParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerformanceLimitsInitParameters) DeepCopyInto(out *PerformanceLimitsInitParameters) {
	*out = *in
	if in.MaxConcurrentConnections != nil {
		in, out := &in.MaxConcurrentConnections, &out.MaxConcurrentConnections
		*out = new(string)
		**out = **in
	}
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerformanceLimitsInitParameters.
func (in *PerformanceLimitsInitParameters) DeepCopy() *PerformanceLimitsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PerformanceLimitsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerformanceLimitsObservation) DeepCopyInto(out *PerformanceLimitsObservation) {
	*out = *in
	if in.MaxConcurrentConnections != nil {
		in, out := &in.MaxConcurrentConnections, &out.MaxConcurrentConnections
		*out = new(string)
		**out = **in
	}
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerformanceLimitsObservation.
func (in *PerformanceLimitsObservation) DeepCopy() *PerformanceLimitsObservation {
	if in == nil {
		return nil
	}
	out := new(PerformanceLimitsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerformanceLimitsParameters) DeepCopyInto(out *PerformanceLimitsParameters) {
	*out = *in
	if in.MaxConcurrentConnections != nil {
		in, out := &in.MaxConcurrentConnections, &out.MaxConcurrentConnections
		*out = new(string)
		**out = **in
	}
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerformanceLimitsParameters.
func (in *PerformanceLimitsParameters) DeepCopy() *PerformanceLimitsParameters {
	if in == nil {
		return nil
	}
	out := new(PerformanceLimitsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementNetworksInitParameters) DeepCopyInto(out *PlacementNetworksInitParameters) {
	*out = *in
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]SubnetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementNetworksInitParameters.
func (in *PlacementNetworksInitParameters) DeepCopy() *PlacementNetworksInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementNetworksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementNetworksObservation) DeepCopyInto(out *PlacementNetworksObservation) {
	*out = *in
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]SubnetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementNetworksObservation.
func (in *PlacementNetworksObservation) DeepCopy() *PlacementNetworksObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementNetworksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementNetworksParameters) DeepCopyInto(out *PlacementNetworksParameters) {
	*out = *in
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]SubnetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementNetworksParameters.
func (in *PlacementNetworksParameters) DeepCopy() *PlacementNetworksParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementNetworksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementNetworksSubnet6IPAddrInitParameters) DeepCopyInto(out *PlacementNetworksSubnet6IPAddrInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementNetworksSubnet6IPAddrInitParameters.
func (in *PlacementNetworksSubnet6IPAddrInitParameters) DeepCopy() *PlacementNetworksSubnet6IPAddrInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementNetworksSubnet6IPAddrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementNetworksSubnet6IPAddrObservation) DeepCopyInto(out *PlacementNetworksSubnet6IPAddrObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementNetworksSubnet6IPAddrObservation.
func (in *PlacementNetworksSubnet6IPAddrObservation) DeepCopy() *PlacementNetworksSubnet6IPAddrObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementNetworksSubnet6IPAddrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementNetworksSubnet6IPAddrParameters) DeepCopyInto(out *PlacementNetworksSubnet6IPAddrParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementNetworksSubnet6IPAddrParameters.
func (in *PlacementNetworksSubnet6IPAddrParameters) DeepCopy() *PlacementNetworksSubnet6IPAddrParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementNetworksSubnet6IPAddrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementNetworksSubnet6InitParameters) DeepCopyInto(out *PlacementNetworksSubnet6InitParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]PlacementNetworksSubnet6IPAddrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementNetworksSubnet6InitParameters.
func (in *PlacementNetworksSubnet6InitParameters) DeepCopy() *PlacementNetworksSubnet6InitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementNetworksSubnet6InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementNetworksSubnet6Observation) DeepCopyInto(out *PlacementNetworksSubnet6Observation) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]PlacementNetworksSubnet6IPAddrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementNetworksSubnet6Observation.
func (in *PlacementNetworksSubnet6Observation) DeepCopy() *PlacementNetworksSubnet6Observation {
	if in == nil {
		return nil
	}
	out := new(PlacementNetworksSubnet6Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementNetworksSubnet6Parameters) DeepCopyInto(out *PlacementNetworksSubnet6Parameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]PlacementNetworksSubnet6IPAddrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementNetworksSubnet6Parameters.
func (in *PlacementNetworksSubnet6Parameters) DeepCopy() *PlacementNetworksSubnet6Parameters {
	if in == nil {
		return nil
	}
	out := new(PlacementNetworksSubnet6Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementNetworksSubnetIPAddrInitParameters) DeepCopyInto(out *PlacementNetworksSubnetIPAddrInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementNetworksSubnetIPAddrInitParameters.
func (in *PlacementNetworksSubnetIPAddrInitParameters) DeepCopy() *PlacementNetworksSubnetIPAddrInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementNetworksSubnetIPAddrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementNetworksSubnetIPAddrObservation) DeepCopyInto(out *PlacementNetworksSubnetIPAddrObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementNetworksSubnetIPAddrObservation.
func (in *PlacementNetworksSubnetIPAddrObservation) DeepCopy() *PlacementNetworksSubnetIPAddrObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementNetworksSubnetIPAddrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementNetworksSubnetIPAddrParameters) DeepCopyInto(out *PlacementNetworksSubnetIPAddrParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementNetworksSubnetIPAddrParameters.
func (in *PlacementNetworksSubnetIPAddrParameters) DeepCopy() *PlacementNetworksSubnetIPAddrParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementNetworksSubnetIPAddrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementNetworksSubnetInitParameters) DeepCopyInto(out *PlacementNetworksSubnetInitParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]PlacementNetworksSubnetIPAddrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementNetworksSubnetInitParameters.
func (in *PlacementNetworksSubnetInitParameters) DeepCopy() *PlacementNetworksSubnetInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementNetworksSubnetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementNetworksSubnetObservation) DeepCopyInto(out *PlacementNetworksSubnetObservation) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]PlacementNetworksSubnetIPAddrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementNetworksSubnetObservation.
func (in *PlacementNetworksSubnetObservation) DeepCopy() *PlacementNetworksSubnetObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementNetworksSubnetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementNetworksSubnetParameters) DeepCopyInto(out *PlacementNetworksSubnetParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]PlacementNetworksSubnetIPAddrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementNetworksSubnetParameters.
func (in *PlacementNetworksSubnetParameters) DeepCopy() *PlacementNetworksSubnetParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementNetworksSubnetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyInitParameters) DeepCopyInto(out *PolicyInitParameters) {
	*out = *in
	if in.DNSCooldown != nil {
		in, out := &in.DNSCooldown, &out.DNSCooldown
		*out = new(string)
		**out = **in
	}
	if in.MaxSize != nil {
		in, out := &in.MaxSize, &out.MaxSize
		*out = new(string)
		**out = **in
	}
	if in.MinSize != nil {
		in, out := &in.MinSize, &out.MinSize
		*out = new(string)
		**out = **in
	}
	if in.Suspend != nil {
		in, out := &in.Suspend, &out.Suspend
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyInitParameters.
func (in *PolicyInitParameters) DeepCopy() *PolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(PolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyObservation) DeepCopyInto(out *PolicyObservation) {
	*out = *in
	if in.DNSCooldown != nil {
		in, out := &in.DNSCooldown, &out.DNSCooldown
		*out = new(string)
		**out = **in
	}
	if in.MaxSize != nil {
		in, out := &in.MaxSize, &out.MaxSize
		*out = new(string)
		**out = **in
	}
	if in.MinSize != nil {
		in, out := &in.MinSize, &out.MinSize
		*out = new(string)
		**out = **in
	}
	if in.Suspend != nil {
		in, out := &in.Suspend, &out.Suspend
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyObservation.
func (in *PolicyObservation) DeepCopy() *PolicyObservation {
	if in == nil {
		return nil
	}
	out := new(PolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyParameters) DeepCopyInto(out *PolicyParameters) {
	*out = *in
	if in.DNSCooldown != nil {
		in, out := &in.DNSCooldown, &out.DNSCooldown
		*out = new(string)
		**out = **in
	}
	if in.MaxSize != nil {
		in, out := &in.MaxSize, &out.MaxSize
		*out = new(string)
		**out = **in
	}
	if in.MinSize != nil {
		in, out := &in.MinSize, &out.MinSize
		*out = new(string)
		**out = **in
	}
	if in.Suspend != nil {
		in, out := &in.Suspend, &out.Suspend
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyParameters.
func (in *PolicyParameters) DeepCopy() *PolicyParameters {
	if in == nil {
		return nil
	}
	out := new(PolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pool) DeepCopyInto(out *Pool) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pool.
func (in *Pool) DeepCopy() *Pool {
	if in == nil {
		return nil
	}
	out := new(Pool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Pool) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoolConfigpbAttributesInitParameters) DeepCopyInto(out *PoolConfigpbAttributesInitParameters) {
	*out = *in
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoolConfigpbAttributesInitParameters.
func (in *PoolConfigpbAttributesInitParameters) DeepCopy() *PoolConfigpbAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(PoolConfigpbAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoolConfigpbAttributesObservation) DeepCopyInto(out *PoolConfigpbAttributesObservation) {
	*out = *in
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoolConfigpbAttributesObservation.
func (in *PoolConfigpbAttributesObservation) DeepCopy() *PoolConfigpbAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(PoolConfigpbAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoolConfigpbAttributesParameters) DeepCopyInto(out *PoolConfigpbAttributesParameters) {
	*out = *in
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoolConfigpbAttributesParameters.
func (in *PoolConfigpbAttributesParameters) DeepCopy() *PoolConfigpbAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(PoolConfigpbAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoolInitParameters) DeepCopyInto(out *PoolInitParameters) {
	*out = *in
	if in.AnalyticsPolicy != nil {
		in, out := &in.AnalyticsPolicy, &out.AnalyticsPolicy
		*out = make([]AnalyticsPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AnalyticsProfileRef != nil {
		in, out := &in.AnalyticsProfileRef, &out.AnalyticsProfileRef
		*out = new(string)
		**out = **in
	}
	if in.AppendPort != nil {
		in, out := &in.AppendPort, &out.AppendPort
		*out = new(string)
		**out = **in
	}
	if in.ApplicationPersistenceProfileRef != nil {
		in, out := &in.ApplicationPersistenceProfileRef, &out.ApplicationPersistenceProfileRef
		*out = new(string)
		**out = **in
	}
	if in.AutoscaleLaunchConfigRef != nil {
		in, out := &in.AutoscaleLaunchConfigRef, &out.AutoscaleLaunchConfigRef
		*out = new(string)
		**out = **in
	}
	if in.AutoscaleNetworks != nil {
		in, out := &in.AutoscaleNetworks, &out.AutoscaleNetworks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AutoscalePolicyRef != nil {
		in, out := &in.AutoscalePolicyRef, &out.AutoscalePolicyRef
		*out = new(string)
		**out = **in
	}
	if in.CapacityEstimation != nil {
		in, out := &in.CapacityEstimation, &out.CapacityEstimation
		*out = new(string)
		**out = **in
	}
	if in.CapacityEstimationTtfbThresh != nil {
		in, out := &in.CapacityEstimationTtfbThresh, &out.CapacityEstimationTtfbThresh
		*out = new(string)
		**out = **in
	}
	if in.CloudConfigCksum != nil {
		in, out := &in.CloudConfigCksum, &out.CloudConfigCksum
		*out = new(string)
		**out = **in
	}
	if in.CloudRef != nil {
		in, out := &in.CloudRef, &out.CloudRef
		*out = new(string)
		**out = **in
	}
	if in.ConfigpbAttributes != nil {
		in, out := &in.ConfigpbAttributes, &out.ConfigpbAttributes
		*out = make([]PoolConfigpbAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnPoolProperties != nil {
		in, out := &in.ConnPoolProperties, &out.ConnPoolProperties
		*out = make([]ConnPoolPropertiesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnectionRampDuration != nil {
		in, out := &in.ConnectionRampDuration, &out.ConnectionRampDuration
		*out = new(string)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.DefaultServerPort != nil {
		in, out := &in.DefaultServerPort, &out.DefaultServerPort
		*out = new(string)
		**out = **in
	}
	if in.DeleteServerOnDNSRefresh != nil {
		in, out := &in.DeleteServerOnDNSRefresh, &out.DeleteServerOnDNSRefresh
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EastWest != nil {
		in, out := &in.EastWest, &out.EastWest
		*out = new(string)
		**out = **in
	}
	if in.EnableHttp2 != nil {
		in, out := &in.EnableHttp2, &out.EnableHttp2
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.ExternalAutoscaleGroups != nil {
		in, out := &in.ExternalAutoscaleGroups, &out.ExternalAutoscaleGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FailAction != nil {
		in, out := &in.FailAction, &out.FailAction
		*out = make([]FailActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FewestTasksFeedbackDelay != nil {
		in, out := &in.FewestTasksFeedbackDelay, &out.FewestTasksFeedbackDelay
		*out = new(string)
		**out = **in
	}
	if in.GracefulDisableTimeout != nil {
		in, out := &in.GracefulDisableTimeout, &out.GracefulDisableTimeout
		*out = new(string)
		**out = **in
	}
	if in.GracefulHmDownDisableTimeout != nil {
		in, out := &in.GracefulHmDownDisableTimeout, &out.GracefulHmDownDisableTimeout
		*out = new(string)
		**out = **in
	}
	if in.GslbSpEnabled != nil {
		in, out := &in.GslbSpEnabled, &out.GslbSpEnabled
		*out = new(string)
		**out = **in
	}
	if in.HealthMonitorRefs != nil {
		in, out := &in.HealthMonitorRefs, &out.HealthMonitorRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HorizonProfile != nil {
		in, out := &in.HorizonProfile, &out.HorizonProfile
		*out = make([]HorizonProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HostCheckEnabled != nil {
		in, out := &in.HostCheckEnabled, &out.HostCheckEnabled
		*out = new(string)
		**out = **in
	}
	if in.Http2Properties != nil {
		in, out := &in.Http2Properties, &out.Http2Properties
		*out = make([]Http2PropertiesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IgnoreServerPort != nil {
		in, out := &in.IgnoreServerPort, &out.IgnoreServerPort
		*out = new(string)
		**out = **in
	}
	if in.IgnoreServers != nil {
		in, out := &in.IgnoreServers, &out.IgnoreServers
		*out = new(bool)
		**out = **in
	}
	if in.InlineHealthMonitor != nil {
		in, out := &in.InlineHealthMonitor, &out.InlineHealthMonitor
		*out = new(string)
		**out = **in
	}
	if in.IpaddrgroupRef != nil {
		in, out := &in.IpaddrgroupRef, &out.IpaddrgroupRef
		*out = new(string)
		**out = **in
	}
	if in.LBAlgoRrPerSe != nil {
		in, out := &in.LBAlgoRrPerSe, &out.LBAlgoRrPerSe
		*out = new(string)
		**out = **in
	}
	if in.LBAlgorithm != nil {
		in, out := &in.LBAlgorithm, &out.LBAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.LBAlgorithmConsistentHashHdr != nil {
		in, out := &in.LBAlgorithmConsistentHashHdr, &out.LBAlgorithmConsistentHashHdr
		*out = new(string)
		**out = **in
	}
	if in.LBAlgorithmCoreNonaffinity != nil {
		in, out := &in.LBAlgorithmCoreNonaffinity, &out.LBAlgorithmCoreNonaffinity
		*out = new(string)
		**out = **in
	}
	if in.LBAlgorithmHash != nil {
		in, out := &in.LBAlgorithmHash, &out.LBAlgorithmHash
		*out = new(string)
		**out = **in
	}
	if in.LookupServerByName != nil {
		in, out := &in.LookupServerByName, &out.LookupServerByName
		*out = new(string)
		**out = **in
	}
	if in.Markers != nil {
		in, out := &in.Markers, &out.Markers
		*out = make([]MarkersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxConcurrentConnectionsPerServer != nil {
		in, out := &in.MaxConcurrentConnectionsPerServer, &out.MaxConcurrentConnectionsPerServer
		*out = new(string)
		**out = **in
	}
	if in.MaxConnRatePerServer != nil {
		in, out := &in.MaxConnRatePerServer, &out.MaxConnRatePerServer
		*out = make([]MaxConnRatePerServerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinHealthMonitorsUp != nil {
		in, out := &in.MinHealthMonitorsUp, &out.MinHealthMonitorsUp
		*out = new(string)
		**out = **in
	}
	if in.MinServersUp != nil {
		in, out := &in.MinServersUp, &out.MinServersUp
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Networks != nil {
		in, out := &in.Networks, &out.Networks
		*out = make([]NetworksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsxSecuritygroup != nil {
		in, out := &in.NsxSecuritygroup, &out.NsxSecuritygroup
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PkiProfileRef != nil {
		in, out := &in.PkiProfileRef, &out.PkiProfileRef
		*out = new(string)
		**out = **in
	}
	if in.PlacementNetworks != nil {
		in, out := &in.PlacementNetworks, &out.PlacementNetworks
		*out = make([]PlacementNetworksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PoolType != nil {
		in, out := &in.PoolType, &out.PoolType
		*out = new(string)
		**out = **in
	}
	if in.RequestQueueDepth != nil {
		in, out := &in.RequestQueueDepth, &out.RequestQueueDepth
		*out = new(string)
		**out = **in
	}
	if in.RequestQueueEnabled != nil {
		in, out := &in.RequestQueueEnabled, &out.RequestQueueEnabled
		*out = new(string)
		**out = **in
	}
	if in.ResolvePoolByDNS != nil {
		in, out := &in.ResolvePoolByDNS, &out.ResolvePoolByDNS
		*out = new(string)
		**out = **in
	}
	if in.RewriteHostHeaderToServerName != nil {
		in, out := &in.RewriteHostHeaderToServerName, &out.RewriteHostHeaderToServerName
		*out = new(string)
		**out = **in
	}
	if in.RewriteHostHeaderToSni != nil {
		in, out := &in.RewriteHostHeaderToSni, &out.RewriteHostHeaderToSni
		*out = new(string)
		**out = **in
	}
	if in.RoutingPool != nil {
		in, out := &in.RoutingPool, &out.RoutingPool
		*out = new(string)
		**out = **in
	}
	if in.SSLKeyAndCertificateRef != nil {
		in, out := &in.SSLKeyAndCertificateRef, &out.SSLKeyAndCertificateRef
		*out = new(string)
		**out = **in
	}
	if in.SSLProfileRef != nil {
		in, out := &in.SSLProfileRef, &out.SSLProfileRef
		*out = new(string)
		**out = **in
	}
	if in.ServerDisableType != nil {
		in, out := &in.ServerDisableType, &out.ServerDisableType
		*out = new(string)
		**out = **in
	}
	if in.ServerName != nil {
		in, out := &in.ServerName, &out.ServerName
		*out = new(string)
		**out = **in
	}
	if in.ServerReselect != nil {
		in, out := &in.ServerReselect, &out.ServerReselect
		*out = make([]ServerReselectInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServerTimeout != nil {
		in, out := &in.ServerTimeout, &out.ServerTimeout
		*out = new(string)
		**out = **in
	}
	if in.Servers != nil {
		in, out := &in.Servers, &out.Servers
		*out = make([]ServersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceMetadata != nil {
		in, out := &in.ServiceMetadata, &out.ServiceMetadata
		*out = new(string)
		**out = **in
	}
	if in.SniEnabled != nil {
		in, out := &in.SniEnabled, &out.SniEnabled
		*out = new(string)
		**out = **in
	}
	if in.SpGsInfo != nil {
		in, out := &in.SpGsInfo, &out.SpGsInfo
		*out = make([]SpGsInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TenantRef != nil {
		in, out := &in.TenantRef, &out.TenantRef
		*out = new(string)
		**out = **in
	}
	if in.Tier1Lr != nil {
		in, out := &in.Tier1Lr, &out.Tier1Lr
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.UseServicePort != nil {
		in, out := &in.UseServicePort, &out.UseServicePort
		*out = new(string)
		**out = **in
	}
	if in.UseServiceSSLMode != nil {
		in, out := &in.UseServiceSSLMode, &out.UseServiceSSLMode
		*out = new(string)
		**out = **in
	}
	if in.VrfRef != nil {
		in, out := &in.VrfRef, &out.VrfRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoolInitParameters.
func (in *PoolInitParameters) DeepCopy() *PoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(PoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoolList) DeepCopyInto(out *PoolList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Pool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoolList.
func (in *PoolList) DeepCopy() *PoolList {
	if in == nil {
		return nil
	}
	out := new(PoolList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PoolList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoolObservation) DeepCopyInto(out *PoolObservation) {
	*out = *in
	if in.AnalyticsPolicy != nil {
		in, out := &in.AnalyticsPolicy, &out.AnalyticsPolicy
		*out = make([]AnalyticsPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AnalyticsProfileRef != nil {
		in, out := &in.AnalyticsProfileRef, &out.AnalyticsProfileRef
		*out = new(string)
		**out = **in
	}
	if in.AppendPort != nil {
		in, out := &in.AppendPort, &out.AppendPort
		*out = new(string)
		**out = **in
	}
	if in.ApplicationPersistenceProfileRef != nil {
		in, out := &in.ApplicationPersistenceProfileRef, &out.ApplicationPersistenceProfileRef
		*out = new(string)
		**out = **in
	}
	if in.AutoscaleLaunchConfigRef != nil {
		in, out := &in.AutoscaleLaunchConfigRef, &out.AutoscaleLaunchConfigRef
		*out = new(string)
		**out = **in
	}
	if in.AutoscaleNetworks != nil {
		in, out := &in.AutoscaleNetworks, &out.AutoscaleNetworks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AutoscalePolicyRef != nil {
		in, out := &in.AutoscalePolicyRef, &out.AutoscalePolicyRef
		*out = new(string)
		**out = **in
	}
	if in.CapacityEstimation != nil {
		in, out := &in.CapacityEstimation, &out.CapacityEstimation
		*out = new(string)
		**out = **in
	}
	if in.CapacityEstimationTtfbThresh != nil {
		in, out := &in.CapacityEstimationTtfbThresh, &out.CapacityEstimationTtfbThresh
		*out = new(string)
		**out = **in
	}
	if in.CloudConfigCksum != nil {
		in, out := &in.CloudConfigCksum, &out.CloudConfigCksum
		*out = new(string)
		**out = **in
	}
	if in.CloudRef != nil {
		in, out := &in.CloudRef, &out.CloudRef
		*out = new(string)
		**out = **in
	}
	if in.ConfigpbAttributes != nil {
		in, out := &in.ConfigpbAttributes, &out.ConfigpbAttributes
		*out = make([]PoolConfigpbAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnPoolProperties != nil {
		in, out := &in.ConnPoolProperties, &out.ConnPoolProperties
		*out = make([]ConnPoolPropertiesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnectionRampDuration != nil {
		in, out := &in.ConnectionRampDuration, &out.ConnectionRampDuration
		*out = new(string)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.DefaultServerPort != nil {
		in, out := &in.DefaultServerPort, &out.DefaultServerPort
		*out = new(string)
		**out = **in
	}
	if in.DeleteServerOnDNSRefresh != nil {
		in, out := &in.DeleteServerOnDNSRefresh, &out.DeleteServerOnDNSRefresh
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EastWest != nil {
		in, out := &in.EastWest, &out.EastWest
		*out = new(string)
		**out = **in
	}
	if in.EnableHttp2 != nil {
		in, out := &in.EnableHttp2, &out.EnableHttp2
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.ExternalAutoscaleGroups != nil {
		in, out := &in.ExternalAutoscaleGroups, &out.ExternalAutoscaleGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FailAction != nil {
		in, out := &in.FailAction, &out.FailAction
		*out = make([]FailActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FewestTasksFeedbackDelay != nil {
		in, out := &in.FewestTasksFeedbackDelay, &out.FewestTasksFeedbackDelay
		*out = new(string)
		**out = **in
	}
	if in.GracefulDisableTimeout != nil {
		in, out := &in.GracefulDisableTimeout, &out.GracefulDisableTimeout
		*out = new(string)
		**out = **in
	}
	if in.GracefulHmDownDisableTimeout != nil {
		in, out := &in.GracefulHmDownDisableTimeout, &out.GracefulHmDownDisableTimeout
		*out = new(string)
		**out = **in
	}
	if in.GslbSpEnabled != nil {
		in, out := &in.GslbSpEnabled, &out.GslbSpEnabled
		*out = new(string)
		**out = **in
	}
	if in.HealthMonitorRefs != nil {
		in, out := &in.HealthMonitorRefs, &out.HealthMonitorRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HorizonProfile != nil {
		in, out := &in.HorizonProfile, &out.HorizonProfile
		*out = make([]HorizonProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HostCheckEnabled != nil {
		in, out := &in.HostCheckEnabled, &out.HostCheckEnabled
		*out = new(string)
		**out = **in
	}
	if in.Http2Properties != nil {
		in, out := &in.Http2Properties, &out.Http2Properties
		*out = make([]Http2PropertiesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IgnoreServerPort != nil {
		in, out := &in.IgnoreServerPort, &out.IgnoreServerPort
		*out = new(string)
		**out = **in
	}
	if in.IgnoreServers != nil {
		in, out := &in.IgnoreServers, &out.IgnoreServers
		*out = new(bool)
		**out = **in
	}
	if in.InlineHealthMonitor != nil {
		in, out := &in.InlineHealthMonitor, &out.InlineHealthMonitor
		*out = new(string)
		**out = **in
	}
	if in.IpaddrgroupRef != nil {
		in, out := &in.IpaddrgroupRef, &out.IpaddrgroupRef
		*out = new(string)
		**out = **in
	}
	if in.LBAlgoRrPerSe != nil {
		in, out := &in.LBAlgoRrPerSe, &out.LBAlgoRrPerSe
		*out = new(string)
		**out = **in
	}
	if in.LBAlgorithm != nil {
		in, out := &in.LBAlgorithm, &out.LBAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.LBAlgorithmConsistentHashHdr != nil {
		in, out := &in.LBAlgorithmConsistentHashHdr, &out.LBAlgorithmConsistentHashHdr
		*out = new(string)
		**out = **in
	}
	if in.LBAlgorithmCoreNonaffinity != nil {
		in, out := &in.LBAlgorithmCoreNonaffinity, &out.LBAlgorithmCoreNonaffinity
		*out = new(string)
		**out = **in
	}
	if in.LBAlgorithmHash != nil {
		in, out := &in.LBAlgorithmHash, &out.LBAlgorithmHash
		*out = new(string)
		**out = **in
	}
	if in.LookupServerByName != nil {
		in, out := &in.LookupServerByName, &out.LookupServerByName
		*out = new(string)
		**out = **in
	}
	if in.Markers != nil {
		in, out := &in.Markers, &out.Markers
		*out = make([]MarkersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxConcurrentConnectionsPerServer != nil {
		in, out := &in.MaxConcurrentConnectionsPerServer, &out.MaxConcurrentConnectionsPerServer
		*out = new(string)
		**out = **in
	}
	if in.MaxConnRatePerServer != nil {
		in, out := &in.MaxConnRatePerServer, &out.MaxConnRatePerServer
		*out = make([]MaxConnRatePerServerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinHealthMonitorsUp != nil {
		in, out := &in.MinHealthMonitorsUp, &out.MinHealthMonitorsUp
		*out = new(string)
		**out = **in
	}
	if in.MinServersUp != nil {
		in, out := &in.MinServersUp, &out.MinServersUp
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Networks != nil {
		in, out := &in.Networks, &out.Networks
		*out = make([]NetworksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsxSecuritygroup != nil {
		in, out := &in.NsxSecuritygroup, &out.NsxSecuritygroup
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PkiProfileRef != nil {
		in, out := &in.PkiProfileRef, &out.PkiProfileRef
		*out = new(string)
		**out = **in
	}
	if in.PlacementNetworks != nil {
		in, out := &in.PlacementNetworks, &out.PlacementNetworks
		*out = make([]PlacementNetworksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PoolType != nil {
		in, out := &in.PoolType, &out.PoolType
		*out = new(string)
		**out = **in
	}
	if in.RequestQueueDepth != nil {
		in, out := &in.RequestQueueDepth, &out.RequestQueueDepth
		*out = new(string)
		**out = **in
	}
	if in.RequestQueueEnabled != nil {
		in, out := &in.RequestQueueEnabled, &out.RequestQueueEnabled
		*out = new(string)
		**out = **in
	}
	if in.ResolvePoolByDNS != nil {
		in, out := &in.ResolvePoolByDNS, &out.ResolvePoolByDNS
		*out = new(string)
		**out = **in
	}
	if in.RewriteHostHeaderToServerName != nil {
		in, out := &in.RewriteHostHeaderToServerName, &out.RewriteHostHeaderToServerName
		*out = new(string)
		**out = **in
	}
	if in.RewriteHostHeaderToSni != nil {
		in, out := &in.RewriteHostHeaderToSni, &out.RewriteHostHeaderToSni
		*out = new(string)
		**out = **in
	}
	if in.RoutingPool != nil {
		in, out := &in.RoutingPool, &out.RoutingPool
		*out = new(string)
		**out = **in
	}
	if in.SSLKeyAndCertificateRef != nil {
		in, out := &in.SSLKeyAndCertificateRef, &out.SSLKeyAndCertificateRef
		*out = new(string)
		**out = **in
	}
	if in.SSLProfileRef != nil {
		in, out := &in.SSLProfileRef, &out.SSLProfileRef
		*out = new(string)
		**out = **in
	}
	if in.ServerDisableType != nil {
		in, out := &in.ServerDisableType, &out.ServerDisableType
		*out = new(string)
		**out = **in
	}
	if in.ServerName != nil {
		in, out := &in.ServerName, &out.ServerName
		*out = new(string)
		**out = **in
	}
	if in.ServerReselect != nil {
		in, out := &in.ServerReselect, &out.ServerReselect
		*out = make([]ServerReselectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServerTimeout != nil {
		in, out := &in.ServerTimeout, &out.ServerTimeout
		*out = new(string)
		**out = **in
	}
	if in.Servers != nil {
		in, out := &in.Servers, &out.Servers
		*out = make([]ServersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceMetadata != nil {
		in, out := &in.ServiceMetadata, &out.ServiceMetadata
		*out = new(string)
		**out = **in
	}
	if in.SniEnabled != nil {
		in, out := &in.SniEnabled, &out.SniEnabled
		*out = new(string)
		**out = **in
	}
	if in.SpGsInfo != nil {
		in, out := &in.SpGsInfo, &out.SpGsInfo
		*out = make([]SpGsInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TenantRef != nil {
		in, out := &in.TenantRef, &out.TenantRef
		*out = new(string)
		**out = **in
	}
	if in.Tier1Lr != nil {
		in, out := &in.Tier1Lr, &out.Tier1Lr
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.UseServicePort != nil {
		in, out := &in.UseServicePort, &out.UseServicePort
		*out = new(string)
		**out = **in
	}
	if in.UseServiceSSLMode != nil {
		in, out := &in.UseServiceSSLMode, &out.UseServiceSSLMode
		*out = new(string)
		**out = **in
	}
	if in.VrfRef != nil {
		in, out := &in.VrfRef, &out.VrfRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoolObservation.
func (in *PoolObservation) DeepCopy() *PoolObservation {
	if in == nil {
		return nil
	}
	out := new(PoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoolParameters) DeepCopyInto(out *PoolParameters) {
	*out = *in
	if in.AnalyticsPolicy != nil {
		in, out := &in.AnalyticsPolicy, &out.AnalyticsPolicy
		*out = make([]AnalyticsPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AnalyticsProfileRef != nil {
		in, out := &in.AnalyticsProfileRef, &out.AnalyticsProfileRef
		*out = new(string)
		**out = **in
	}
	if in.AppendPort != nil {
		in, out := &in.AppendPort, &out.AppendPort
		*out = new(string)
		**out = **in
	}
	if in.ApplicationPersistenceProfileRef != nil {
		in, out := &in.ApplicationPersistenceProfileRef, &out.ApplicationPersistenceProfileRef
		*out = new(string)
		**out = **in
	}
	if in.AutoscaleLaunchConfigRef != nil {
		in, out := &in.AutoscaleLaunchConfigRef, &out.AutoscaleLaunchConfigRef
		*out = new(string)
		**out = **in
	}
	if in.AutoscaleNetworks != nil {
		in, out := &in.AutoscaleNetworks, &out.AutoscaleNetworks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AutoscalePolicyRef != nil {
		in, out := &in.AutoscalePolicyRef, &out.AutoscalePolicyRef
		*out = new(string)
		**out = **in
	}
	if in.CapacityEstimation != nil {
		in, out := &in.CapacityEstimation, &out.CapacityEstimation
		*out = new(string)
		**out = **in
	}
	if in.CapacityEstimationTtfbThresh != nil {
		in, out := &in.CapacityEstimationTtfbThresh, &out.CapacityEstimationTtfbThresh
		*out = new(string)
		**out = **in
	}
	if in.CloudConfigCksum != nil {
		in, out := &in.CloudConfigCksum, &out.CloudConfigCksum
		*out = new(string)
		**out = **in
	}
	if in.CloudRef != nil {
		in, out := &in.CloudRef, &out.CloudRef
		*out = new(string)
		**out = **in
	}
	if in.ConfigpbAttributes != nil {
		in, out := &in.ConfigpbAttributes, &out.ConfigpbAttributes
		*out = make([]PoolConfigpbAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnPoolProperties != nil {
		in, out := &in.ConnPoolProperties, &out.ConnPoolProperties
		*out = make([]ConnPoolPropertiesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnectionRampDuration != nil {
		in, out := &in.ConnectionRampDuration, &out.ConnectionRampDuration
		*out = new(string)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.DefaultServerPort != nil {
		in, out := &in.DefaultServerPort, &out.DefaultServerPort
		*out = new(string)
		**out = **in
	}
	if in.DeleteServerOnDNSRefresh != nil {
		in, out := &in.DeleteServerOnDNSRefresh, &out.DeleteServerOnDNSRefresh
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EastWest != nil {
		in, out := &in.EastWest, &out.EastWest
		*out = new(string)
		**out = **in
	}
	if in.EnableHttp2 != nil {
		in, out := &in.EnableHttp2, &out.EnableHttp2
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.ExternalAutoscaleGroups != nil {
		in, out := &in.ExternalAutoscaleGroups, &out.ExternalAutoscaleGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FailAction != nil {
		in, out := &in.FailAction, &out.FailAction
		*out = make([]FailActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FewestTasksFeedbackDelay != nil {
		in, out := &in.FewestTasksFeedbackDelay, &out.FewestTasksFeedbackDelay
		*out = new(string)
		**out = **in
	}
	if in.GracefulDisableTimeout != nil {
		in, out := &in.GracefulDisableTimeout, &out.GracefulDisableTimeout
		*out = new(string)
		**out = **in
	}
	if in.GracefulHmDownDisableTimeout != nil {
		in, out := &in.GracefulHmDownDisableTimeout, &out.GracefulHmDownDisableTimeout
		*out = new(string)
		**out = **in
	}
	if in.GslbSpEnabled != nil {
		in, out := &in.GslbSpEnabled, &out.GslbSpEnabled
		*out = new(string)
		**out = **in
	}
	if in.HealthMonitorRefs != nil {
		in, out := &in.HealthMonitorRefs, &out.HealthMonitorRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HorizonProfile != nil {
		in, out := &in.HorizonProfile, &out.HorizonProfile
		*out = make([]HorizonProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HostCheckEnabled != nil {
		in, out := &in.HostCheckEnabled, &out.HostCheckEnabled
		*out = new(string)
		**out = **in
	}
	if in.Http2Properties != nil {
		in, out := &in.Http2Properties, &out.Http2Properties
		*out = make([]Http2PropertiesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IgnoreServerPort != nil {
		in, out := &in.IgnoreServerPort, &out.IgnoreServerPort
		*out = new(string)
		**out = **in
	}
	if in.IgnoreServers != nil {
		in, out := &in.IgnoreServers, &out.IgnoreServers
		*out = new(bool)
		**out = **in
	}
	if in.InlineHealthMonitor != nil {
		in, out := &in.InlineHealthMonitor, &out.InlineHealthMonitor
		*out = new(string)
		**out = **in
	}
	if in.IpaddrgroupRef != nil {
		in, out := &in.IpaddrgroupRef, &out.IpaddrgroupRef
		*out = new(string)
		**out = **in
	}
	if in.LBAlgoRrPerSe != nil {
		in, out := &in.LBAlgoRrPerSe, &out.LBAlgoRrPerSe
		*out = new(string)
		**out = **in
	}
	if in.LBAlgorithm != nil {
		in, out := &in.LBAlgorithm, &out.LBAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.LBAlgorithmConsistentHashHdr != nil {
		in, out := &in.LBAlgorithmConsistentHashHdr, &out.LBAlgorithmConsistentHashHdr
		*out = new(string)
		**out = **in
	}
	if in.LBAlgorithmCoreNonaffinity != nil {
		in, out := &in.LBAlgorithmCoreNonaffinity, &out.LBAlgorithmCoreNonaffinity
		*out = new(string)
		**out = **in
	}
	if in.LBAlgorithmHash != nil {
		in, out := &in.LBAlgorithmHash, &out.LBAlgorithmHash
		*out = new(string)
		**out = **in
	}
	if in.LookupServerByName != nil {
		in, out := &in.LookupServerByName, &out.LookupServerByName
		*out = new(string)
		**out = **in
	}
	if in.Markers != nil {
		in, out := &in.Markers, &out.Markers
		*out = make([]MarkersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxConcurrentConnectionsPerServer != nil {
		in, out := &in.MaxConcurrentConnectionsPerServer, &out.MaxConcurrentConnectionsPerServer
		*out = new(string)
		**out = **in
	}
	if in.MaxConnRatePerServer != nil {
		in, out := &in.MaxConnRatePerServer, &out.MaxConnRatePerServer
		*out = make([]MaxConnRatePerServerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinHealthMonitorsUp != nil {
		in, out := &in.MinHealthMonitorsUp, &out.MinHealthMonitorsUp
		*out = new(string)
		**out = **in
	}
	if in.MinServersUp != nil {
		in, out := &in.MinServersUp, &out.MinServersUp
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Networks != nil {
		in, out := &in.Networks, &out.Networks
		*out = make([]NetworksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsxSecuritygroup != nil {
		in, out := &in.NsxSecuritygroup, &out.NsxSecuritygroup
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PkiProfileRef != nil {
		in, out := &in.PkiProfileRef, &out.PkiProfileRef
		*out = new(string)
		**out = **in
	}
	if in.PlacementNetworks != nil {
		in, out := &in.PlacementNetworks, &out.PlacementNetworks
		*out = make([]PlacementNetworksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PoolType != nil {
		in, out := &in.PoolType, &out.PoolType
		*out = new(string)
		**out = **in
	}
	if in.RequestQueueDepth != nil {
		in, out := &in.RequestQueueDepth, &out.RequestQueueDepth
		*out = new(string)
		**out = **in
	}
	if in.RequestQueueEnabled != nil {
		in, out := &in.RequestQueueEnabled, &out.RequestQueueEnabled
		*out = new(string)
		**out = **in
	}
	if in.ResolvePoolByDNS != nil {
		in, out := &in.ResolvePoolByDNS, &out.ResolvePoolByDNS
		*out = new(string)
		**out = **in
	}
	if in.RewriteHostHeaderToServerName != nil {
		in, out := &in.RewriteHostHeaderToServerName, &out.RewriteHostHeaderToServerName
		*out = new(string)
		**out = **in
	}
	if in.RewriteHostHeaderToSni != nil {
		in, out := &in.RewriteHostHeaderToSni, &out.RewriteHostHeaderToSni
		*out = new(string)
		**out = **in
	}
	if in.RoutingPool != nil {
		in, out := &in.RoutingPool, &out.RoutingPool
		*out = new(string)
		**out = **in
	}
	if in.SSLKeyAndCertificateRef != nil {
		in, out := &in.SSLKeyAndCertificateRef, &out.SSLKeyAndCertificateRef
		*out = new(string)
		**out = **in
	}
	if in.SSLProfileRef != nil {
		in, out := &in.SSLProfileRef, &out.SSLProfileRef
		*out = new(string)
		**out = **in
	}
	if in.ServerDisableType != nil {
		in, out := &in.ServerDisableType, &out.ServerDisableType
		*out = new(string)
		**out = **in
	}
	if in.ServerName != nil {
		in, out := &in.ServerName, &out.ServerName
		*out = new(string)
		**out = **in
	}
	if in.ServerReselect != nil {
		in, out := &in.ServerReselect, &out.ServerReselect
		*out = make([]ServerReselectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServerTimeout != nil {
		in, out := &in.ServerTimeout, &out.ServerTimeout
		*out = new(string)
		**out = **in
	}
	if in.Servers != nil {
		in, out := &in.Servers, &out.Servers
		*out = make([]ServersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceMetadata != nil {
		in, out := &in.ServiceMetadata, &out.ServiceMetadata
		*out = new(string)
		**out = **in
	}
	if in.SniEnabled != nil {
		in, out := &in.SniEnabled, &out.SniEnabled
		*out = new(string)
		**out = **in
	}
	if in.SpGsInfo != nil {
		in, out := &in.SpGsInfo, &out.SpGsInfo
		*out = make([]SpGsInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TenantRef != nil {
		in, out := &in.TenantRef, &out.TenantRef
		*out = new(string)
		**out = **in
	}
	if in.Tier1Lr != nil {
		in, out := &in.Tier1Lr, &out.Tier1Lr
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.UseServicePort != nil {
		in, out := &in.UseServicePort, &out.UseServicePort
		*out = new(string)
		**out = **in
	}
	if in.UseServiceSSLMode != nil {
		in, out := &in.UseServiceSSLMode, &out.UseServiceSSLMode
		*out = new(string)
		**out = **in
	}
	if in.VrfRef != nil {
		in, out := &in.VrfRef, &out.VrfRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoolParameters.
func (in *PoolParameters) DeepCopy() *PoolParameters {
	if in == nil {
		return nil
	}
	out := new(PoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoolSpec) DeepCopyInto(out *PoolSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoolSpec.
func (in *PoolSpec) DeepCopy() *PoolSpec {
	if in == nil {
		return nil
	}
	out := new(PoolSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoolStatus) DeepCopyInto(out *PoolStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoolStatus.
func (in *PoolStatus) DeepCopy() *PoolStatus {
	if in == nil {
		return nil
	}
	out := new(PoolStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrefixesIPAddrInitParameters) DeepCopyInto(out *PrefixesIPAddrInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrefixesIPAddrInitParameters.
func (in *PrefixesIPAddrInitParameters) DeepCopy() *PrefixesIPAddrInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrefixesIPAddrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrefixesIPAddrObservation) DeepCopyInto(out *PrefixesIPAddrObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrefixesIPAddrObservation.
func (in *PrefixesIPAddrObservation) DeepCopy() *PrefixesIPAddrObservation {
	if in == nil {
		return nil
	}
	out := new(PrefixesIPAddrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrefixesIPAddrParameters) DeepCopyInto(out *PrefixesIPAddrParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrefixesIPAddrParameters.
func (in *PrefixesIPAddrParameters) DeepCopy() *PrefixesIPAddrParameters {
	if in == nil {
		return nil
	}
	out := new(PrefixesIPAddrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrefixesInitParameters) DeepCopyInto(out *PrefixesInitParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]IPAddrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrefixesInitParameters.
func (in *PrefixesInitParameters) DeepCopy() *PrefixesInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrefixesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrefixesObservation) DeepCopyInto(out *PrefixesObservation) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]IPAddrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrefixesObservation.
func (in *PrefixesObservation) DeepCopy() *PrefixesObservation {
	if in == nil {
		return nil
	}
	out := new(PrefixesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrefixesParameters) DeepCopyInto(out *PrefixesParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]IPAddrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrefixesParameters.
func (in *PrefixesParameters) DeepCopy() *PrefixesParameters {
	if in == nil {
		return nil
	}
	out := new(PrefixesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProtocolInitParameters) DeepCopyInto(out *ProtocolInitParameters) {
	*out = *in
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Protocols != nil {
		in, out := &in.Protocols, &out.Protocols
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProtocolInitParameters.
func (in *ProtocolInitParameters) DeepCopy() *ProtocolInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProtocolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProtocolObservation) DeepCopyInto(out *ProtocolObservation) {
	*out = *in
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Protocols != nil {
		in, out := &in.Protocols, &out.Protocols
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProtocolObservation.
func (in *ProtocolObservation) DeepCopy() *ProtocolObservation {
	if in == nil {
		return nil
	}
	out := new(ProtocolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProtocolParameters) DeepCopyInto(out *ProtocolParameters) {
	*out = *in
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Protocols != nil {
		in, out := &in.Protocols, &out.Protocols
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProtocolParameters.
func (in *ProtocolParameters) DeepCopy() *ProtocolParameters {
	if in == nil {
		return nil
	}
	out := new(ProtocolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryInitParameters) DeepCopyInto(out *QueryInitParameters) {
	*out = *in
	if in.MatchCase != nil {
		in, out := &in.MatchCase, &out.MatchCase
		*out = new(string)
		**out = **in
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.MatchDecodedString != nil {
		in, out := &in.MatchDecodedString, &out.MatchDecodedString
		*out = new(string)
		**out = **in
	}
	if in.MatchStr != nil {
		in, out := &in.MatchStr, &out.MatchStr
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StringGroupRefs != nil {
		in, out := &in.StringGroupRefs, &out.StringGroupRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryInitParameters.
func (in *QueryInitParameters) DeepCopy() *QueryInitParameters {
	if in == nil {
		return nil
	}
	out := new(QueryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryObservation) DeepCopyInto(out *QueryObservation) {
	*out = *in
	if in.MatchCase != nil {
		in, out := &in.MatchCase, &out.MatchCase
		*out = new(string)
		**out = **in
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.MatchDecodedString != nil {
		in, out := &in.MatchDecodedString, &out.MatchDecodedString
		*out = new(string)
		**out = **in
	}
	if in.MatchStr != nil {
		in, out := &in.MatchStr, &out.MatchStr
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StringGroupRefs != nil {
		in, out := &in.StringGroupRefs, &out.StringGroupRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryObservation.
func (in *QueryObservation) DeepCopy() *QueryObservation {
	if in == nil {
		return nil
	}
	out := new(QueryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryParameters) DeepCopyInto(out *QueryParameters) {
	*out = *in
	if in.MatchCase != nil {
		in, out := &in.MatchCase, &out.MatchCase
		*out = new(string)
		**out = **in
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.MatchDecodedString != nil {
		in, out := &in.MatchDecodedString, &out.MatchDecodedString
		*out = new(string)
		**out = **in
	}
	if in.MatchStr != nil {
		in, out := &in.MatchStr, &out.MatchStr
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StringGroupRefs != nil {
		in, out := &in.StringGroupRefs, &out.StringGroupRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryParameters.
func (in *QueryParameters) DeepCopy() *QueryParameters {
	if in == nil {
		return nil
	}
	out := new(QueryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangeInitParameters) DeepCopyInto(out *RangeInitParameters) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangeInitParameters.
func (in *RangeInitParameters) DeepCopy() *RangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(RangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangeObservation) DeepCopyInto(out *RangeObservation) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangeObservation.
func (in *RangeObservation) DeepCopy() *RangeObservation {
	if in == nil {
		return nil
	}
	out := new(RangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangeParameters) DeepCopyInto(out *RangeParameters) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangeParameters.
func (in *RangeParameters) DeepCopy() *RangeParameters {
	if in == nil {
		return nil
	}
	out := new(RangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangesBeginInitParameters) DeepCopyInto(out *RangesBeginInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangesBeginInitParameters.
func (in *RangesBeginInitParameters) DeepCopy() *RangesBeginInitParameters {
	if in == nil {
		return nil
	}
	out := new(RangesBeginInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangesBeginObservation) DeepCopyInto(out *RangesBeginObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangesBeginObservation.
func (in *RangesBeginObservation) DeepCopy() *RangesBeginObservation {
	if in == nil {
		return nil
	}
	out := new(RangesBeginObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangesBeginParameters) DeepCopyInto(out *RangesBeginParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangesBeginParameters.
func (in *RangesBeginParameters) DeepCopy() *RangesBeginParameters {
	if in == nil {
		return nil
	}
	out := new(RangesBeginParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangesEndInitParameters) DeepCopyInto(out *RangesEndInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangesEndInitParameters.
func (in *RangesEndInitParameters) DeepCopy() *RangesEndInitParameters {
	if in == nil {
		return nil
	}
	out := new(RangesEndInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangesEndObservation) DeepCopyInto(out *RangesEndObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangesEndObservation.
func (in *RangesEndObservation) DeepCopy() *RangesEndObservation {
	if in == nil {
		return nil
	}
	out := new(RangesEndObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangesEndParameters) DeepCopyInto(out *RangesEndParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangesEndParameters.
func (in *RangesEndParameters) DeepCopy() *RangesEndParameters {
	if in == nil {
		return nil
	}
	out := new(RangesEndParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangesInitParameters) DeepCopyInto(out *RangesInitParameters) {
	*out = *in
	if in.Begin != nil {
		in, out := &in.Begin, &out.Begin
		*out = make([]BeginInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = make([]EndInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangesInitParameters.
func (in *RangesInitParameters) DeepCopy() *RangesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RangesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangesObservation) DeepCopyInto(out *RangesObservation) {
	*out = *in
	if in.Begin != nil {
		in, out := &in.Begin, &out.Begin
		*out = make([]BeginObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = make([]EndObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangesObservation.
func (in *RangesObservation) DeepCopy() *RangesObservation {
	if in == nil {
		return nil
	}
	out := new(RangesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangesParameters) DeepCopyInto(out *RangesParameters) {
	*out = *in
	if in.Begin != nil {
		in, out := &in.Begin, &out.Begin
		*out = make([]BeginParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = make([]EndParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangesParameters.
func (in *RangesParameters) DeepCopy() *RangesParameters {
	if in == nil {
		return nil
	}
	out := new(RangesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RateLimiterInitParameters) DeepCopyInto(out *RateLimiterInitParameters) {
	*out = *in
	if in.BurstSz != nil {
		in, out := &in.BurstSz, &out.BurstSz
		*out = new(string)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimiterInitParameters.
func (in *RateLimiterInitParameters) DeepCopy() *RateLimiterInitParameters {
	if in == nil {
		return nil
	}
	out := new(RateLimiterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RateLimiterObservation) DeepCopyInto(out *RateLimiterObservation) {
	*out = *in
	if in.BurstSz != nil {
		in, out := &in.BurstSz, &out.BurstSz
		*out = new(string)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimiterObservation.
func (in *RateLimiterObservation) DeepCopy() *RateLimiterObservation {
	if in == nil {
		return nil
	}
	out := new(RateLimiterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RateLimiterParameters) DeepCopyInto(out *RateLimiterParameters) {
	*out = *in
	if in.BurstSz != nil {
		in, out := &in.BurstSz, &out.BurstSz
		*out = new(string)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimiterParameters.
func (in *RateLimiterParameters) DeepCopy() *RateLimiterParameters {
	if in == nil {
		return nil
	}
	out := new(RateLimiterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RealtimeSeMetricsInitParameters) DeepCopyInto(out *RealtimeSeMetricsInitParameters) {
	*out = *in
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RealtimeSeMetricsInitParameters.
func (in *RealtimeSeMetricsInitParameters) DeepCopy() *RealtimeSeMetricsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RealtimeSeMetricsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RealtimeSeMetricsObservation) DeepCopyInto(out *RealtimeSeMetricsObservation) {
	*out = *in
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RealtimeSeMetricsObservation.
func (in *RealtimeSeMetricsObservation) DeepCopy() *RealtimeSeMetricsObservation {
	if in == nil {
		return nil
	}
	out := new(RealtimeSeMetricsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RealtimeSeMetricsParameters) DeepCopyInto(out *RealtimeSeMetricsParameters) {
	*out = *in
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RealtimeSeMetricsParameters.
func (in *RealtimeSeMetricsParameters) DeepCopy() *RealtimeSeMetricsParameters {
	if in == nil {
		return nil
	}
	out := new(RealtimeSeMetricsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectHostInitParameters) DeepCopyInto(out *RedirectHostInitParameters) {
	*out = *in
	if in.Tokens != nil {
		in, out := &in.Tokens, &out.Tokens
		*out = make([]HostTokensInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectHostInitParameters.
func (in *RedirectHostInitParameters) DeepCopy() *RedirectHostInitParameters {
	if in == nil {
		return nil
	}
	out := new(RedirectHostInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectHostObservation) DeepCopyInto(out *RedirectHostObservation) {
	*out = *in
	if in.Tokens != nil {
		in, out := &in.Tokens, &out.Tokens
		*out = make([]HostTokensObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectHostObservation.
func (in *RedirectHostObservation) DeepCopy() *RedirectHostObservation {
	if in == nil {
		return nil
	}
	out := new(RedirectHostObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectHostParameters) DeepCopyInto(out *RedirectHostParameters) {
	*out = *in
	if in.Tokens != nil {
		in, out := &in.Tokens, &out.Tokens
		*out = make([]HostTokensParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectHostParameters.
func (in *RedirectHostParameters) DeepCopy() *RedirectHostParameters {
	if in == nil {
		return nil
	}
	out := new(RedirectHostParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectHostTokensInitParameters) DeepCopyInto(out *RedirectHostTokensInitParameters) {
	*out = *in
	if in.EndIndex != nil {
		in, out := &in.EndIndex, &out.EndIndex
		*out = new(string)
		**out = **in
	}
	if in.StartIndex != nil {
		in, out := &in.StartIndex, &out.StartIndex
		*out = new(string)
		**out = **in
	}
	if in.StrValue != nil {
		in, out := &in.StrValue, &out.StrValue
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectHostTokensInitParameters.
func (in *RedirectHostTokensInitParameters) DeepCopy() *RedirectHostTokensInitParameters {
	if in == nil {
		return nil
	}
	out := new(RedirectHostTokensInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectHostTokensObservation) DeepCopyInto(out *RedirectHostTokensObservation) {
	*out = *in
	if in.EndIndex != nil {
		in, out := &in.EndIndex, &out.EndIndex
		*out = new(string)
		**out = **in
	}
	if in.StartIndex != nil {
		in, out := &in.StartIndex, &out.StartIndex
		*out = new(string)
		**out = **in
	}
	if in.StrValue != nil {
		in, out := &in.StrValue, &out.StrValue
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectHostTokensObservation.
func (in *RedirectHostTokensObservation) DeepCopy() *RedirectHostTokensObservation {
	if in == nil {
		return nil
	}
	out := new(RedirectHostTokensObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectHostTokensParameters) DeepCopyInto(out *RedirectHostTokensParameters) {
	*out = *in
	if in.EndIndex != nil {
		in, out := &in.EndIndex, &out.EndIndex
		*out = new(string)
		**out = **in
	}
	if in.StartIndex != nil {
		in, out := &in.StartIndex, &out.StartIndex
		*out = new(string)
		**out = **in
	}
	if in.StrValue != nil {
		in, out := &in.StrValue, &out.StrValue
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectHostTokensParameters.
func (in *RedirectHostTokensParameters) DeepCopy() *RedirectHostTokensParameters {
	if in == nil {
		return nil
	}
	out := new(RedirectHostTokensParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectInitParameters) DeepCopyInto(out *RedirectInitParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectInitParameters.
func (in *RedirectInitParameters) DeepCopy() *RedirectInitParameters {
	if in == nil {
		return nil
	}
	out := new(RedirectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectObservation) DeepCopyInto(out *RedirectObservation) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectObservation.
func (in *RedirectObservation) DeepCopy() *RedirectObservation {
	if in == nil {
		return nil
	}
	out := new(RedirectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectParameters) DeepCopyInto(out *RedirectParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectParameters.
func (in *RedirectParameters) DeepCopy() *RedirectParameters {
	if in == nil {
		return nil
	}
	out := new(RedirectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectPathInitParameters) DeepCopyInto(out *RedirectPathInitParameters) {
	*out = *in
	if in.Tokens != nil {
		in, out := &in.Tokens, &out.Tokens
		*out = make([]RedirectPathTokensInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectPathInitParameters.
func (in *RedirectPathInitParameters) DeepCopy() *RedirectPathInitParameters {
	if in == nil {
		return nil
	}
	out := new(RedirectPathInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectPathObservation) DeepCopyInto(out *RedirectPathObservation) {
	*out = *in
	if in.Tokens != nil {
		in, out := &in.Tokens, &out.Tokens
		*out = make([]RedirectPathTokensObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectPathObservation.
func (in *RedirectPathObservation) DeepCopy() *RedirectPathObservation {
	if in == nil {
		return nil
	}
	out := new(RedirectPathObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectPathParameters) DeepCopyInto(out *RedirectPathParameters) {
	*out = *in
	if in.Tokens != nil {
		in, out := &in.Tokens, &out.Tokens
		*out = make([]RedirectPathTokensParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectPathParameters.
func (in *RedirectPathParameters) DeepCopy() *RedirectPathParameters {
	if in == nil {
		return nil
	}
	out := new(RedirectPathParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectPathTokensInitParameters) DeepCopyInto(out *RedirectPathTokensInitParameters) {
	*out = *in
	if in.EndIndex != nil {
		in, out := &in.EndIndex, &out.EndIndex
		*out = new(string)
		**out = **in
	}
	if in.StartIndex != nil {
		in, out := &in.StartIndex, &out.StartIndex
		*out = new(string)
		**out = **in
	}
	if in.StrValue != nil {
		in, out := &in.StrValue, &out.StrValue
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectPathTokensInitParameters.
func (in *RedirectPathTokensInitParameters) DeepCopy() *RedirectPathTokensInitParameters {
	if in == nil {
		return nil
	}
	out := new(RedirectPathTokensInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectPathTokensObservation) DeepCopyInto(out *RedirectPathTokensObservation) {
	*out = *in
	if in.EndIndex != nil {
		in, out := &in.EndIndex, &out.EndIndex
		*out = new(string)
		**out = **in
	}
	if in.StartIndex != nil {
		in, out := &in.StartIndex, &out.StartIndex
		*out = new(string)
		**out = **in
	}
	if in.StrValue != nil {
		in, out := &in.StrValue, &out.StrValue
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectPathTokensObservation.
func (in *RedirectPathTokensObservation) DeepCopy() *RedirectPathTokensObservation {
	if in == nil {
		return nil
	}
	out := new(RedirectPathTokensObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectPathTokensParameters) DeepCopyInto(out *RedirectPathTokensParameters) {
	*out = *in
	if in.EndIndex != nil {
		in, out := &in.EndIndex, &out.EndIndex
		*out = new(string)
		**out = **in
	}
	if in.StartIndex != nil {
		in, out := &in.StartIndex, &out.StartIndex
		*out = new(string)
		**out = **in
	}
	if in.StrValue != nil {
		in, out := &in.StrValue, &out.StrValue
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectPathTokensParameters.
func (in *RedirectPathTokensParameters) DeepCopy() *RedirectPathTokensParameters {
	if in == nil {
		return nil
	}
	out := new(RedirectPathTokensParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplacementStringInitParameters) DeepCopyInto(out *ReplacementStringInitParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Val != nil {
		in, out := &in.Val, &out.Val
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplacementStringInitParameters.
func (in *ReplacementStringInitParameters) DeepCopy() *ReplacementStringInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReplacementStringInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplacementStringObservation) DeepCopyInto(out *ReplacementStringObservation) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Val != nil {
		in, out := &in.Val, &out.Val
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplacementStringObservation.
func (in *ReplacementStringObservation) DeepCopy() *ReplacementStringObservation {
	if in == nil {
		return nil
	}
	out := new(ReplacementStringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplacementStringParameters) DeepCopyInto(out *ReplacementStringParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Val != nil {
		in, out := &in.Val, &out.Val
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplacementStringParameters.
func (in *ReplacementStringParameters) DeepCopy() *ReplacementStringParameters {
	if in == nil {
		return nil
	}
	out := new(ReplacementStringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationPolicyInitParameters) DeepCopyInto(out *ReplicationPolicyInitParameters) {
	*out = *in
	if in.CheckpointRef != nil {
		in, out := &in.CheckpointRef, &out.CheckpointRef
		*out = new(string)
		**out = **in
	}
	if in.ReplicationMode != nil {
		in, out := &in.ReplicationMode, &out.ReplicationMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationPolicyInitParameters.
func (in *ReplicationPolicyInitParameters) DeepCopy() *ReplicationPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReplicationPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationPolicyObservation) DeepCopyInto(out *ReplicationPolicyObservation) {
	*out = *in
	if in.CheckpointRef != nil {
		in, out := &in.CheckpointRef, &out.CheckpointRef
		*out = new(string)
		**out = **in
	}
	if in.ReplicationMode != nil {
		in, out := &in.ReplicationMode, &out.ReplicationMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationPolicyObservation.
func (in *ReplicationPolicyObservation) DeepCopy() *ReplicationPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(ReplicationPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationPolicyParameters) DeepCopyInto(out *ReplicationPolicyParameters) {
	*out = *in
	if in.CheckpointRef != nil {
		in, out := &in.CheckpointRef, &out.CheckpointRef
		*out = new(string)
		**out = **in
	}
	if in.ReplicationMode != nil {
		in, out := &in.ReplicationMode, &out.ReplicationMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationPolicyParameters.
func (in *ReplicationPolicyParameters) DeepCopy() *ReplicationPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(ReplicationPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestsRateLimitActionFileInitParameters) DeepCopyInto(out *RequestsRateLimitActionFileInitParameters) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.FileContent != nil {
		in, out := &in.FileContent, &out.FileContent
		*out = new(string)
		**out = **in
	}
	if in.FileLength != nil {
		in, out := &in.FileLength, &out.FileLength
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestsRateLimitActionFileInitParameters.
func (in *RequestsRateLimitActionFileInitParameters) DeepCopy() *RequestsRateLimitActionFileInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequestsRateLimitActionFileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestsRateLimitActionFileObservation) DeepCopyInto(out *RequestsRateLimitActionFileObservation) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.FileContent != nil {
		in, out := &in.FileContent, &out.FileContent
		*out = new(string)
		**out = **in
	}
	if in.FileLength != nil {
		in, out := &in.FileLength, &out.FileLength
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestsRateLimitActionFileObservation.
func (in *RequestsRateLimitActionFileObservation) DeepCopy() *RequestsRateLimitActionFileObservation {
	if in == nil {
		return nil
	}
	out := new(RequestsRateLimitActionFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestsRateLimitActionFileParameters) DeepCopyInto(out *RequestsRateLimitActionFileParameters) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.FileContent != nil {
		in, out := &in.FileContent, &out.FileContent
		*out = new(string)
		**out = **in
	}
	if in.FileLength != nil {
		in, out := &in.FileLength, &out.FileLength
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestsRateLimitActionFileParameters.
func (in *RequestsRateLimitActionFileParameters) DeepCopy() *RequestsRateLimitActionFileParameters {
	if in == nil {
		return nil
	}
	out := new(RequestsRateLimitActionFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestsRateLimitActionInitParameters) DeepCopyInto(out *RequestsRateLimitActionInitParameters) {
	*out = *in
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]RequestsRateLimitActionFileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Redirect != nil {
		in, out := &in.Redirect, &out.Redirect
		*out = make([]RequestsRateLimitActionRedirectInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestsRateLimitActionInitParameters.
func (in *RequestsRateLimitActionInitParameters) DeepCopy() *RequestsRateLimitActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequestsRateLimitActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestsRateLimitActionObservation) DeepCopyInto(out *RequestsRateLimitActionObservation) {
	*out = *in
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]RequestsRateLimitActionFileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Redirect != nil {
		in, out := &in.Redirect, &out.Redirect
		*out = make([]RequestsRateLimitActionRedirectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestsRateLimitActionObservation.
func (in *RequestsRateLimitActionObservation) DeepCopy() *RequestsRateLimitActionObservation {
	if in == nil {
		return nil
	}
	out := new(RequestsRateLimitActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestsRateLimitActionParameters) DeepCopyInto(out *RequestsRateLimitActionParameters) {
	*out = *in
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]RequestsRateLimitActionFileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Redirect != nil {
		in, out := &in.Redirect, &out.Redirect
		*out = make([]RequestsRateLimitActionRedirectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestsRateLimitActionParameters.
func (in *RequestsRateLimitActionParameters) DeepCopy() *RequestsRateLimitActionParameters {
	if in == nil {
		return nil
	}
	out := new(RequestsRateLimitActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestsRateLimitActionRedirectInitParameters) DeepCopyInto(out *RequestsRateLimitActionRedirectInitParameters) {
	*out = *in
	if in.AddString != nil {
		in, out := &in.AddString, &out.AddString
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = make([]ActionRedirectHostInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeepQuery != nil {
		in, out := &in.KeepQuery, &out.KeepQuery
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = make([]ActionRedirectPathInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestsRateLimitActionRedirectInitParameters.
func (in *RequestsRateLimitActionRedirectInitParameters) DeepCopy() *RequestsRateLimitActionRedirectInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequestsRateLimitActionRedirectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestsRateLimitActionRedirectObservation) DeepCopyInto(out *RequestsRateLimitActionRedirectObservation) {
	*out = *in
	if in.AddString != nil {
		in, out := &in.AddString, &out.AddString
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = make([]ActionRedirectHostObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeepQuery != nil {
		in, out := &in.KeepQuery, &out.KeepQuery
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = make([]ActionRedirectPathObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestsRateLimitActionRedirectObservation.
func (in *RequestsRateLimitActionRedirectObservation) DeepCopy() *RequestsRateLimitActionRedirectObservation {
	if in == nil {
		return nil
	}
	out := new(RequestsRateLimitActionRedirectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestsRateLimitActionRedirectParameters) DeepCopyInto(out *RequestsRateLimitActionRedirectParameters) {
	*out = *in
	if in.AddString != nil {
		in, out := &in.AddString, &out.AddString
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = make([]ActionRedirectHostParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeepQuery != nil {
		in, out := &in.KeepQuery, &out.KeepQuery
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = make([]ActionRedirectPathParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestsRateLimitActionRedirectParameters.
func (in *RequestsRateLimitActionRedirectParameters) DeepCopy() *RequestsRateLimitActionRedirectParameters {
	if in == nil {
		return nil
	}
	out := new(RequestsRateLimitActionRedirectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestsRateLimitInitParameters) DeepCopyInto(out *RequestsRateLimitInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]RequestsRateLimitActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExplicitTracking != nil {
		in, out := &in.ExplicitTracking, &out.ExplicitTracking
		*out = new(string)
		**out = **in
	}
	if in.FineGrain != nil {
		in, out := &in.FineGrain, &out.FineGrain
		*out = new(string)
		**out = **in
	}
	if in.HTTPCookie != nil {
		in, out := &in.HTTPCookie, &out.HTTPCookie
		*out = new(string)
		**out = **in
	}
	if in.HTTPHeader != nil {
		in, out := &in.HTTPHeader, &out.HTTPHeader
		*out = new(string)
		**out = **in
	}
	if in.RateLimiter != nil {
		in, out := &in.RateLimiter, &out.RateLimiter
		*out = make([]RequestsRateLimitRateLimiterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestsRateLimitInitParameters.
func (in *RequestsRateLimitInitParameters) DeepCopy() *RequestsRateLimitInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequestsRateLimitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestsRateLimitObservation) DeepCopyInto(out *RequestsRateLimitObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]RequestsRateLimitActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExplicitTracking != nil {
		in, out := &in.ExplicitTracking, &out.ExplicitTracking
		*out = new(string)
		**out = **in
	}
	if in.FineGrain != nil {
		in, out := &in.FineGrain, &out.FineGrain
		*out = new(string)
		**out = **in
	}
	if in.HTTPCookie != nil {
		in, out := &in.HTTPCookie, &out.HTTPCookie
		*out = new(string)
		**out = **in
	}
	if in.HTTPHeader != nil {
		in, out := &in.HTTPHeader, &out.HTTPHeader
		*out = new(string)
		**out = **in
	}
	if in.RateLimiter != nil {
		in, out := &in.RateLimiter, &out.RateLimiter
		*out = make([]RequestsRateLimitRateLimiterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestsRateLimitObservation.
func (in *RequestsRateLimitObservation) DeepCopy() *RequestsRateLimitObservation {
	if in == nil {
		return nil
	}
	out := new(RequestsRateLimitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestsRateLimitParameters) DeepCopyInto(out *RequestsRateLimitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]RequestsRateLimitActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExplicitTracking != nil {
		in, out := &in.ExplicitTracking, &out.ExplicitTracking
		*out = new(string)
		**out = **in
	}
	if in.FineGrain != nil {
		in, out := &in.FineGrain, &out.FineGrain
		*out = new(string)
		**out = **in
	}
	if in.HTTPCookie != nil {
		in, out := &in.HTTPCookie, &out.HTTPCookie
		*out = new(string)
		**out = **in
	}
	if in.HTTPHeader != nil {
		in, out := &in.HTTPHeader, &out.HTTPHeader
		*out = new(string)
		**out = **in
	}
	if in.RateLimiter != nil {
		in, out := &in.RateLimiter, &out.RateLimiter
		*out = make([]RequestsRateLimitRateLimiterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestsRateLimitParameters.
func (in *RequestsRateLimitParameters) DeepCopy() *RequestsRateLimitParameters {
	if in == nil {
		return nil
	}
	out := new(RequestsRateLimitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestsRateLimitRateLimiterInitParameters) DeepCopyInto(out *RequestsRateLimitRateLimiterInitParameters) {
	*out = *in
	if in.BurstSz != nil {
		in, out := &in.BurstSz, &out.BurstSz
		*out = new(string)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestsRateLimitRateLimiterInitParameters.
func (in *RequestsRateLimitRateLimiterInitParameters) DeepCopy() *RequestsRateLimitRateLimiterInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequestsRateLimitRateLimiterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestsRateLimitRateLimiterObservation) DeepCopyInto(out *RequestsRateLimitRateLimiterObservation) {
	*out = *in
	if in.BurstSz != nil {
		in, out := &in.BurstSz, &out.BurstSz
		*out = new(string)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestsRateLimitRateLimiterObservation.
func (in *RequestsRateLimitRateLimiterObservation) DeepCopy() *RequestsRateLimitRateLimiterObservation {
	if in == nil {
		return nil
	}
	out := new(RequestsRateLimitRateLimiterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestsRateLimitRateLimiterParameters) DeepCopyInto(out *RequestsRateLimitRateLimiterParameters) {
	*out = *in
	if in.BurstSz != nil {
		in, out := &in.BurstSz, &out.BurstSz
		*out = new(string)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestsRateLimitRateLimiterParameters.
func (in *RequestsRateLimitRateLimiterParameters) DeepCopy() *RequestsRateLimitRateLimiterParameters {
	if in == nil {
		return nil
	}
	out := new(RequestsRateLimitRateLimiterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceServerInitParameters) DeepCopyInto(out *ResourceServerInitParameters) {
	*out = *in
	if in.AccessType != nil {
		in, out := &in.AccessType, &out.AccessType
		*out = new(string)
		**out = **in
	}
	if in.IntrospectionDataTimeout != nil {
		in, out := &in.IntrospectionDataTimeout, &out.IntrospectionDataTimeout
		*out = new(string)
		**out = **in
	}
	if in.JwtParams != nil {
		in, out := &in.JwtParams, &out.JwtParams
		*out = make([]JwtParamsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OpaqueTokenParams != nil {
		in, out := &in.OpaqueTokenParams, &out.OpaqueTokenParams
		*out = make([]OpaqueTokenParamsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceServerInitParameters.
func (in *ResourceServerInitParameters) DeepCopy() *ResourceServerInitParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceServerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceServerObservation) DeepCopyInto(out *ResourceServerObservation) {
	*out = *in
	if in.AccessType != nil {
		in, out := &in.AccessType, &out.AccessType
		*out = new(string)
		**out = **in
	}
	if in.IntrospectionDataTimeout != nil {
		in, out := &in.IntrospectionDataTimeout, &out.IntrospectionDataTimeout
		*out = new(string)
		**out = **in
	}
	if in.JwtParams != nil {
		in, out := &in.JwtParams, &out.JwtParams
		*out = make([]JwtParamsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OpaqueTokenParams != nil {
		in, out := &in.OpaqueTokenParams, &out.OpaqueTokenParams
		*out = make([]OpaqueTokenParamsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceServerObservation.
func (in *ResourceServerObservation) DeepCopy() *ResourceServerObservation {
	if in == nil {
		return nil
	}
	out := new(ResourceServerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceServerParameters) DeepCopyInto(out *ResourceServerParameters) {
	*out = *in
	if in.AccessType != nil {
		in, out := &in.AccessType, &out.AccessType
		*out = new(string)
		**out = **in
	}
	if in.IntrospectionDataTimeout != nil {
		in, out := &in.IntrospectionDataTimeout, &out.IntrospectionDataTimeout
		*out = new(string)
		**out = **in
	}
	if in.JwtParams != nil {
		in, out := &in.JwtParams, &out.JwtParams
		*out = make([]JwtParamsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OpaqueTokenParams != nil {
		in, out := &in.OpaqueTokenParams, &out.OpaqueTokenParams
		*out = make([]OpaqueTokenParamsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceServerParameters.
func (in *ResourceServerParameters) DeepCopy() *ResourceServerParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceServerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourcesInitParameters) DeepCopyInto(out *ResourcesInitParameters) {
	*out = *in
	if in.CoresPerSocket != nil {
		in, out := &in.CoresPerSocket, &out.CoresPerSocket
		*out = new(string)
		**out = **in
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = new(string)
		**out = **in
	}
	if in.HyperThreading != nil {
		in, out := &in.HyperThreading, &out.HyperThreading
		*out = new(string)
		**out = **in
	}
	if in.HypervisorMode != nil {
		in, out := &in.HypervisorMode, &out.HypervisorMode
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
	if in.NumDatapathProcesses != nil {
		in, out := &in.NumDatapathProcesses, &out.NumDatapathProcesses
		*out = new(string)
		**out = **in
	}
	if in.NumVcpus != nil {
		in, out := &in.NumVcpus, &out.NumVcpus
		*out = new(string)
		**out = **in
	}
	if in.Sockets != nil {
		in, out := &in.Sockets, &out.Sockets
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourcesInitParameters.
func (in *ResourcesInitParameters) DeepCopy() *ResourcesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ResourcesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourcesObservation) DeepCopyInto(out *ResourcesObservation) {
	*out = *in
	if in.CoresPerSocket != nil {
		in, out := &in.CoresPerSocket, &out.CoresPerSocket
		*out = new(string)
		**out = **in
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = new(string)
		**out = **in
	}
	if in.HyperThreading != nil {
		in, out := &in.HyperThreading, &out.HyperThreading
		*out = new(string)
		**out = **in
	}
	if in.HypervisorMode != nil {
		in, out := &in.HypervisorMode, &out.HypervisorMode
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
	if in.NumDatapathProcesses != nil {
		in, out := &in.NumDatapathProcesses, &out.NumDatapathProcesses
		*out = new(string)
		**out = **in
	}
	if in.NumVcpus != nil {
		in, out := &in.NumVcpus, &out.NumVcpus
		*out = new(string)
		**out = **in
	}
	if in.Sockets != nil {
		in, out := &in.Sockets, &out.Sockets
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourcesObservation.
func (in *ResourcesObservation) DeepCopy() *ResourcesObservation {
	if in == nil {
		return nil
	}
	out := new(ResourcesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourcesParameters) DeepCopyInto(out *ResourcesParameters) {
	*out = *in
	if in.CoresPerSocket != nil {
		in, out := &in.CoresPerSocket, &out.CoresPerSocket
		*out = new(string)
		**out = **in
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = new(string)
		**out = **in
	}
	if in.HyperThreading != nil {
		in, out := &in.HyperThreading, &out.HyperThreading
		*out = new(string)
		**out = **in
	}
	if in.HypervisorMode != nil {
		in, out := &in.HypervisorMode, &out.HypervisorMode
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
	if in.NumDatapathProcesses != nil {
		in, out := &in.NumDatapathProcesses, &out.NumDatapathProcesses
		*out = new(string)
		**out = **in
	}
	if in.NumVcpus != nil {
		in, out := &in.NumVcpus, &out.NumVcpus
		*out = new(string)
		**out = **in
	}
	if in.Sockets != nil {
		in, out := &in.Sockets, &out.Sockets
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourcesParameters.
func (in *ResourcesParameters) DeepCopy() *ResourcesParameters {
	if in == nil {
		return nil
	}
	out := new(ResourcesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RspRewriteRulesInitParameters) DeepCopyInto(out *RspRewriteRulesInitParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(string)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pairs != nil {
		in, out := &in.Pairs, &out.Pairs
		*out = make([]PairsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RspRewriteRulesInitParameters.
func (in *RspRewriteRulesInitParameters) DeepCopy() *RspRewriteRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RspRewriteRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RspRewriteRulesObservation) DeepCopyInto(out *RspRewriteRulesObservation) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(string)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pairs != nil {
		in, out := &in.Pairs, &out.Pairs
		*out = make([]PairsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RspRewriteRulesObservation.
func (in *RspRewriteRulesObservation) DeepCopy() *RspRewriteRulesObservation {
	if in == nil {
		return nil
	}
	out := new(RspRewriteRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RspRewriteRulesParameters) DeepCopyInto(out *RspRewriteRulesParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(string)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pairs != nil {
		in, out := &in.Pairs, &out.Pairs
		*out = make([]PairsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RspRewriteRulesParameters.
func (in *RspRewriteRulesParameters) DeepCopy() *RspRewriteRulesParameters {
	if in == nil {
		return nil
	}
	out := new(RspRewriteRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesInitParameters) DeepCopyInto(out *RulesInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.DnatIP != nil {
		in, out := &in.DnatIP, &out.DnatIP
		*out = make([]DnatIPInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DstIP != nil {
		in, out := &in.DstIP, &out.DstIP
		*out = make([]DstIPInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DstPort != nil {
		in, out := &in.DstPort, &out.DstPort
		*out = make([]DstPortInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InputInterface != nil {
		in, out := &in.InputInterface, &out.InputInterface
		*out = new(string)
		**out = **in
	}
	if in.OutputInterface != nil {
		in, out := &in.OutputInterface, &out.OutputInterface
		*out = new(string)
		**out = **in
	}
	if in.Proto != nil {
		in, out := &in.Proto, &out.Proto
		*out = new(string)
		**out = **in
	}
	if in.SrcIP != nil {
		in, out := &in.SrcIP, &out.SrcIP
		*out = make([]SrcIPInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SrcPort != nil {
		in, out := &in.SrcPort, &out.SrcPort
		*out = make([]SrcPortInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesInitParameters.
func (in *RulesInitParameters) DeepCopy() *RulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesObservation) DeepCopyInto(out *RulesObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.DnatIP != nil {
		in, out := &in.DnatIP, &out.DnatIP
		*out = make([]DnatIPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DstIP != nil {
		in, out := &in.DstIP, &out.DstIP
		*out = make([]DstIPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DstPort != nil {
		in, out := &in.DstPort, &out.DstPort
		*out = make([]DstPortObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InputInterface != nil {
		in, out := &in.InputInterface, &out.InputInterface
		*out = new(string)
		**out = **in
	}
	if in.OutputInterface != nil {
		in, out := &in.OutputInterface, &out.OutputInterface
		*out = new(string)
		**out = **in
	}
	if in.Proto != nil {
		in, out := &in.Proto, &out.Proto
		*out = new(string)
		**out = **in
	}
	if in.SrcIP != nil {
		in, out := &in.SrcIP, &out.SrcIP
		*out = make([]SrcIPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SrcPort != nil {
		in, out := &in.SrcPort, &out.SrcPort
		*out = make([]SrcPortObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesObservation.
func (in *RulesObservation) DeepCopy() *RulesObservation {
	if in == nil {
		return nil
	}
	out := new(RulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulesParameters) DeepCopyInto(out *RulesParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.DnatIP != nil {
		in, out := &in.DnatIP, &out.DnatIP
		*out = make([]DnatIPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DstIP != nil {
		in, out := &in.DstIP, &out.DstIP
		*out = make([]DstIPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DstPort != nil {
		in, out := &in.DstPort, &out.DstPort
		*out = make([]DstPortParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InputInterface != nil {
		in, out := &in.InputInterface, &out.InputInterface
		*out = new(string)
		**out = **in
	}
	if in.OutputInterface != nil {
		in, out := &in.OutputInterface, &out.OutputInterface
		*out = new(string)
		**out = **in
	}
	if in.Proto != nil {
		in, out := &in.Proto, &out.Proto
		*out = new(string)
		**out = **in
	}
	if in.SrcIP != nil {
		in, out := &in.SrcIP, &out.SrcIP
		*out = make([]SrcIPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SrcPort != nil {
		in, out := &in.SrcPort, &out.SrcPort
		*out = make([]SrcPortParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulesParameters.
func (in *RulesParameters) DeepCopy() *RulesParameters {
	if in == nil {
		return nil
	}
	out := new(RulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SAMLSpConfigInitParameters) DeepCopyInto(out *SAMLSpConfigInitParameters) {
	*out = *in
	if in.AcsIndex != nil {
		in, out := &in.AcsIndex, &out.AcsIndex
		*out = new(string)
		**out = **in
	}
	if in.AuthnReqAcsType != nil {
		in, out := &in.AuthnReqAcsType, &out.AuthnReqAcsType
		*out = new(string)
		**out = **in
	}
	if in.CookieName != nil {
		in, out := &in.CookieName, &out.CookieName
		*out = new(string)
		**out = **in
	}
	if in.CookieTimeout != nil {
		in, out := &in.CookieTimeout, &out.CookieTimeout
		*out = new(string)
		**out = **in
	}
	if in.EntityID != nil {
		in, out := &in.EntityID, &out.EntityID
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = make([]SAMLSpConfigKeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SigningSSLKeyAndCertificateRef != nil {
		in, out := &in.SigningSSLKeyAndCertificateRef, &out.SigningSSLKeyAndCertificateRef
		*out = new(string)
		**out = **in
	}
	if in.SingleSignonURL != nil {
		in, out := &in.SingleSignonURL, &out.SingleSignonURL
		*out = new(string)
		**out = **in
	}
	if in.SpMetadata != nil {
		in, out := &in.SpMetadata, &out.SpMetadata
		*out = new(string)
		**out = **in
	}
	if in.UseIdpSessionTimeout != nil {
		in, out := &in.UseIdpSessionTimeout, &out.UseIdpSessionTimeout
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SAMLSpConfigInitParameters.
func (in *SAMLSpConfigInitParameters) DeepCopy() *SAMLSpConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(SAMLSpConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SAMLSpConfigKeyInitParameters) DeepCopyInto(out *SAMLSpConfigKeyInitParameters) {
	*out = *in
	if in.AesKey != nil {
		in, out := &in.AesKey, &out.AesKey
		*out = new(string)
		**out = **in
	}
	if in.HMACKey != nil {
		in, out := &in.HMACKey, &out.HMACKey
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SAMLSpConfigKeyInitParameters.
func (in *SAMLSpConfigKeyInitParameters) DeepCopy() *SAMLSpConfigKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(SAMLSpConfigKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SAMLSpConfigKeyObservation) DeepCopyInto(out *SAMLSpConfigKeyObservation) {
	*out = *in
	if in.AesKey != nil {
		in, out := &in.AesKey, &out.AesKey
		*out = new(string)
		**out = **in
	}
	if in.HMACKey != nil {
		in, out := &in.HMACKey, &out.HMACKey
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SAMLSpConfigKeyObservation.
func (in *SAMLSpConfigKeyObservation) DeepCopy() *SAMLSpConfigKeyObservation {
	if in == nil {
		return nil
	}
	out := new(SAMLSpConfigKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SAMLSpConfigKeyParameters) DeepCopyInto(out *SAMLSpConfigKeyParameters) {
	*out = *in
	if in.AesKey != nil {
		in, out := &in.AesKey, &out.AesKey
		*out = new(string)
		**out = **in
	}
	if in.HMACKey != nil {
		in, out := &in.HMACKey, &out.HMACKey
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SAMLSpConfigKeyParameters.
func (in *SAMLSpConfigKeyParameters) DeepCopy() *SAMLSpConfigKeyParameters {
	if in == nil {
		return nil
	}
	out := new(SAMLSpConfigKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SAMLSpConfigObservation) DeepCopyInto(out *SAMLSpConfigObservation) {
	*out = *in
	if in.AcsIndex != nil {
		in, out := &in.AcsIndex, &out.AcsIndex
		*out = new(string)
		**out = **in
	}
	if in.AuthnReqAcsType != nil {
		in, out := &in.AuthnReqAcsType, &out.AuthnReqAcsType
		*out = new(string)
		**out = **in
	}
	if in.CookieName != nil {
		in, out := &in.CookieName, &out.CookieName
		*out = new(string)
		**out = **in
	}
	if in.CookieTimeout != nil {
		in, out := &in.CookieTimeout, &out.CookieTimeout
		*out = new(string)
		**out = **in
	}
	if in.EntityID != nil {
		in, out := &in.EntityID, &out.EntityID
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = make([]SAMLSpConfigKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SigningSSLKeyAndCertificateRef != nil {
		in, out := &in.SigningSSLKeyAndCertificateRef, &out.SigningSSLKeyAndCertificateRef
		*out = new(string)
		**out = **in
	}
	if in.SingleSignonURL != nil {
		in, out := &in.SingleSignonURL, &out.SingleSignonURL
		*out = new(string)
		**out = **in
	}
	if in.SpMetadata != nil {
		in, out := &in.SpMetadata, &out.SpMetadata
		*out = new(string)
		**out = **in
	}
	if in.UseIdpSessionTimeout != nil {
		in, out := &in.UseIdpSessionTimeout, &out.UseIdpSessionTimeout
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SAMLSpConfigObservation.
func (in *SAMLSpConfigObservation) DeepCopy() *SAMLSpConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SAMLSpConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SAMLSpConfigParameters) DeepCopyInto(out *SAMLSpConfigParameters) {
	*out = *in
	if in.AcsIndex != nil {
		in, out := &in.AcsIndex, &out.AcsIndex
		*out = new(string)
		**out = **in
	}
	if in.AuthnReqAcsType != nil {
		in, out := &in.AuthnReqAcsType, &out.AuthnReqAcsType
		*out = new(string)
		**out = **in
	}
	if in.CookieName != nil {
		in, out := &in.CookieName, &out.CookieName
		*out = new(string)
		**out = **in
	}
	if in.CookieTimeout != nil {
		in, out := &in.CookieTimeout, &out.CookieTimeout
		*out = new(string)
		**out = **in
	}
	if in.EntityID != nil {
		in, out := &in.EntityID, &out.EntityID
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = make([]SAMLSpConfigKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SigningSSLKeyAndCertificateRef != nil {
		in, out := &in.SigningSSLKeyAndCertificateRef, &out.SigningSSLKeyAndCertificateRef
		*out = new(string)
		**out = **in
	}
	if in.SingleSignonURL != nil {
		in, out := &in.SingleSignonURL, &out.SingleSignonURL
		*out = new(string)
		**out = **in
	}
	if in.SpMetadata != nil {
		in, out := &in.SpMetadata, &out.SpMetadata
		*out = new(string)
		**out = **in
	}
	if in.UseIdpSessionTimeout != nil {
		in, out := &in.UseIdpSessionTimeout, &out.UseIdpSessionTimeout
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SAMLSpConfigParameters.
func (in *SAMLSpConfigParameters) DeepCopy() *SAMLSpConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SAMLSpConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLProfileSelectorsInitParameters) DeepCopyInto(out *SSLProfileSelectorsInitParameters) {
	*out = *in
	if in.ClientIPList != nil {
		in, out := &in.ClientIPList, &out.ClientIPList
		*out = make([]ClientIPListInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSLProfileRef != nil {
		in, out := &in.SSLProfileRef, &out.SSLProfileRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLProfileSelectorsInitParameters.
func (in *SSLProfileSelectorsInitParameters) DeepCopy() *SSLProfileSelectorsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SSLProfileSelectorsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLProfileSelectorsObservation) DeepCopyInto(out *SSLProfileSelectorsObservation) {
	*out = *in
	if in.ClientIPList != nil {
		in, out := &in.ClientIPList, &out.ClientIPList
		*out = make([]ClientIPListObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSLProfileRef != nil {
		in, out := &in.SSLProfileRef, &out.SSLProfileRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLProfileSelectorsObservation.
func (in *SSLProfileSelectorsObservation) DeepCopy() *SSLProfileSelectorsObservation {
	if in == nil {
		return nil
	}
	out := new(SSLProfileSelectorsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLProfileSelectorsParameters) DeepCopyInto(out *SSLProfileSelectorsParameters) {
	*out = *in
	if in.ClientIPList != nil {
		in, out := &in.ClientIPList, &out.ClientIPList
		*out = make([]ClientIPListParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSLProfileRef != nil {
		in, out := &in.SSLProfileRef, &out.SSLProfileRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLProfileSelectorsParameters.
func (in *SSLProfileSelectorsParameters) DeepCopy() *SSLProfileSelectorsParameters {
	if in == nil {
		return nil
	}
	out := new(SSLProfileSelectorsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SampleUrisInitParameters) DeepCopyInto(out *SampleUrisInitParameters) {
	*out = *in
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.MatchStr != nil {
		in, out := &in.MatchStr, &out.MatchStr
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StringGroupRefs != nil {
		in, out := &in.StringGroupRefs, &out.StringGroupRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SampleUrisInitParameters.
func (in *SampleUrisInitParameters) DeepCopy() *SampleUrisInitParameters {
	if in == nil {
		return nil
	}
	out := new(SampleUrisInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SampleUrisObservation) DeepCopyInto(out *SampleUrisObservation) {
	*out = *in
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.MatchStr != nil {
		in, out := &in.MatchStr, &out.MatchStr
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StringGroupRefs != nil {
		in, out := &in.StringGroupRefs, &out.StringGroupRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SampleUrisObservation.
func (in *SampleUrisObservation) DeepCopy() *SampleUrisObservation {
	if in == nil {
		return nil
	}
	out := new(SampleUrisObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SampleUrisParameters) DeepCopyInto(out *SampleUrisParameters) {
	*out = *in
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.MatchStr != nil {
		in, out := &in.MatchStr, &out.MatchStr
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StringGroupRefs != nil {
		in, out := &in.StringGroupRefs, &out.StringGroupRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SampleUrisParameters.
func (in *SampleUrisParameters) DeepCopy() *SampleUrisParameters {
	if in == nil {
		return nil
	}
	out := new(SampleUrisParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SeDosProfileInitParameters) DeepCopyInto(out *SeDosProfileInitParameters) {
	*out = *in
	if in.ThreshInfo != nil {
		in, out := &in.ThreshInfo, &out.ThreshInfo
		*out = make([]ThreshInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ThreshPeriod != nil {
		in, out := &in.ThreshPeriod, &out.ThreshPeriod
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SeDosProfileInitParameters.
func (in *SeDosProfileInitParameters) DeepCopy() *SeDosProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(SeDosProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SeDosProfileObservation) DeepCopyInto(out *SeDosProfileObservation) {
	*out = *in
	if in.ThreshInfo != nil {
		in, out := &in.ThreshInfo, &out.ThreshInfo
		*out = make([]ThreshInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ThreshPeriod != nil {
		in, out := &in.ThreshPeriod, &out.ThreshPeriod
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SeDosProfileObservation.
func (in *SeDosProfileObservation) DeepCopy() *SeDosProfileObservation {
	if in == nil {
		return nil
	}
	out := new(SeDosProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SeDosProfileParameters) DeepCopyInto(out *SeDosProfileParameters) {
	*out = *in
	if in.ThreshInfo != nil {
		in, out := &in.ThreshInfo, &out.ThreshInfo
		*out = make([]ThreshInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ThreshPeriod != nil {
		in, out := &in.ThreshPeriod, &out.ThreshPeriod
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SeDosProfileParameters.
func (in *SeDosProfileParameters) DeepCopy() *SeDosProfileParameters {
	if in == nil {
		return nil
	}
	out := new(SeDosProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SeGroupAnalyticsPolicyInitParameters) DeepCopyInto(out *SeGroupAnalyticsPolicyInitParameters) {
	*out = *in
	if in.MetricsEventThresholds != nil {
		in, out := &in.MetricsEventThresholds, &out.MetricsEventThresholds
		*out = make([]MetricsEventThresholdsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SeGroupAnalyticsPolicyInitParameters.
func (in *SeGroupAnalyticsPolicyInitParameters) DeepCopy() *SeGroupAnalyticsPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(SeGroupAnalyticsPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SeGroupAnalyticsPolicyObservation) DeepCopyInto(out *SeGroupAnalyticsPolicyObservation) {
	*out = *in
	if in.MetricsEventThresholds != nil {
		in, out := &in.MetricsEventThresholds, &out.MetricsEventThresholds
		*out = make([]MetricsEventThresholdsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SeGroupAnalyticsPolicyObservation.
func (in *SeGroupAnalyticsPolicyObservation) DeepCopy() *SeGroupAnalyticsPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(SeGroupAnalyticsPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SeGroupAnalyticsPolicyParameters) DeepCopyInto(out *SeGroupAnalyticsPolicyParameters) {
	*out = *in
	if in.MetricsEventThresholds != nil {
		in, out := &in.MetricsEventThresholds, &out.MetricsEventThresholds
		*out = make([]MetricsEventThresholdsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SeGroupAnalyticsPolicyParameters.
func (in *SeGroupAnalyticsPolicyParameters) DeepCopy() *SeGroupAnalyticsPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(SeGroupAnalyticsPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SeRlPropInitParameters) DeepCopyInto(out *SeRlPropInitParameters) {
	*out = *in
	if in.MsfNumStages != nil {
		in, out := &in.MsfNumStages, &out.MsfNumStages
		*out = new(string)
		**out = **in
	}
	if in.MsfStageSize != nil {
		in, out := &in.MsfStageSize, &out.MsfStageSize
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SeRlPropInitParameters.
func (in *SeRlPropInitParameters) DeepCopy() *SeRlPropInitParameters {
	if in == nil {
		return nil
	}
	out := new(SeRlPropInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SeRlPropObservation) DeepCopyInto(out *SeRlPropObservation) {
	*out = *in
	if in.MsfNumStages != nil {
		in, out := &in.MsfNumStages, &out.MsfNumStages
		*out = new(string)
		**out = **in
	}
	if in.MsfStageSize != nil {
		in, out := &in.MsfStageSize, &out.MsfStageSize
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SeRlPropObservation.
func (in *SeRlPropObservation) DeepCopy() *SeRlPropObservation {
	if in == nil {
		return nil
	}
	out := new(SeRlPropObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SeRlPropParameters) DeepCopyInto(out *SeRlPropParameters) {
	*out = *in
	if in.MsfNumStages != nil {
		in, out := &in.MsfNumStages, &out.MsfNumStages
		*out = new(string)
		**out = **in
	}
	if in.MsfStageSize != nil {
		in, out := &in.MsfStageSize, &out.MsfStageSize
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SeRlPropParameters.
func (in *SeRlPropParameters) DeepCopy() *SeRlPropParameters {
	if in == nil {
		return nil
	}
	out := new(SeRlPropParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SeTimeTrackerPropsInitParameters) DeepCopyInto(out *SeTimeTrackerPropsInitParameters) {
	*out = *in
	if in.EgressAuditMode != nil {
		in, out := &in.EgressAuditMode, &out.EgressAuditMode
		*out = new(string)
		**out = **in
	}
	if in.EgressThreshold != nil {
		in, out := &in.EgressThreshold, &out.EgressThreshold
		*out = new(string)
		**out = **in
	}
	if in.EventGenWindow != nil {
		in, out := &in.EventGenWindow, &out.EventGenWindow
		*out = new(string)
		**out = **in
	}
	if in.IngressAuditMode != nil {
		in, out := &in.IngressAuditMode, &out.IngressAuditMode
		*out = new(string)
		**out = **in
	}
	if in.IngressThreshold != nil {
		in, out := &in.IngressThreshold, &out.IngressThreshold
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SeTimeTrackerPropsInitParameters.
func (in *SeTimeTrackerPropsInitParameters) DeepCopy() *SeTimeTrackerPropsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SeTimeTrackerPropsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SeTimeTrackerPropsObservation) DeepCopyInto(out *SeTimeTrackerPropsObservation) {
	*out = *in
	if in.EgressAuditMode != nil {
		in, out := &in.EgressAuditMode, &out.EgressAuditMode
		*out = new(string)
		**out = **in
	}
	if in.EgressThreshold != nil {
		in, out := &in.EgressThreshold, &out.EgressThreshold
		*out = new(string)
		**out = **in
	}
	if in.EventGenWindow != nil {
		in, out := &in.EventGenWindow, &out.EventGenWindow
		*out = new(string)
		**out = **in
	}
	if in.IngressAuditMode != nil {
		in, out := &in.IngressAuditMode, &out.IngressAuditMode
		*out = new(string)
		**out = **in
	}
	if in.IngressThreshold != nil {
		in, out := &in.IngressThreshold, &out.IngressThreshold
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SeTimeTrackerPropsObservation.
func (in *SeTimeTrackerPropsObservation) DeepCopy() *SeTimeTrackerPropsObservation {
	if in == nil {
		return nil
	}
	out := new(SeTimeTrackerPropsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SeTimeTrackerPropsParameters) DeepCopyInto(out *SeTimeTrackerPropsParameters) {
	*out = *in
	if in.EgressAuditMode != nil {
		in, out := &in.EgressAuditMode, &out.EgressAuditMode
		*out = new(string)
		**out = **in
	}
	if in.EgressThreshold != nil {
		in, out := &in.EgressThreshold, &out.EgressThreshold
		*out = new(string)
		**out = **in
	}
	if in.EventGenWindow != nil {
		in, out := &in.EventGenWindow, &out.EventGenWindow
		*out = new(string)
		**out = **in
	}
	if in.IngressAuditMode != nil {
		in, out := &in.IngressAuditMode, &out.IngressAuditMode
		*out = new(string)
		**out = **in
	}
	if in.IngressThreshold != nil {
		in, out := &in.IngressThreshold, &out.IngressThreshold
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SeTimeTrackerPropsParameters.
func (in *SeTimeTrackerPropsParameters) DeepCopy() *SeTimeTrackerPropsParameters {
	if in == nil {
		return nil
	}
	out := new(SeTimeTrackerPropsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SeTracertPortRangeInitParameters) DeepCopyInto(out *SeTracertPortRangeInitParameters) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SeTracertPortRangeInitParameters.
func (in *SeTracertPortRangeInitParameters) DeepCopy() *SeTracertPortRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(SeTracertPortRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SeTracertPortRangeObservation) DeepCopyInto(out *SeTracertPortRangeObservation) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SeTracertPortRangeObservation.
func (in *SeTracertPortRangeObservation) DeepCopy() *SeTracertPortRangeObservation {
	if in == nil {
		return nil
	}
	out := new(SeTracertPortRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SeTracertPortRangeParameters) DeepCopyInto(out *SeTracertPortRangeParameters) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SeTracertPortRangeParameters.
func (in *SeTracertPortRangeParameters) DeepCopy() *SeTracertPortRangeParameters {
	if in == nil {
		return nil
	}
	out := new(SeTracertPortRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SearchStringInitParameters) DeepCopyInto(out *SearchStringInitParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Val != nil {
		in, out := &in.Val, &out.Val
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SearchStringInitParameters.
func (in *SearchStringInitParameters) DeepCopy() *SearchStringInitParameters {
	if in == nil {
		return nil
	}
	out := new(SearchStringInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SearchStringObservation) DeepCopyInto(out *SearchStringObservation) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Val != nil {
		in, out := &in.Val, &out.Val
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SearchStringObservation.
func (in *SearchStringObservation) DeepCopy() *SearchStringObservation {
	if in == nil {
		return nil
	}
	out := new(SearchStringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SearchStringParameters) DeepCopyInto(out *SearchStringParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Val != nil {
		in, out := &in.Val, &out.Val
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SearchStringParameters.
func (in *SearchStringParameters) DeepCopy() *SearchStringParameters {
	if in == nil {
		return nil
	}
	out := new(SearchStringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerReselectInitParameters) DeepCopyInto(out *ServerReselectInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(string)
		**out = **in
	}
	if in.RetryNonidempotent != nil {
		in, out := &in.RetryNonidempotent, &out.RetryNonidempotent
		*out = new(string)
		**out = **in
	}
	if in.RetryTimeout != nil {
		in, out := &in.RetryTimeout, &out.RetryTimeout
		*out = new(string)
		**out = **in
	}
	if in.SvrRespCode != nil {
		in, out := &in.SvrRespCode, &out.SvrRespCode
		*out = make([]SvrRespCodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerReselectInitParameters.
func (in *ServerReselectInitParameters) DeepCopy() *ServerReselectInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServerReselectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerReselectObservation) DeepCopyInto(out *ServerReselectObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(string)
		**out = **in
	}
	if in.RetryNonidempotent != nil {
		in, out := &in.RetryNonidempotent, &out.RetryNonidempotent
		*out = new(string)
		**out = **in
	}
	if in.RetryTimeout != nil {
		in, out := &in.RetryTimeout, &out.RetryTimeout
		*out = new(string)
		**out = **in
	}
	if in.SvrRespCode != nil {
		in, out := &in.SvrRespCode, &out.SvrRespCode
		*out = make([]SvrRespCodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerReselectObservation.
func (in *ServerReselectObservation) DeepCopy() *ServerReselectObservation {
	if in == nil {
		return nil
	}
	out := new(ServerReselectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerReselectParameters) DeepCopyInto(out *ServerReselectParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(string)
		**out = **in
	}
	if in.RetryNonidempotent != nil {
		in, out := &in.RetryNonidempotent, &out.RetryNonidempotent
		*out = new(string)
		**out = **in
	}
	if in.RetryTimeout != nil {
		in, out := &in.RetryTimeout, &out.RetryTimeout
		*out = new(string)
		**out = **in
	}
	if in.SvrRespCode != nil {
		in, out := &in.SvrRespCode, &out.SvrRespCode
		*out = make([]SvrRespCodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerReselectParameters.
func (in *ServerReselectParameters) DeepCopy() *ServerReselectParameters {
	if in == nil {
		return nil
	}
	out := new(ServerReselectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServersInitParameters) DeepCopyInto(out *ServersInitParameters) {
	*out = *in
	if in.AutoscalingGroupName != nil {
		in, out := &in.AutoscalingGroupName, &out.AutoscalingGroupName
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiscoveredNetworks != nil {
		in, out := &in.DiscoveredNetworks, &out.DiscoveredNetworks
		*out = make([]DiscoveredNetworksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.ExternalOrchestrationID != nil {
		in, out := &in.ExternalOrchestrationID, &out.ExternalOrchestrationID
		*out = new(string)
		**out = **in
	}
	if in.ExternalUUID != nil {
		in, out := &in.ExternalUUID, &out.ExternalUUID
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = make([]IPInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = make([]ServersLocationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MacAddress != nil {
		in, out := &in.MacAddress, &out.MacAddress
		*out = new(string)
		**out = **in
	}
	if in.NwRef != nil {
		in, out := &in.NwRef, &out.NwRef
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.PreferenceOrder != nil {
		in, out := &in.PreferenceOrder, &out.PreferenceOrder
		*out = new(string)
		**out = **in
	}
	if in.PrstHdrVal != nil {
		in, out := &in.PrstHdrVal, &out.PrstHdrVal
		*out = new(string)
		**out = **in
	}
	if in.Ratio != nil {
		in, out := &in.Ratio, &out.Ratio
		*out = new(string)
		**out = **in
	}
	if in.ResolveServerByDNS != nil {
		in, out := &in.ResolveServerByDNS, &out.ResolveServerByDNS
		*out = new(string)
		**out = **in
	}
	if in.RewriteHostHeader != nil {
		in, out := &in.RewriteHostHeader, &out.RewriteHostHeader
		*out = new(string)
		**out = **in
	}
	if in.ServerNode != nil {
		in, out := &in.ServerNode, &out.ServerNode
		*out = new(string)
		**out = **in
	}
	if in.Static != nil {
		in, out := &in.Static, &out.Static
		*out = new(string)
		**out = **in
	}
	if in.VMRef != nil {
		in, out := &in.VMRef, &out.VMRef
		*out = new(string)
		**out = **in
	}
	if in.VerifyNetwork != nil {
		in, out := &in.VerifyNetwork, &out.VerifyNetwork
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServersInitParameters.
func (in *ServersInitParameters) DeepCopy() *ServersInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServersLocationInitParameters) DeepCopyInto(out *ServersLocationInitParameters) {
	*out = *in
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(string)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServersLocationInitParameters.
func (in *ServersLocationInitParameters) DeepCopy() *ServersLocationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServersLocationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServersLocationObservation) DeepCopyInto(out *ServersLocationObservation) {
	*out = *in
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(string)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServersLocationObservation.
func (in *ServersLocationObservation) DeepCopy() *ServersLocationObservation {
	if in == nil {
		return nil
	}
	out := new(ServersLocationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServersLocationParameters) DeepCopyInto(out *ServersLocationParameters) {
	*out = *in
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(string)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServersLocationParameters.
func (in *ServersLocationParameters) DeepCopy() *ServersLocationParameters {
	if in == nil {
		return nil
	}
	out := new(ServersLocationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServersObservation) DeepCopyInto(out *ServersObservation) {
	*out = *in
	if in.AutoscalingGroupName != nil {
		in, out := &in.AutoscalingGroupName, &out.AutoscalingGroupName
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiscoveredNetworks != nil {
		in, out := &in.DiscoveredNetworks, &out.DiscoveredNetworks
		*out = make([]DiscoveredNetworksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.ExternalOrchestrationID != nil {
		in, out := &in.ExternalOrchestrationID, &out.ExternalOrchestrationID
		*out = new(string)
		**out = **in
	}
	if in.ExternalUUID != nil {
		in, out := &in.ExternalUUID, &out.ExternalUUID
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = make([]IPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = make([]ServersLocationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MacAddress != nil {
		in, out := &in.MacAddress, &out.MacAddress
		*out = new(string)
		**out = **in
	}
	if in.NwRef != nil {
		in, out := &in.NwRef, &out.NwRef
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.PreferenceOrder != nil {
		in, out := &in.PreferenceOrder, &out.PreferenceOrder
		*out = new(string)
		**out = **in
	}
	if in.PrstHdrVal != nil {
		in, out := &in.PrstHdrVal, &out.PrstHdrVal
		*out = new(string)
		**out = **in
	}
	if in.Ratio != nil {
		in, out := &in.Ratio, &out.Ratio
		*out = new(string)
		**out = **in
	}
	if in.ResolveServerByDNS != nil {
		in, out := &in.ResolveServerByDNS, &out.ResolveServerByDNS
		*out = new(string)
		**out = **in
	}
	if in.RewriteHostHeader != nil {
		in, out := &in.RewriteHostHeader, &out.RewriteHostHeader
		*out = new(string)
		**out = **in
	}
	if in.ServerNode != nil {
		in, out := &in.ServerNode, &out.ServerNode
		*out = new(string)
		**out = **in
	}
	if in.Static != nil {
		in, out := &in.Static, &out.Static
		*out = new(string)
		**out = **in
	}
	if in.VMRef != nil {
		in, out := &in.VMRef, &out.VMRef
		*out = new(string)
		**out = **in
	}
	if in.VerifyNetwork != nil {
		in, out := &in.VerifyNetwork, &out.VerifyNetwork
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServersObservation.
func (in *ServersObservation) DeepCopy() *ServersObservation {
	if in == nil {
		return nil
	}
	out := new(ServersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServersParameters) DeepCopyInto(out *ServersParameters) {
	*out = *in
	if in.AutoscalingGroupName != nil {
		in, out := &in.AutoscalingGroupName, &out.AutoscalingGroupName
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiscoveredNetworks != nil {
		in, out := &in.DiscoveredNetworks, &out.DiscoveredNetworks
		*out = make([]DiscoveredNetworksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.ExternalOrchestrationID != nil {
		in, out := &in.ExternalOrchestrationID, &out.ExternalOrchestrationID
		*out = new(string)
		**out = **in
	}
	if in.ExternalUUID != nil {
		in, out := &in.ExternalUUID, &out.ExternalUUID
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = make([]IPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = make([]ServersLocationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MacAddress != nil {
		in, out := &in.MacAddress, &out.MacAddress
		*out = new(string)
		**out = **in
	}
	if in.NwRef != nil {
		in, out := &in.NwRef, &out.NwRef
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.PreferenceOrder != nil {
		in, out := &in.PreferenceOrder, &out.PreferenceOrder
		*out = new(string)
		**out = **in
	}
	if in.PrstHdrVal != nil {
		in, out := &in.PrstHdrVal, &out.PrstHdrVal
		*out = new(string)
		**out = **in
	}
	if in.Ratio != nil {
		in, out := &in.Ratio, &out.Ratio
		*out = new(string)
		**out = **in
	}
	if in.ResolveServerByDNS != nil {
		in, out := &in.ResolveServerByDNS, &out.ResolveServerByDNS
		*out = new(string)
		**out = **in
	}
	if in.RewriteHostHeader != nil {
		in, out := &in.RewriteHostHeader, &out.RewriteHostHeader
		*out = new(string)
		**out = **in
	}
	if in.ServerNode != nil {
		in, out := &in.ServerNode, &out.ServerNode
		*out = new(string)
		**out = **in
	}
	if in.Static != nil {
		in, out := &in.Static, &out.Static
		*out = new(string)
		**out = **in
	}
	if in.VMRef != nil {
		in, out := &in.VMRef, &out.VMRef
		*out = new(string)
		**out = **in
	}
	if in.VerifyNetwork != nil {
		in, out := &in.VerifyNetwork, &out.VerifyNetwork
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServersParameters.
func (in *ServersParameters) DeepCopy() *ServersParameters {
	if in == nil {
		return nil
	}
	out := new(ServersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceEngine) DeepCopyInto(out *ServiceEngine) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceEngine.
func (in *ServiceEngine) DeepCopy() *ServiceEngine {
	if in == nil {
		return nil
	}
	out := new(ServiceEngine)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceEngine) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceEngineGroup) DeepCopyInto(out *ServiceEngineGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceEngineGroup.
func (in *ServiceEngineGroup) DeepCopy() *ServiceEngineGroup {
	if in == nil {
		return nil
	}
	out := new(ServiceEngineGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceEngineGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceEngineGroupConfigpbAttributesInitParameters) DeepCopyInto(out *ServiceEngineGroupConfigpbAttributesInitParameters) {
	*out = *in
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceEngineGroupConfigpbAttributesInitParameters.
func (in *ServiceEngineGroupConfigpbAttributesInitParameters) DeepCopy() *ServiceEngineGroupConfigpbAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceEngineGroupConfigpbAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceEngineGroupConfigpbAttributesObservation) DeepCopyInto(out *ServiceEngineGroupConfigpbAttributesObservation) {
	*out = *in
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceEngineGroupConfigpbAttributesObservation.
func (in *ServiceEngineGroupConfigpbAttributesObservation) DeepCopy() *ServiceEngineGroupConfigpbAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceEngineGroupConfigpbAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceEngineGroupConfigpbAttributesParameters) DeepCopyInto(out *ServiceEngineGroupConfigpbAttributesParameters) {
	*out = *in
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceEngineGroupConfigpbAttributesParameters.
func (in *ServiceEngineGroupConfigpbAttributesParameters) DeepCopy() *ServiceEngineGroupConfigpbAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceEngineGroupConfigpbAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceEngineGroupInitParameters) DeepCopyInto(out *ServiceEngineGroupInitParameters) {
	*out = *in
	if in.AcceleratedNetworking != nil {
		in, out := &in.AcceleratedNetworking, &out.AcceleratedNetworking
		*out = new(string)
		**out = **in
	}
	if in.ActiveStandby != nil {
		in, out := &in.ActiveStandby, &out.ActiveStandby
		*out = new(string)
		**out = **in
	}
	if in.AggressiveFailureDetection != nil {
		in, out := &in.AggressiveFailureDetection, &out.AggressiveFailureDetection
		*out = new(string)
		**out = **in
	}
	if in.Algo != nil {
		in, out := &in.Algo, &out.Algo
		*out = new(string)
		**out = **in
	}
	if in.AllowBurst != nil {
		in, out := &in.AllowBurst, &out.AllowBurst
		*out = new(string)
		**out = **in
	}
	if in.AppCachePercent != nil {
		in, out := &in.AppCachePercent, &out.AppCachePercent
		*out = new(string)
		**out = **in
	}
	if in.AppCacheThreshold != nil {
		in, out := &in.AppCacheThreshold, &out.AppCacheThreshold
		*out = new(string)
		**out = **in
	}
	if in.AppLearningMemoryPercent != nil {
		in, out := &in.AppLearningMemoryPercent, &out.AppLearningMemoryPercent
		*out = new(string)
		**out = **in
	}
	if in.ArchiveShmLimit != nil {
		in, out := &in.ArchiveShmLimit, &out.ArchiveShmLimit
		*out = new(string)
		**out = **in
	}
	if in.AsyncSSL != nil {
		in, out := &in.AsyncSSL, &out.AsyncSSL
		*out = new(string)
		**out = **in
	}
	if in.AsyncSSLThreads != nil {
		in, out := &in.AsyncSSLThreads, &out.AsyncSSLThreads
		*out = new(string)
		**out = **in
	}
	if in.AutoRebalance != nil {
		in, out := &in.AutoRebalance, &out.AutoRebalance
		*out = new(string)
		**out = **in
	}
	if in.AutoRebalanceCapacityPerSe != nil {
		in, out := &in.AutoRebalanceCapacityPerSe, &out.AutoRebalanceCapacityPerSe
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
	if in.AutoRebalanceCriteria != nil {
		in, out := &in.AutoRebalanceCriteria, &out.AutoRebalanceCriteria
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AutoRebalanceInterval != nil {
		in, out := &in.AutoRebalanceInterval, &out.AutoRebalanceInterval
		*out = new(string)
		**out = **in
	}
	if in.AutoRedistributeActiveStandbyLoad != nil {
		in, out := &in.AutoRedistributeActiveStandbyLoad, &out.AutoRedistributeActiveStandbyLoad
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZoneRefs != nil {
		in, out := &in.AvailabilityZoneRefs, &out.AvailabilityZoneRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BGPPeerMonitorFailoverEnabled != nil {
		in, out := &in.BGPPeerMonitorFailoverEnabled, &out.BGPPeerMonitorFailoverEnabled
		*out = new(string)
		**out = **in
	}
	if in.BGPStateUpdateInterval != nil {
		in, out := &in.BGPStateUpdateInterval, &out.BGPStateUpdateInterval
		*out = new(string)
		**out = **in
	}
	if in.BaremetalDispatcherHandlesFlows != nil {
		in, out := &in.BaremetalDispatcherHandlesFlows, &out.BaremetalDispatcherHandlesFlows
		*out = new(string)
		**out = **in
	}
	if in.BufferSe != nil {
		in, out := &in.BufferSe, &out.BufferSe
		*out = new(string)
		**out = **in
	}
	if in.CPUReserve != nil {
		in, out := &in.CPUReserve, &out.CPUReserve
		*out = new(string)
		**out = **in
	}
	if in.CPUSocketAffinity != nil {
		in, out := &in.CPUSocketAffinity, &out.CPUSocketAffinity
		*out = new(string)
		**out = **in
	}
	if in.CloudRef != nil {
		in, out := &in.CloudRef, &out.CloudRef
		*out = new(string)
		**out = **in
	}
	if in.CompressIPRulesForEachNsSubnet != nil {
		in, out := &in.CompressIPRulesForEachNsSubnet, &out.CompressIPRulesForEachNsSubnet
		*out = new(string)
		**out = **in
	}
	if in.ConfigDebugsOnAllCores != nil {
		in, out := &in.ConfigDebugsOnAllCores, &out.ConfigDebugsOnAllCores
		*out = new(string)
		**out = **in
	}
	if in.ConfigpbAttributes != nil {
		in, out := &in.ConfigpbAttributes, &out.ConfigpbAttributes
		*out = make([]ServiceEngineGroupConfigpbAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnectionMemoryPercentage != nil {
		in, out := &in.ConnectionMemoryPercentage, &out.ConnectionMemoryPercentage
		*out = new(string)
		**out = **in
	}
	if in.CoreShmAppCache != nil {
		in, out := &in.CoreShmAppCache, &out.CoreShmAppCache
		*out = new(string)
		**out = **in
	}
	if in.CoreShmAppLearning != nil {
		in, out := &in.CoreShmAppLearning, &out.CoreShmAppLearning
		*out = new(string)
		**out = **in
	}
	if in.CustomSecuritygroupsData != nil {
		in, out := &in.CustomSecuritygroupsData, &out.CustomSecuritygroupsData
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSecuritygroupsMgmt != nil {
		in, out := &in.CustomSecuritygroupsMgmt, &out.CustomSecuritygroupsMgmt
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomTag != nil {
		in, out := &in.CustomTag, &out.CustomTag
		*out = make([]CustomTagInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataNetworkID != nil {
		in, out := &in.DataNetworkID, &out.DataNetworkID
		*out = new(string)
		**out = **in
	}
	if in.DatascriptTimeout != nil {
		in, out := &in.DatascriptTimeout, &out.DatascriptTimeout
		*out = new(string)
		**out = **in
	}
	if in.DeactivateIPv6Discovery != nil {
		in, out := &in.DeactivateIPv6Discovery, &out.DeactivateIPv6Discovery
		*out = new(string)
		**out = **in
	}
	if in.DeactivateKniFilteringAtDispatcher != nil {
		in, out := &in.DeactivateKniFilteringAtDispatcher, &out.DeactivateKniFilteringAtDispatcher
		*out = new(string)
		**out = **in
	}
	if in.DedicatedDispatcherCore != nil {
		in, out := &in.DedicatedDispatcherCore, &out.DedicatedDispatcherCore
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableAviSecuritygroups != nil {
		in, out := &in.DisableAviSecuritygroups, &out.DisableAviSecuritygroups
		*out = new(string)
		**out = **in
	}
	if in.DisableCsumOffloads != nil {
		in, out := &in.DisableCsumOffloads, &out.DisableCsumOffloads
		*out = new(string)
		**out = **in
	}
	if in.DisableFlowProbes != nil {
		in, out := &in.DisableFlowProbes, &out.DisableFlowProbes
		*out = new(string)
		**out = **in
	}
	if in.DisableGro != nil {
		in, out := &in.DisableGro, &out.DisableGro
		*out = new(string)
		**out = **in
	}
	if in.DisableSeMemoryCheck != nil {
		in, out := &in.DisableSeMemoryCheck, &out.DisableSeMemoryCheck
		*out = new(string)
		**out = **in
	}
	if in.DisableTso != nil {
		in, out := &in.DisableTso, &out.DisableTso
		*out = new(string)
		**out = **in
	}
	if in.DiskPerSe != nil {
		in, out := &in.DiskPerSe, &out.DiskPerSe
		*out = new(string)
		**out = **in
	}
	if in.DistributeLoadActiveStandby != nil {
		in, out := &in.DistributeLoadActiveStandby, &out.DistributeLoadActiveStandby
		*out = new(string)
		**out = **in
	}
	if in.DistributeQueues != nil {
		in, out := &in.DistributeQueues, &out.DistributeQueues
		*out = new(string)
		**out = **in
	}
	if in.DistributeVnics != nil {
		in, out := &in.DistributeVnics, &out.DistributeVnics
		*out = new(string)
		**out = **in
	}
	if in.DownstreamSendTimeout != nil {
		in, out := &in.DownstreamSendTimeout, &out.DownstreamSendTimeout
		*out = new(string)
		**out = **in
	}
	if in.DpAggressiveDeqIntervalMsec != nil {
		in, out := &in.DpAggressiveDeqIntervalMsec, &out.DpAggressiveDeqIntervalMsec
		*out = new(string)
		**out = **in
	}
	if in.DpAggressiveEnqIntervalMsec != nil {
		in, out := &in.DpAggressiveEnqIntervalMsec, &out.DpAggressiveEnqIntervalMsec
		*out = new(string)
		**out = **in
	}
	if in.DpAggressiveHbFrequency != nil {
		in, out := &in.DpAggressiveHbFrequency, &out.DpAggressiveHbFrequency
		*out = new(string)
		**out = **in
	}
	if in.DpAggressiveHbTimeoutCount != nil {
		in, out := &in.DpAggressiveHbTimeoutCount, &out.DpAggressiveHbTimeoutCount
		*out = new(string)
		**out = **in
	}
	if in.DpDeqIntervalMsec != nil {
		in, out := &in.DpDeqIntervalMsec, &out.DpDeqIntervalMsec
		*out = new(string)
		**out = **in
	}
	if in.DpEnqIntervalMsec != nil {
		in, out := &in.DpEnqIntervalMsec, &out.DpEnqIntervalMsec
		*out = new(string)
		**out = **in
	}
	if in.DpHbFrequency != nil {
		in, out := &in.DpHbFrequency, &out.DpHbFrequency
		*out = new(string)
		**out = **in
	}
	if in.DpHbTimeoutCount != nil {
		in, out := &in.DpHbTimeoutCount, &out.DpHbTimeoutCount
		*out = new(string)
		**out = **in
	}
	if in.DpdkGroTimeoutInterval != nil {
		in, out := &in.DpdkGroTimeoutInterval, &out.DpdkGroTimeoutInterval
		*out = new(string)
		**out = **in
	}
	if in.EnableGratarpPermanent != nil {
		in, out := &in.EnableGratarpPermanent, &out.EnableGratarpPermanent
		*out = new(string)
		**out = **in
	}
	if in.EnableHSMLog != nil {
		in, out := &in.EnableHSMLog, &out.EnableHSMLog
		*out = new(string)
		**out = **in
	}
	if in.EnableHSMPriming != nil {
		in, out := &in.EnableHSMPriming, &out.EnableHSMPriming
		*out = new(string)
		**out = **in
	}
	if in.EnableMultiLB != nil {
		in, out := &in.EnableMultiLB, &out.EnableMultiLB
		*out = new(string)
		**out = **in
	}
	if in.EnablePcapTxRing != nil {
		in, out := &in.EnablePcapTxRing, &out.EnablePcapTxRing
		*out = new(string)
		**out = **in
	}
	if in.EphemeralPortrangeEnd != nil {
		in, out := &in.EphemeralPortrangeEnd, &out.EphemeralPortrangeEnd
		*out = new(string)
		**out = **in
	}
	if in.EphemeralPortrangeStart != nil {
		in, out := &in.EphemeralPortrangeStart, &out.EphemeralPortrangeStart
		*out = new(string)
		**out = **in
	}
	if in.ExtraConfigMultiplier != nil {
		in, out := &in.ExtraConfigMultiplier, &out.ExtraConfigMultiplier
		*out = new(string)
		**out = **in
	}
	if in.ExtraSharedConfigMemory != nil {
		in, out := &in.ExtraSharedConfigMemory, &out.ExtraSharedConfigMemory
		*out = new(string)
		**out = **in
	}
	if in.FlowTableNewSynMaxEntries != nil {
		in, out := &in.FlowTableNewSynMaxEntries, &out.FlowTableNewSynMaxEntries
		*out = new(string)
		**out = **in
	}
	if in.FreeListSize != nil {
		in, out := &in.FreeListSize, &out.FreeListSize
		*out = new(string)
		**out = **in
	}
	if in.GCPConfig != nil {
		in, out := &in.GCPConfig, &out.GCPConfig
		*out = make([]GCPConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GRPCChannelConnectTimeout != nil {
		in, out := &in.GRPCChannelConnectTimeout, &out.GRPCChannelConnectTimeout
		*out = new(string)
		**out = **in
	}
	if in.GratarpPermanentPeriodicity != nil {
		in, out := &in.GratarpPermanentPeriodicity, &out.GratarpPermanentPeriodicity
		*out = new(string)
		**out = **in
	}
	if in.HTTPRumConsoleLog != nil {
		in, out := &in.HTTPRumConsoleLog, &out.HTTPRumConsoleLog
		*out = new(string)
		**out = **in
	}
	if in.HTTPRumMinContentLength != nil {
		in, out := &in.HTTPRumMinContentLength, &out.HTTPRumMinContentLength
		*out = new(string)
		**out = **in
	}
	if in.HaMode != nil {
		in, out := &in.HaMode, &out.HaMode
		*out = new(string)
		**out = **in
	}
	if in.HandlePerPktAttack != nil {
		in, out := &in.HandlePerPktAttack, &out.HandlePerPktAttack
		*out = new(string)
		**out = **in
	}
	if in.HardwaresecuritymodulegroupRef != nil {
		in, out := &in.HardwaresecuritymodulegroupRef, &out.HardwaresecuritymodulegroupRef
		*out = new(string)
		**out = **in
	}
	if in.HeapMinimumConfigMemory != nil {
		in, out := &in.HeapMinimumConfigMemory, &out.HeapMinimumConfigMemory
		*out = new(string)
		**out = **in
	}
	if in.HmOnStandby != nil {
		in, out := &in.HmOnStandby, &out.HmOnStandby
		*out = new(string)
		**out = **in
	}
	if in.HostAttributeKey != nil {
		in, out := &in.HostAttributeKey, &out.HostAttributeKey
		*out = new(string)
		**out = **in
	}
	if in.HostAttributeValue != nil {
		in, out := &in.HostAttributeValue, &out.HostAttributeValue
		*out = new(string)
		**out = **in
	}
	if in.HostGatewayMonitor != nil {
		in, out := &in.HostGatewayMonitor, &out.HostGatewayMonitor
		*out = new(string)
		**out = **in
	}
	if in.HybridRssMode != nil {
		in, out := &in.HybridRssMode, &out.HybridRssMode
		*out = new(string)
		**out = **in
	}
	if in.Hypervisor != nil {
		in, out := &in.Hypervisor, &out.Hypervisor
		*out = new(string)
		**out = **in
	}
	if in.IgnoreDockerMacChange != nil {
		in, out := &in.IgnoreDockerMacChange, &out.IgnoreDockerMacChange
		*out = new(string)
		**out = **in
	}
	if in.IgnoreRttThreshold != nil {
		in, out := &in.IgnoreRttThreshold, &out.IgnoreRttThreshold
		*out = new(string)
		**out = **in
	}
	if in.IngressAccessData != nil {
		in, out := &in.IngressAccessData, &out.IngressAccessData
		*out = new(string)
		**out = **in
	}
	if in.IngressAccessMgmt != nil {
		in, out := &in.IngressAccessMgmt, &out.IngressAccessMgmt
		*out = new(string)
		**out = **in
	}
	if in.InstanceFlavor != nil {
		in, out := &in.InstanceFlavor, &out.InstanceFlavor
		*out = new(string)
		**out = **in
	}
	if in.InstanceFlavorInfo != nil {
		in, out := &in.InstanceFlavorInfo, &out.InstanceFlavorInfo
		*out = make([]InstanceFlavorInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Iptables != nil {
		in, out := &in.Iptables, &out.Iptables
		*out = make([]IptablesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KniAllowedServerPorts != nil {
		in, out := &in.KniAllowedServerPorts, &out.KniAllowedServerPorts
		*out = make([]KniAllowedServerPortsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.L7ConnsPerCore != nil {
		in, out := &in.L7ConnsPerCore, &out.L7ConnsPerCore
		*out = new(string)
		**out = **in
	}
	if in.L7ResvdListenConnsPerCore != nil {
		in, out := &in.L7ResvdListenConnsPerCore, &out.L7ResvdListenConnsPerCore
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]LabelsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LbactionNumRequestsToDispatch != nil {
		in, out := &in.LbactionNumRequestsToDispatch, &out.LbactionNumRequestsToDispatch
		*out = new(string)
		**out = **in
	}
	if in.LbactionRqPerRequestMaxRetries != nil {
		in, out := &in.LbactionRqPerRequestMaxRetries, &out.LbactionRqPerRequestMaxRetries
		*out = new(string)
		**out = **in
	}
	if in.LeastLoadCoreSelection != nil {
		in, out := &in.LeastLoadCoreSelection, &out.LeastLoadCoreSelection
		*out = new(string)
		**out = **in
	}
	if in.LicenseTier != nil {
		in, out := &in.LicenseTier, &out.LicenseTier
		*out = new(string)
		**out = **in
	}
	if in.LicenseType != nil {
		in, out := &in.LicenseType, &out.LicenseType
		*out = new(string)
		**out = **in
	}
	if in.LogAgentCompressLogs != nil {
		in, out := &in.LogAgentCompressLogs, &out.LogAgentCompressLogs
		*out = new(string)
		**out = **in
	}
	if in.LogAgentDebugEnabled != nil {
		in, out := &in.LogAgentDebugEnabled, &out.LogAgentDebugEnabled
		*out = new(string)
		**out = **in
	}
	if in.LogAgentFileSzAppl != nil {
		in, out := &in.LogAgentFileSzAppl, &out.LogAgentFileSzAppl
		*out = new(string)
		**out = **in
	}
	if in.LogAgentFileSzConn != nil {
		in, out := &in.LogAgentFileSzConn, &out.LogAgentFileSzConn
		*out = new(string)
		**out = **in
	}
	if in.LogAgentFileSzDebug != nil {
		in, out := &in.LogAgentFileSzDebug, &out.LogAgentFileSzDebug
		*out = new(string)
		**out = **in
	}
	if in.LogAgentFileSzEvent != nil {
		in, out := &in.LogAgentFileSzEvent, &out.LogAgentFileSzEvent
		*out = new(string)
		**out = **in
	}
	if in.LogAgentLogStorageMinSz != nil {
		in, out := &in.LogAgentLogStorageMinSz, &out.LogAgentLogStorageMinSz
		*out = new(string)
		**out = **in
	}
	if in.LogAgentMaxConcurrentRsync != nil {
		in, out := &in.LogAgentMaxConcurrentRsync, &out.LogAgentMaxConcurrentRsync
		*out = new(string)
		**out = **in
	}
	if in.LogAgentMaxStorageExcessPercent != nil {
		in, out := &in.LogAgentMaxStorageExcessPercent, &out.LogAgentMaxStorageExcessPercent
		*out = new(string)
		**out = **in
	}
	if in.LogAgentMaxStorageIgnorePercent != nil {
		in, out := &in.LogAgentMaxStorageIgnorePercent, &out.LogAgentMaxStorageIgnorePercent
		*out = new(string)
		**out = **in
	}
	if in.LogAgentMinStoragePerVs != nil {
		in, out := &in.LogAgentMinStoragePerVs, &out.LogAgentMinStoragePerVs
		*out = new(string)
		**out = **in
	}
	if in.LogAgentSleepInterval != nil {
		in, out := &in.LogAgentSleepInterval, &out.LogAgentSleepInterval
		*out = new(string)
		**out = **in
	}
	if in.LogAgentTraceEnabled != nil {
		in, out := &in.LogAgentTraceEnabled, &out.LogAgentTraceEnabled
		*out = new(string)
		**out = **in
	}
	if in.LogAgentUnknownVsTimer != nil {
		in, out := &in.LogAgentUnknownVsTimer, &out.LogAgentUnknownVsTimer
		*out = new(string)
		**out = **in
	}
	if in.LogDisksz != nil {
		in, out := &in.LogDisksz, &out.LogDisksz
		*out = new(string)
		**out = **in
	}
	if in.LogMallocFailure != nil {
		in, out := &in.LogMallocFailure, &out.LogMallocFailure
		*out = new(string)
		**out = **in
	}
	if in.LogMessageMaxFileListSize != nil {
		in, out := &in.LogMessageMaxFileListSize, &out.LogMessageMaxFileListSize
		*out = new(string)
		**out = **in
	}
	if in.Markers != nil {
		in, out := &in.Markers, &out.Markers
		*out = make([]ServiceEngineGroupMarkersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxCPUUsage != nil {
		in, out := &in.MaxCPUUsage, &out.MaxCPUUsage
		*out = new(string)
		**out = **in
	}
	if in.MaxConcurrentExternalHm != nil {
		in, out := &in.MaxConcurrentExternalHm, &out.MaxConcurrentExternalHm
		*out = new(string)
		**out = **in
	}
	if in.MaxMemoryPerMempool != nil {
		in, out := &in.MaxMemoryPerMempool, &out.MaxMemoryPerMempool
		*out = new(string)
		**out = **in
	}
	if in.MaxNumSeDps != nil {
		in, out := &in.MaxNumSeDps, &out.MaxNumSeDps
		*out = new(string)
		**out = **in
	}
	if in.MaxPublicIpsPerLB != nil {
		in, out := &in.MaxPublicIpsPerLB, &out.MaxPublicIpsPerLB
		*out = new(string)
		**out = **in
	}
	if in.MaxQueuesPerVnic != nil {
		in, out := &in.MaxQueuesPerVnic, &out.MaxQueuesPerVnic
		*out = new(string)
		**out = **in
	}
	if in.MaxRulesPerLB != nil {
		in, out := &in.MaxRulesPerLB, &out.MaxRulesPerLB
		*out = new(string)
		**out = **in
	}
	if in.MaxScaleoutPerVs != nil {
		in, out := &in.MaxScaleoutPerVs, &out.MaxScaleoutPerVs
		*out = new(string)
		**out = **in
	}
	if in.MaxSe != nil {
		in, out := &in.MaxSe, &out.MaxSe
		*out = new(string)
		**out = **in
	}
	if in.MaxSkbFrags != nil {
		in, out := &in.MaxSkbFrags, &out.MaxSkbFrags
		*out = new(string)
		**out = **in
	}
	if in.MaxVsPerSe != nil {
		in, out := &in.MaxVsPerSe, &out.MaxVsPerSe
		*out = new(string)
		**out = **in
	}
	if in.MemReserve != nil {
		in, out := &in.MemReserve, &out.MemReserve
		*out = new(string)
		**out = **in
	}
	if in.MemoryForConfigUpdate != nil {
		in, out := &in.MemoryForConfigUpdate, &out.MemoryForConfigUpdate
		*out = new(string)
		**out = **in
	}
	if in.MemoryPerSe != nil {
		in, out := &in.MemoryPerSe, &out.MemoryPerSe
		*out = new(string)
		**out = **in
	}
	if in.MetricsCollectionMode != nil {
		in, out := &in.MetricsCollectionMode, &out.MetricsCollectionMode
		*out = new(string)
		**out = **in
	}
	if in.MgmtNetworkRef != nil {
		in, out := &in.MgmtNetworkRef, &out.MgmtNetworkRef
		*out = new(string)
		**out = **in
	}
	if in.MgmtSubnet != nil {
		in, out := &in.MgmtSubnet, &out.MgmtSubnet
		*out = make([]MgmtSubnetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinCPUUsage != nil {
		in, out := &in.MinCPUUsage, &out.MinCPUUsage
		*out = new(string)
		**out = **in
	}
	if in.MinScaleoutPerVs != nil {
		in, out := &in.MinScaleoutPerVs, &out.MinScaleoutPerVs
		*out = new(string)
		**out = **in
	}
	if in.MinSe != nil {
		in, out := &in.MinSe, &out.MinSe
		*out = new(string)
		**out = **in
	}
	if in.MinimumConnectionMemory != nil {
		in, out := &in.MinimumConnectionMemory, &out.MinimumConnectionMemory
		*out = new(string)
		**out = **in
	}
	if in.MulticastEnable != nil {
		in, out := &in.MulticastEnable, &out.MulticastEnable
		*out = new(string)
		**out = **in
	}
	if in.NLogStreamingThreads != nil {
		in, out := &in.NLogStreamingThreads, &out.NLogStreamingThreads
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetlinkPollerThreads != nil {
		in, out := &in.NetlinkPollerThreads, &out.NetlinkPollerThreads
		*out = new(string)
		**out = **in
	}
	if in.NetlinkSockBufSize != nil {
		in, out := &in.NetlinkSockBufSize, &out.NetlinkSockBufSize
		*out = new(string)
		**out = **in
	}
	if in.NgxFreeConnectionStack != nil {
		in, out := &in.NgxFreeConnectionStack, &out.NgxFreeConnectionStack
		*out = new(string)
		**out = **in
	}
	if in.NonSignificantLogThrottle != nil {
		in, out := &in.NonSignificantLogThrottle, &out.NonSignificantLogThrottle
		*out = new(string)
		**out = **in
	}
	if in.NsHelperDeqIntervalMsec != nil {
		in, out := &in.NsHelperDeqIntervalMsec, &out.NsHelperDeqIntervalMsec
		*out = new(string)
		**out = **in
	}
	if in.NtpSyncFailEvent != nil {
		in, out := &in.NtpSyncFailEvent, &out.NtpSyncFailEvent
		*out = new(string)
		**out = **in
	}
	if in.NtpSyncStatusInterval != nil {
		in, out := &in.NtpSyncStatusInterval, &out.NtpSyncStatusInterval
		*out = new(string)
		**out = **in
	}
	if in.NumDispatcherCores != nil {
		in, out := &in.NumDispatcherCores, &out.NumDispatcherCores
		*out = new(string)
		**out = **in
	}
	if in.NumDispatcherQueues != nil {
		in, out := &in.NumDispatcherQueues, &out.NumDispatcherQueues
		*out = new(string)
		**out = **in
	}
	if in.NumFlowCoresSumChangesToIgnore != nil {
		in, out := &in.NumFlowCoresSumChangesToIgnore, &out.NumFlowCoresSumChangesToIgnore
		*out = new(string)
		**out = **in
	}
	if in.ObjsyncConfig != nil {
		in, out := &in.ObjsyncConfig, &out.ObjsyncConfig
		*out = make([]ObjsyncConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ObjsyncPort != nil {
		in, out := &in.ObjsyncPort, &out.ObjsyncPort
		*out = new(string)
		**out = **in
	}
	if in.OpenstackAvailabilityZones != nil {
		in, out := &in.OpenstackAvailabilityZones, &out.OpenstackAvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OpenstackMgmtNetworkName != nil {
		in, out := &in.OpenstackMgmtNetworkName, &out.OpenstackMgmtNetworkName
		*out = new(string)
		**out = **in
	}
	if in.OpenstackMgmtNetworkUUID != nil {
		in, out := &in.OpenstackMgmtNetworkUUID, &out.OpenstackMgmtNetworkUUID
		*out = new(string)
		**out = **in
	}
	if in.OsReservedMemory != nil {
		in, out := &in.OsReservedMemory, &out.OsReservedMemory
		*out = new(string)
		**out = **in
	}
	if in.PathMtuDiscoveryV4 != nil {
		in, out := &in.PathMtuDiscoveryV4, &out.PathMtuDiscoveryV4
		*out = new(string)
		**out = **in
	}
	if in.PathMtuDiscoveryV6 != nil {
		in, out := &in.PathMtuDiscoveryV6, &out.PathMtuDiscoveryV6
		*out = new(string)
		**out = **in
	}
	if in.PcapTxMode != nil {
		in, out := &in.PcapTxMode, &out.PcapTxMode
		*out = new(string)
		**out = **in
	}
	if in.PcapTxRingRdBalancingFactor != nil {
		in, out := &in.PcapTxRingRdBalancingFactor, &out.PcapTxRingRdBalancingFactor
		*out = new(string)
		**out = **in
	}
	if in.PerApp != nil {
		in, out := &in.PerApp, &out.PerApp
		*out = new(string)
		**out = **in
	}
	if in.PerVsAdmissionControl != nil {
		in, out := &in.PerVsAdmissionControl, &out.PerVsAdmissionControl
		*out = new(string)
		**out = **in
	}
	if in.PlacementMode != nil {
		in, out := &in.PlacementMode, &out.PlacementMode
		*out = new(string)
		**out = **in
	}
	if in.RealtimeSeMetrics != nil {
		in, out := &in.RealtimeSeMetrics, &out.RealtimeSeMetrics
		*out = make([]RealtimeSeMetricsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RebootOnPanic != nil {
		in, out := &in.RebootOnPanic, &out.RebootOnPanic
		*out = new(string)
		**out = **in
	}
	if in.ReplayVrfRoutesInterval != nil {
		in, out := &in.ReplayVrfRoutesInterval, &out.ReplayVrfRoutesInterval
		*out = new(string)
		**out = **in
	}
	if in.ResyncTimeInterval != nil {
		in, out := &in.ResyncTimeInterval, &out.ResyncTimeInterval
		*out = new(string)
		**out = **in
	}
	if in.SSLPreprocessSniHostname != nil {
		in, out := &in.SSLPreprocessSniHostname, &out.SSLPreprocessSniHostname
		*out = new(string)
		**out = **in
	}
	if in.SSLSessCachePerVs != nil {
		in, out := &in.SSLSessCachePerVs, &out.SSLSessCachePerVs
		*out = new(string)
		**out = **in
	}
	if in.SdbFlushInterval != nil {
		in, out := &in.SdbFlushInterval, &out.SdbFlushInterval
		*out = new(string)
		**out = **in
	}
	if in.SdbPipelineSize != nil {
		in, out := &in.SdbPipelineSize, &out.SdbPipelineSize
		*out = new(string)
		**out = **in
	}
	if in.SdbScanCount != nil {
		in, out := &in.SdbScanCount, &out.SdbScanCount
		*out = new(string)
		**out = **in
	}
	if in.SeBandwidthType != nil {
		in, out := &in.SeBandwidthType, &out.SeBandwidthType
		*out = new(string)
		**out = **in
	}
	if in.SeDebugTraceSz != nil {
		in, out := &in.SeDebugTraceSz, &out.SeDebugTraceSz
		*out = new(string)
		**out = **in
	}
	if in.SeDelayedFlowDelete != nil {
		in, out := &in.SeDelayedFlowDelete, &out.SeDelayedFlowDelete
		*out = new(string)
		**out = **in
	}
	if in.SeDeprovisionDelay != nil {
		in, out := &in.SeDeprovisionDelay, &out.SeDeprovisionDelay
		*out = new(string)
		**out = **in
	}
	if in.SeDosProfile != nil {
		in, out := &in.SeDosProfile, &out.SeDosProfile
		*out = make([]SeDosProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SeDpHmDrops != nil {
		in, out := &in.SeDpHmDrops, &out.SeDpHmDrops
		*out = new(string)
		**out = **in
	}
	if in.SeDpIfStatePollInterval != nil {
		in, out := &in.SeDpIfStatePollInterval, &out.SeDpIfStatePollInterval
		*out = new(string)
		**out = **in
	}
	if in.SeDpIsolation != nil {
		in, out := &in.SeDpIsolation, &out.SeDpIsolation
		*out = new(string)
		**out = **in
	}
	if in.SeDpIsolationNumNonDpCpus != nil {
		in, out := &in.SeDpIsolationNumNonDpCpus, &out.SeDpIsolationNumNonDpCpus
		*out = new(string)
		**out = **in
	}
	if in.SeDpLogNfEnqueuePercent != nil {
		in, out := &in.SeDpLogNfEnqueuePercent, &out.SeDpLogNfEnqueuePercent
		*out = new(string)
		**out = **in
	}
	if in.SeDpLogUdfEnqueuePercent != nil {
		in, out := &in.SeDpLogUdfEnqueuePercent, &out.SeDpLogUdfEnqueuePercent
		*out = new(string)
		**out = **in
	}
	if in.SeDpMaxHbVersion != nil {
		in, out := &in.SeDpMaxHbVersion, &out.SeDpMaxHbVersion
		*out = new(string)
		**out = **in
	}
	if in.SeDpVnicQueueStallEventSleep != nil {
		in, out := &in.SeDpVnicQueueStallEventSleep, &out.SeDpVnicQueueStallEventSleep
		*out = new(string)
		**out = **in
	}
	if in.SeDpVnicQueueStallThreshold != nil {
		in, out := &in.SeDpVnicQueueStallThreshold, &out.SeDpVnicQueueStallThreshold
		*out = new(string)
		**out = **in
	}
	if in.SeDpVnicQueueStallTimeout != nil {
		in, out := &in.SeDpVnicQueueStallTimeout, &out.SeDpVnicQueueStallTimeout
		*out = new(string)
		**out = **in
	}
	if in.SeDpVnicRestartOnQueueStallCount != nil {
		in, out := &in.SeDpVnicRestartOnQueueStallCount, &out.SeDpVnicRestartOnQueueStallCount
		*out = new(string)
		**out = **in
	}
	if in.SeDpVnicStallSeRestartWindow != nil {
		in, out := &in.SeDpVnicStallSeRestartWindow, &out.SeDpVnicStallSeRestartWindow
		*out = new(string)
		**out = **in
	}
	if in.SeDpdkPmd != nil {
		in, out := &in.SeDpdkPmd, &out.SeDpdkPmd
		*out = new(string)
		**out = **in
	}
	if in.SeDumpCoreOnAssert != nil {
		in, out := &in.SeDumpCoreOnAssert, &out.SeDumpCoreOnAssert
		*out = new(string)
		**out = **in
	}
	if in.SeEmulatedCores != nil {
		in, out := &in.SeEmulatedCores, &out.SeEmulatedCores
		*out = new(string)
		**out = **in
	}
	if in.SeFlowProbeRetries != nil {
		in, out := &in.SeFlowProbeRetries, &out.SeFlowProbeRetries
		*out = new(string)
		**out = **in
	}
	if in.SeFlowProbeRetryTimer != nil {
		in, out := &in.SeFlowProbeRetryTimer, &out.SeFlowProbeRetryTimer
		*out = new(string)
		**out = **in
	}
	if in.SeGroupAnalyticsPolicy != nil {
		in, out := &in.SeGroupAnalyticsPolicy, &out.SeGroupAnalyticsPolicy
		*out = make([]SeGroupAnalyticsPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SeHyperthreadedMode != nil {
		in, out := &in.SeHyperthreadedMode, &out.SeHyperthreadedMode
		*out = new(string)
		**out = **in
	}
	if in.SeIPEncapIpc != nil {
		in, out := &in.SeIPEncapIpc, &out.SeIPEncapIpc
		*out = new(string)
		**out = **in
	}
	if in.SeKniBurstFactor != nil {
		in, out := &in.SeKniBurstFactor, &out.SeKniBurstFactor
		*out = new(string)
		**out = **in
	}
	if in.SeL3EncapIpc != nil {
		in, out := &in.SeL3EncapIpc, &out.SeL3EncapIpc
		*out = new(string)
		**out = **in
	}
	if in.SeLogBufferAppBlockingDequeue != nil {
		in, out := &in.SeLogBufferAppBlockingDequeue, &out.SeLogBufferAppBlockingDequeue
		*out = new(string)
		**out = **in
	}
	if in.SeLogBufferConnBlockingDequeue != nil {
		in, out := &in.SeLogBufferConnBlockingDequeue, &out.SeLogBufferConnBlockingDequeue
		*out = new(string)
		**out = **in
	}
	if in.SeLogBufferEventsBlockingDequeue != nil {
		in, out := &in.SeLogBufferEventsBlockingDequeue, &out.SeLogBufferEventsBlockingDequeue
		*out = new(string)
		**out = **in
	}
	if in.SeLro != nil {
		in, out := &in.SeLro, &out.SeLro
		*out = new(string)
		**out = **in
	}
	if in.SeMpRingRetryCount != nil {
		in, out := &in.SeMpRingRetryCount, &out.SeMpRingRetryCount
		*out = new(string)
		**out = **in
	}
	if in.SeMtu != nil {
		in, out := &in.SeMtu, &out.SeMtu
		*out = new(string)
		**out = **in
	}
	if in.SeNamePrefix != nil {
		in, out := &in.SeNamePrefix, &out.SeNamePrefix
		*out = new(string)
		**out = **in
	}
	if in.SePacketBufferMax != nil {
		in, out := &in.SePacketBufferMax, &out.SePacketBufferMax
		*out = new(string)
		**out = **in
	}
	if in.SePcapLookahead != nil {
		in, out := &in.SePcapLookahead, &out.SePcapLookahead
		*out = new(string)
		**out = **in
	}
	if in.SePcapPktCount != nil {
		in, out := &in.SePcapPktCount, &out.SePcapPktCount
		*out = new(string)
		**out = **in
	}
	if in.SePcapPktSz != nil {
		in, out := &in.SePcapPktSz, &out.SePcapPktSz
		*out = new(string)
		**out = **in
	}
	if in.SePcapQdiscBypass != nil {
		in, out := &in.SePcapQdiscBypass, &out.SePcapQdiscBypass
		*out = new(string)
		**out = **in
	}
	if in.SePcapReinitFrequency != nil {
		in, out := &in.SePcapReinitFrequency, &out.SePcapReinitFrequency
		*out = new(string)
		**out = **in
	}
	if in.SePcapReinitThreshold != nil {
		in, out := &in.SePcapReinitThreshold, &out.SePcapReinitThreshold
		*out = new(string)
		**out = **in
	}
	if in.SeProbePort != nil {
		in, out := &in.SeProbePort, &out.SeProbePort
		*out = new(string)
		**out = **in
	}
	if in.SeRlProp != nil {
		in, out := &in.SeRlProp, &out.SeRlProp
		*out = make([]SeRlPropInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SeRumSamplingNavInterval != nil {
		in, out := &in.SeRumSamplingNavInterval, &out.SeRumSamplingNavInterval
		*out = new(string)
		**out = **in
	}
	if in.SeRumSamplingNavPercent != nil {
		in, out := &in.SeRumSamplingNavPercent, &out.SeRumSamplingNavPercent
		*out = new(string)
		**out = **in
	}
	if in.SeRumSamplingResInterval != nil {
		in, out := &in.SeRumSamplingResInterval, &out.SeRumSamplingResInterval
		*out = new(string)
		**out = **in
	}
	if in.SeRumSamplingResPercent != nil {
		in, out := &in.SeRumSamplingResPercent, &out.SeRumSamplingResPercent
		*out = new(string)
		**out = **in
	}
	if in.SeSbDedicatedCore != nil {
		in, out := &in.SeSbDedicatedCore, &out.SeSbDedicatedCore
		*out = new(string)
		**out = **in
	}
	if in.SeSbThreads != nil {
		in, out := &in.SeSbThreads, &out.SeSbThreads
		*out = new(string)
		**out = **in
	}
	if in.SeThreadMultiplier != nil {
		in, out := &in.SeThreadMultiplier, &out.SeThreadMultiplier
		*out = new(string)
		**out = **in
	}
	if in.SeTimeTrackerProps != nil {
		in, out := &in.SeTimeTrackerProps, &out.SeTimeTrackerProps
		*out = make([]SeTimeTrackerPropsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SeTracertPortRange != nil {
		in, out := &in.SeTracertPortRange, &out.SeTracertPortRange
		*out = make([]SeTracertPortRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SeTunnelMode != nil {
		in, out := &in.SeTunnelMode, &out.SeTunnelMode
		*out = new(string)
		**out = **in
	}
	if in.SeTunnelUDPPort != nil {
		in, out := &in.SeTunnelUDPPort, &out.SeTunnelUDPPort
		*out = new(string)
		**out = **in
	}
	if in.SeTxBatchSize != nil {
		in, out := &in.SeTxBatchSize, &out.SeTxBatchSize
		*out = new(string)
		**out = **in
	}
	if in.SeTxqThreshold != nil {
		in, out := &in.SeTxqThreshold, &out.SeTxqThreshold
		*out = new(string)
		**out = **in
	}
	if in.SeUDPEncapIpc != nil {
		in, out := &in.SeUDPEncapIpc, &out.SeUDPEncapIpc
		*out = new(string)
		**out = **in
	}
	if in.SeUseDpdk != nil {
		in, out := &in.SeUseDpdk, &out.SeUseDpdk
		*out = new(string)
		**out = **in
	}
	if in.SeVnicTxSwQueueFlushFrequency != nil {
		in, out := &in.SeVnicTxSwQueueFlushFrequency, &out.SeVnicTxSwQueueFlushFrequency
		*out = new(string)
		**out = **in
	}
	if in.SeVnicTxSwQueueSize != nil {
		in, out := &in.SeVnicTxSwQueueSize, &out.SeVnicTxSwQueueSize
		*out = new(string)
		**out = **in
	}
	if in.SeVsHbMaxPktsInBatch != nil {
		in, out := &in.SeVsHbMaxPktsInBatch, &out.SeVsHbMaxPktsInBatch
		*out = new(string)
		**out = **in
	}
	if in.SeVsHbMaxVsInPkt != nil {
		in, out := &in.SeVsHbMaxVsInPkt, &out.SeVsHbMaxVsInPkt
		*out = new(string)
		**out = **in
	}
	if in.SelfSeElection != nil {
		in, out := &in.SelfSeElection, &out.SelfSeElection
		*out = new(string)
		**out = **in
	}
	if in.SendSeReadyTimeout != nil {
		in, out := &in.SendSeReadyTimeout, &out.SendSeReadyTimeout
		*out = new(string)
		**out = **in
	}
	if in.ServiceIPSubnets != nil {
		in, out := &in.ServiceIPSubnets, &out.ServiceIPSubnets
		*out = make([]ServiceIPSubnetsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceIp6Subnets != nil {
		in, out := &in.ServiceIp6Subnets, &out.ServiceIp6Subnets
		*out = make([]ServiceIp6SubnetsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShmMinimumConfigMemory != nil {
		in, out := &in.ShmMinimumConfigMemory, &out.ShmMinimumConfigMemory
		*out = new(string)
		**out = **in
	}
	if in.SignificantLogThrottle != nil {
		in, out := &in.SignificantLogThrottle, &out.SignificantLogThrottle
		*out = new(string)
		**out = **in
	}
	if in.TenantRef != nil {
		in, out := &in.TenantRef, &out.TenantRef
		*out = new(string)
		**out = **in
	}
	if in.TransientSharedMemoryMax != nil {
		in, out := &in.TransientSharedMemoryMax, &out.TransientSharedMemoryMax
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.UdfLogThrottle != nil {
		in, out := &in.UdfLogThrottle, &out.UdfLogThrottle
		*out = new(string)
		**out = **in
	}
	if in.UpstreamConnectTimeout != nil {
		in, out := &in.UpstreamConnectTimeout, &out.UpstreamConnectTimeout
		*out = new(string)
		**out = **in
	}
	if in.UpstreamConnpoolEnable != nil {
		in, out := &in.UpstreamConnpoolEnable, &out.UpstreamConnpoolEnable
		*out = new(string)
		**out = **in
	}
	if in.UpstreamReadTimeout != nil {
		in, out := &in.UpstreamReadTimeout, &out.UpstreamReadTimeout
		*out = new(string)
		**out = **in
	}
	if in.UpstreamSendTimeout != nil {
		in, out := &in.UpstreamSendTimeout, &out.UpstreamSendTimeout
		*out = new(string)
		**out = **in
	}
	if in.UseDpUtilForScaleout != nil {
		in, out := &in.UseDpUtilForScaleout, &out.UseDpUtilForScaleout
		*out = new(string)
		**out = **in
	}
	if in.UseHyperthreadedCores != nil {
		in, out := &in.UseHyperthreadedCores, &out.UseHyperthreadedCores
		*out = new(string)
		**out = **in
	}
	if in.UseLegacyNetlink != nil {
		in, out := &in.UseLegacyNetlink, &out.UseLegacyNetlink
		*out = new(string)
		**out = **in
	}
	if in.UseObjsync != nil {
		in, out := &in.UseObjsync, &out.UseObjsync
		*out = new(string)
		**out = **in
	}
	if in.UseStandardALB != nil {
		in, out := &in.UseStandardALB, &out.UseStandardALB
		*out = new(string)
		**out = **in
	}
	if in.UserAgentCacheConfig != nil {
		in, out := &in.UserAgentCacheConfig, &out.UserAgentCacheConfig
		*out = make([]UserAgentCacheConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UserDefinedMetricAge != nil {
		in, out := &in.UserDefinedMetricAge, &out.UserDefinedMetricAge
		*out = new(string)
		**out = **in
	}
	if in.VcenterClusters != nil {
		in, out := &in.VcenterClusters, &out.VcenterClusters
		*out = make([]VcenterClustersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcenterDatastoreMode != nil {
		in, out := &in.VcenterDatastoreMode, &out.VcenterDatastoreMode
		*out = new(string)
		**out = **in
	}
	if in.VcenterDatastores != nil {
		in, out := &in.VcenterDatastores, &out.VcenterDatastores
		*out = make([]VcenterDatastoresInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcenterDatastoresInclude != nil {
		in, out := &in.VcenterDatastoresInclude, &out.VcenterDatastoresInclude
		*out = new(string)
		**out = **in
	}
	if in.VcenterFolder != nil {
		in, out := &in.VcenterFolder, &out.VcenterFolder
		*out = new(string)
		**out = **in
	}
	if in.VcenterHosts != nil {
		in, out := &in.VcenterHosts, &out.VcenterHosts
		*out = make([]VcenterHostsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcenterParkingVnicPg != nil {
		in, out := &in.VcenterParkingVnicPg, &out.VcenterParkingVnicPg
		*out = new(string)
		**out = **in
	}
	if in.Vcenters != nil {
		in, out := &in.Vcenters, &out.Vcenters
		*out = make([]VcentersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcpusPerSe != nil {
		in, out := &in.VcpusPerSe, &out.VcpusPerSe
		*out = new(string)
		**out = **in
	}
	if in.VipAsg != nil {
		in, out := &in.VipAsg, &out.VipAsg
		*out = make([]VipAsgInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VnicDHCPIPCheckInterval != nil {
		in, out := &in.VnicDHCPIPCheckInterval, &out.VnicDHCPIPCheckInterval
		*out = new(string)
		**out = **in
	}
	if in.VnicDHCPIPMaxRetries != nil {
		in, out := &in.VnicDHCPIPMaxRetries, &out.VnicDHCPIPMaxRetries
		*out = new(string)
		**out = **in
	}
	if in.VnicIPDeleteInterval != nil {
		in, out := &in.VnicIPDeleteInterval, &out.VnicIPDeleteInterval
		*out = new(string)
		**out = **in
	}
	if in.VnicProbeInterval != nil {
		in, out := &in.VnicProbeInterval, &out.VnicProbeInterval
		*out = new(string)
		**out = **in
	}
	if in.VnicRPCRetryInterval != nil {
		in, out := &in.VnicRPCRetryInterval, &out.VnicRPCRetryInterval
		*out = new(string)
		**out = **in
	}
	if in.VnicdbCmdHistorySize != nil {
		in, out := &in.VnicdbCmdHistorySize, &out.VnicdbCmdHistorySize
		*out = new(string)
		**out = **in
	}
	if in.VsHostRedundancy != nil {
		in, out := &in.VsHostRedundancy, &out.VsHostRedundancy
		*out = new(string)
		**out = **in
	}
	if in.VsScaleinTimeout != nil {
		in, out := &in.VsScaleinTimeout, &out.VsScaleinTimeout
		*out = new(string)
		**out = **in
	}
	if in.VsScaleinTimeoutForUpgrade != nil {
		in, out := &in.VsScaleinTimeoutForUpgrade, &out.VsScaleinTimeoutForUpgrade
		*out = new(string)
		**out = **in
	}
	if in.VsScaleoutTimeout != nil {
		in, out := &in.VsScaleoutTimeout, &out.VsScaleoutTimeout
		*out = new(string)
		**out = **in
	}
	if in.VsSePrimarySwitchoverAdditionalWaitTime != nil {
		in, out := &in.VsSePrimarySwitchoverAdditionalWaitTime, &out.VsSePrimarySwitchoverAdditionalWaitTime
		*out = new(string)
		**out = **in
	}
	if in.VsSeScaleinAdditionalWaitTime != nil {
		in, out := &in.VsSeScaleinAdditionalWaitTime, &out.VsSeScaleinAdditionalWaitTime
		*out = new(string)
		**out = **in
	}
	if in.VsSeScaleoutAdditionalWaitTime != nil {
		in, out := &in.VsSeScaleoutAdditionalWaitTime, &out.VsSeScaleoutAdditionalWaitTime
		*out = new(string)
		**out = **in
	}
	if in.VsSeScaleoutReadyTimeout != nil {
		in, out := &in.VsSeScaleoutReadyTimeout, &out.VsSeScaleoutReadyTimeout
		*out = new(string)
		**out = **in
	}
	if in.VsSwitchoverTimeout != nil {
		in, out := &in.VsSwitchoverTimeout, &out.VsSwitchoverTimeout
		*out = new(string)
		**out = **in
	}
	if in.VssPlacement != nil {
		in, out := &in.VssPlacement, &out.VssPlacement
		*out = make([]VssPlacementInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VssPlacementEnabled != nil {
		in, out := &in.VssPlacementEnabled, &out.VssPlacementEnabled
		*out = new(string)
		**out = **in
	}
	if in.WafMempool != nil {
		in, out := &in.WafMempool, &out.WafMempool
		*out = new(string)
		**out = **in
	}
	if in.WafMempoolSize != nil {
		in, out := &in.WafMempoolSize, &out.WafMempoolSize
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceEngineGroupInitParameters.
func (in *ServiceEngineGroupInitParameters) DeepCopy() *ServiceEngineGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceEngineGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceEngineGroupList) DeepCopyInto(out *ServiceEngineGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ServiceEngineGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceEngineGroupList.
func (in *ServiceEngineGroupList) DeepCopy() *ServiceEngineGroupList {
	if in == nil {
		return nil
	}
	out := new(ServiceEngineGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceEngineGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceEngineGroupMarkersInitParameters) DeepCopyInto(out *ServiceEngineGroupMarkersInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceEngineGroupMarkersInitParameters.
func (in *ServiceEngineGroupMarkersInitParameters) DeepCopy() *ServiceEngineGroupMarkersInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceEngineGroupMarkersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceEngineGroupMarkersObservation) DeepCopyInto(out *ServiceEngineGroupMarkersObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceEngineGroupMarkersObservation.
func (in *ServiceEngineGroupMarkersObservation) DeepCopy() *ServiceEngineGroupMarkersObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceEngineGroupMarkersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceEngineGroupMarkersParameters) DeepCopyInto(out *ServiceEngineGroupMarkersParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceEngineGroupMarkersParameters.
func (in *ServiceEngineGroupMarkersParameters) DeepCopy() *ServiceEngineGroupMarkersParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceEngineGroupMarkersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceEngineGroupObservation) DeepCopyInto(out *ServiceEngineGroupObservation) {
	*out = *in
	if in.AcceleratedNetworking != nil {
		in, out := &in.AcceleratedNetworking, &out.AcceleratedNetworking
		*out = new(string)
		**out = **in
	}
	if in.ActiveStandby != nil {
		in, out := &in.ActiveStandby, &out.ActiveStandby
		*out = new(string)
		**out = **in
	}
	if in.AggressiveFailureDetection != nil {
		in, out := &in.AggressiveFailureDetection, &out.AggressiveFailureDetection
		*out = new(string)
		**out = **in
	}
	if in.Algo != nil {
		in, out := &in.Algo, &out.Algo
		*out = new(string)
		**out = **in
	}
	if in.AllowBurst != nil {
		in, out := &in.AllowBurst, &out.AllowBurst
		*out = new(string)
		**out = **in
	}
	if in.AppCachePercent != nil {
		in, out := &in.AppCachePercent, &out.AppCachePercent
		*out = new(string)
		**out = **in
	}
	if in.AppCacheThreshold != nil {
		in, out := &in.AppCacheThreshold, &out.AppCacheThreshold
		*out = new(string)
		**out = **in
	}
	if in.AppLearningMemoryPercent != nil {
		in, out := &in.AppLearningMemoryPercent, &out.AppLearningMemoryPercent
		*out = new(string)
		**out = **in
	}
	if in.ArchiveShmLimit != nil {
		in, out := &in.ArchiveShmLimit, &out.ArchiveShmLimit
		*out = new(string)
		**out = **in
	}
	if in.AsyncSSL != nil {
		in, out := &in.AsyncSSL, &out.AsyncSSL
		*out = new(string)
		**out = **in
	}
	if in.AsyncSSLThreads != nil {
		in, out := &in.AsyncSSLThreads, &out.AsyncSSLThreads
		*out = new(string)
		**out = **in
	}
	if in.AutoRebalance != nil {
		in, out := &in.AutoRebalance, &out.AutoRebalance
		*out = new(string)
		**out = **in
	}
	if in.AutoRebalanceCapacityPerSe != nil {
		in, out := &in.AutoRebalanceCapacityPerSe, &out.AutoRebalanceCapacityPerSe
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
	if in.AutoRebalanceCriteria != nil {
		in, out := &in.AutoRebalanceCriteria, &out.AutoRebalanceCriteria
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AutoRebalanceInterval != nil {
		in, out := &in.AutoRebalanceInterval, &out.AutoRebalanceInterval
		*out = new(string)
		**out = **in
	}
	if in.AutoRedistributeActiveStandbyLoad != nil {
		in, out := &in.AutoRedistributeActiveStandbyLoad, &out.AutoRedistributeActiveStandbyLoad
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZoneRefs != nil {
		in, out := &in.AvailabilityZoneRefs, &out.AvailabilityZoneRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BGPPeerMonitorFailoverEnabled != nil {
		in, out := &in.BGPPeerMonitorFailoverEnabled, &out.BGPPeerMonitorFailoverEnabled
		*out = new(string)
		**out = **in
	}
	if in.BGPStateUpdateInterval != nil {
		in, out := &in.BGPStateUpdateInterval, &out.BGPStateUpdateInterval
		*out = new(string)
		**out = **in
	}
	if in.BaremetalDispatcherHandlesFlows != nil {
		in, out := &in.BaremetalDispatcherHandlesFlows, &out.BaremetalDispatcherHandlesFlows
		*out = new(string)
		**out = **in
	}
	if in.BufferSe != nil {
		in, out := &in.BufferSe, &out.BufferSe
		*out = new(string)
		**out = **in
	}
	if in.CPUReserve != nil {
		in, out := &in.CPUReserve, &out.CPUReserve
		*out = new(string)
		**out = **in
	}
	if in.CPUSocketAffinity != nil {
		in, out := &in.CPUSocketAffinity, &out.CPUSocketAffinity
		*out = new(string)
		**out = **in
	}
	if in.CloudRef != nil {
		in, out := &in.CloudRef, &out.CloudRef
		*out = new(string)
		**out = **in
	}
	if in.CompressIPRulesForEachNsSubnet != nil {
		in, out := &in.CompressIPRulesForEachNsSubnet, &out.CompressIPRulesForEachNsSubnet
		*out = new(string)
		**out = **in
	}
	if in.ConfigDebugsOnAllCores != nil {
		in, out := &in.ConfigDebugsOnAllCores, &out.ConfigDebugsOnAllCores
		*out = new(string)
		**out = **in
	}
	if in.ConfigpbAttributes != nil {
		in, out := &in.ConfigpbAttributes, &out.ConfigpbAttributes
		*out = make([]ServiceEngineGroupConfigpbAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnectionMemoryPercentage != nil {
		in, out := &in.ConnectionMemoryPercentage, &out.ConnectionMemoryPercentage
		*out = new(string)
		**out = **in
	}
	if in.CoreShmAppCache != nil {
		in, out := &in.CoreShmAppCache, &out.CoreShmAppCache
		*out = new(string)
		**out = **in
	}
	if in.CoreShmAppLearning != nil {
		in, out := &in.CoreShmAppLearning, &out.CoreShmAppLearning
		*out = new(string)
		**out = **in
	}
	if in.CustomSecuritygroupsData != nil {
		in, out := &in.CustomSecuritygroupsData, &out.CustomSecuritygroupsData
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSecuritygroupsMgmt != nil {
		in, out := &in.CustomSecuritygroupsMgmt, &out.CustomSecuritygroupsMgmt
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomTag != nil {
		in, out := &in.CustomTag, &out.CustomTag
		*out = make([]CustomTagObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataNetworkID != nil {
		in, out := &in.DataNetworkID, &out.DataNetworkID
		*out = new(string)
		**out = **in
	}
	if in.DatascriptTimeout != nil {
		in, out := &in.DatascriptTimeout, &out.DatascriptTimeout
		*out = new(string)
		**out = **in
	}
	if in.DeactivateIPv6Discovery != nil {
		in, out := &in.DeactivateIPv6Discovery, &out.DeactivateIPv6Discovery
		*out = new(string)
		**out = **in
	}
	if in.DeactivateKniFilteringAtDispatcher != nil {
		in, out := &in.DeactivateKniFilteringAtDispatcher, &out.DeactivateKniFilteringAtDispatcher
		*out = new(string)
		**out = **in
	}
	if in.DedicatedDispatcherCore != nil {
		in, out := &in.DedicatedDispatcherCore, &out.DedicatedDispatcherCore
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableAviSecuritygroups != nil {
		in, out := &in.DisableAviSecuritygroups, &out.DisableAviSecuritygroups
		*out = new(string)
		**out = **in
	}
	if in.DisableCsumOffloads != nil {
		in, out := &in.DisableCsumOffloads, &out.DisableCsumOffloads
		*out = new(string)
		**out = **in
	}
	if in.DisableFlowProbes != nil {
		in, out := &in.DisableFlowProbes, &out.DisableFlowProbes
		*out = new(string)
		**out = **in
	}
	if in.DisableGro != nil {
		in, out := &in.DisableGro, &out.DisableGro
		*out = new(string)
		**out = **in
	}
	if in.DisableSeMemoryCheck != nil {
		in, out := &in.DisableSeMemoryCheck, &out.DisableSeMemoryCheck
		*out = new(string)
		**out = **in
	}
	if in.DisableTso != nil {
		in, out := &in.DisableTso, &out.DisableTso
		*out = new(string)
		**out = **in
	}
	if in.DiskPerSe != nil {
		in, out := &in.DiskPerSe, &out.DiskPerSe
		*out = new(string)
		**out = **in
	}
	if in.DistributeLoadActiveStandby != nil {
		in, out := &in.DistributeLoadActiveStandby, &out.DistributeLoadActiveStandby
		*out = new(string)
		**out = **in
	}
	if in.DistributeQueues != nil {
		in, out := &in.DistributeQueues, &out.DistributeQueues
		*out = new(string)
		**out = **in
	}
	if in.DistributeVnics != nil {
		in, out := &in.DistributeVnics, &out.DistributeVnics
		*out = new(string)
		**out = **in
	}
	if in.DownstreamSendTimeout != nil {
		in, out := &in.DownstreamSendTimeout, &out.DownstreamSendTimeout
		*out = new(string)
		**out = **in
	}
	if in.DpAggressiveDeqIntervalMsec != nil {
		in, out := &in.DpAggressiveDeqIntervalMsec, &out.DpAggressiveDeqIntervalMsec
		*out = new(string)
		**out = **in
	}
	if in.DpAggressiveEnqIntervalMsec != nil {
		in, out := &in.DpAggressiveEnqIntervalMsec, &out.DpAggressiveEnqIntervalMsec
		*out = new(string)
		**out = **in
	}
	if in.DpAggressiveHbFrequency != nil {
		in, out := &in.DpAggressiveHbFrequency, &out.DpAggressiveHbFrequency
		*out = new(string)
		**out = **in
	}
	if in.DpAggressiveHbTimeoutCount != nil {
		in, out := &in.DpAggressiveHbTimeoutCount, &out.DpAggressiveHbTimeoutCount
		*out = new(string)
		**out = **in
	}
	if in.DpDeqIntervalMsec != nil {
		in, out := &in.DpDeqIntervalMsec, &out.DpDeqIntervalMsec
		*out = new(string)
		**out = **in
	}
	if in.DpEnqIntervalMsec != nil {
		in, out := &in.DpEnqIntervalMsec, &out.DpEnqIntervalMsec
		*out = new(string)
		**out = **in
	}
	if in.DpHbFrequency != nil {
		in, out := &in.DpHbFrequency, &out.DpHbFrequency
		*out = new(string)
		**out = **in
	}
	if in.DpHbTimeoutCount != nil {
		in, out := &in.DpHbTimeoutCount, &out.DpHbTimeoutCount
		*out = new(string)
		**out = **in
	}
	if in.DpdkGroTimeoutInterval != nil {
		in, out := &in.DpdkGroTimeoutInterval, &out.DpdkGroTimeoutInterval
		*out = new(string)
		**out = **in
	}
	if in.EnableGratarpPermanent != nil {
		in, out := &in.EnableGratarpPermanent, &out.EnableGratarpPermanent
		*out = new(string)
		**out = **in
	}
	if in.EnableHSMLog != nil {
		in, out := &in.EnableHSMLog, &out.EnableHSMLog
		*out = new(string)
		**out = **in
	}
	if in.EnableHSMPriming != nil {
		in, out := &in.EnableHSMPriming, &out.EnableHSMPriming
		*out = new(string)
		**out = **in
	}
	if in.EnableMultiLB != nil {
		in, out := &in.EnableMultiLB, &out.EnableMultiLB
		*out = new(string)
		**out = **in
	}
	if in.EnablePcapTxRing != nil {
		in, out := &in.EnablePcapTxRing, &out.EnablePcapTxRing
		*out = new(string)
		**out = **in
	}
	if in.EphemeralPortrangeEnd != nil {
		in, out := &in.EphemeralPortrangeEnd, &out.EphemeralPortrangeEnd
		*out = new(string)
		**out = **in
	}
	if in.EphemeralPortrangeStart != nil {
		in, out := &in.EphemeralPortrangeStart, &out.EphemeralPortrangeStart
		*out = new(string)
		**out = **in
	}
	if in.ExtraConfigMultiplier != nil {
		in, out := &in.ExtraConfigMultiplier, &out.ExtraConfigMultiplier
		*out = new(string)
		**out = **in
	}
	if in.ExtraSharedConfigMemory != nil {
		in, out := &in.ExtraSharedConfigMemory, &out.ExtraSharedConfigMemory
		*out = new(string)
		**out = **in
	}
	if in.FlowTableNewSynMaxEntries != nil {
		in, out := &in.FlowTableNewSynMaxEntries, &out.FlowTableNewSynMaxEntries
		*out = new(string)
		**out = **in
	}
	if in.FreeListSize != nil {
		in, out := &in.FreeListSize, &out.FreeListSize
		*out = new(string)
		**out = **in
	}
	if in.GCPConfig != nil {
		in, out := &in.GCPConfig, &out.GCPConfig
		*out = make([]GCPConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GRPCChannelConnectTimeout != nil {
		in, out := &in.GRPCChannelConnectTimeout, &out.GRPCChannelConnectTimeout
		*out = new(string)
		**out = **in
	}
	if in.GratarpPermanentPeriodicity != nil {
		in, out := &in.GratarpPermanentPeriodicity, &out.GratarpPermanentPeriodicity
		*out = new(string)
		**out = **in
	}
	if in.HTTPRumConsoleLog != nil {
		in, out := &in.HTTPRumConsoleLog, &out.HTTPRumConsoleLog
		*out = new(string)
		**out = **in
	}
	if in.HTTPRumMinContentLength != nil {
		in, out := &in.HTTPRumMinContentLength, &out.HTTPRumMinContentLength
		*out = new(string)
		**out = **in
	}
	if in.HaMode != nil {
		in, out := &in.HaMode, &out.HaMode
		*out = new(string)
		**out = **in
	}
	if in.HandlePerPktAttack != nil {
		in, out := &in.HandlePerPktAttack, &out.HandlePerPktAttack
		*out = new(string)
		**out = **in
	}
	if in.HardwaresecuritymodulegroupRef != nil {
		in, out := &in.HardwaresecuritymodulegroupRef, &out.HardwaresecuritymodulegroupRef
		*out = new(string)
		**out = **in
	}
	if in.HeapMinimumConfigMemory != nil {
		in, out := &in.HeapMinimumConfigMemory, &out.HeapMinimumConfigMemory
		*out = new(string)
		**out = **in
	}
	if in.HmOnStandby != nil {
		in, out := &in.HmOnStandby, &out.HmOnStandby
		*out = new(string)
		**out = **in
	}
	if in.HostAttributeKey != nil {
		in, out := &in.HostAttributeKey, &out.HostAttributeKey
		*out = new(string)
		**out = **in
	}
	if in.HostAttributeValue != nil {
		in, out := &in.HostAttributeValue, &out.HostAttributeValue
		*out = new(string)
		**out = **in
	}
	if in.HostGatewayMonitor != nil {
		in, out := &in.HostGatewayMonitor, &out.HostGatewayMonitor
		*out = new(string)
		**out = **in
	}
	if in.HybridRssMode != nil {
		in, out := &in.HybridRssMode, &out.HybridRssMode
		*out = new(string)
		**out = **in
	}
	if in.Hypervisor != nil {
		in, out := &in.Hypervisor, &out.Hypervisor
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IgnoreDockerMacChange != nil {
		in, out := &in.IgnoreDockerMacChange, &out.IgnoreDockerMacChange
		*out = new(string)
		**out = **in
	}
	if in.IgnoreRttThreshold != nil {
		in, out := &in.IgnoreRttThreshold, &out.IgnoreRttThreshold
		*out = new(string)
		**out = **in
	}
	if in.IngressAccessData != nil {
		in, out := &in.IngressAccessData, &out.IngressAccessData
		*out = new(string)
		**out = **in
	}
	if in.IngressAccessMgmt != nil {
		in, out := &in.IngressAccessMgmt, &out.IngressAccessMgmt
		*out = new(string)
		**out = **in
	}
	if in.InstanceFlavor != nil {
		in, out := &in.InstanceFlavor, &out.InstanceFlavor
		*out = new(string)
		**out = **in
	}
	if in.InstanceFlavorInfo != nil {
		in, out := &in.InstanceFlavorInfo, &out.InstanceFlavorInfo
		*out = make([]InstanceFlavorInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Iptables != nil {
		in, out := &in.Iptables, &out.Iptables
		*out = make([]IptablesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KniAllowedServerPorts != nil {
		in, out := &in.KniAllowedServerPorts, &out.KniAllowedServerPorts
		*out = make([]KniAllowedServerPortsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.L7ConnsPerCore != nil {
		in, out := &in.L7ConnsPerCore, &out.L7ConnsPerCore
		*out = new(string)
		**out = **in
	}
	if in.L7ResvdListenConnsPerCore != nil {
		in, out := &in.L7ResvdListenConnsPerCore, &out.L7ResvdListenConnsPerCore
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]LabelsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LbactionNumRequestsToDispatch != nil {
		in, out := &in.LbactionNumRequestsToDispatch, &out.LbactionNumRequestsToDispatch
		*out = new(string)
		**out = **in
	}
	if in.LbactionRqPerRequestMaxRetries != nil {
		in, out := &in.LbactionRqPerRequestMaxRetries, &out.LbactionRqPerRequestMaxRetries
		*out = new(string)
		**out = **in
	}
	if in.LeastLoadCoreSelection != nil {
		in, out := &in.LeastLoadCoreSelection, &out.LeastLoadCoreSelection
		*out = new(string)
		**out = **in
	}
	if in.LicenseTier != nil {
		in, out := &in.LicenseTier, &out.LicenseTier
		*out = new(string)
		**out = **in
	}
	if in.LicenseType != nil {
		in, out := &in.LicenseType, &out.LicenseType
		*out = new(string)
		**out = **in
	}
	if in.LogAgentCompressLogs != nil {
		in, out := &in.LogAgentCompressLogs, &out.LogAgentCompressLogs
		*out = new(string)
		**out = **in
	}
	if in.LogAgentDebugEnabled != nil {
		in, out := &in.LogAgentDebugEnabled, &out.LogAgentDebugEnabled
		*out = new(string)
		**out = **in
	}
	if in.LogAgentFileSzAppl != nil {
		in, out := &in.LogAgentFileSzAppl, &out.LogAgentFileSzAppl
		*out = new(string)
		**out = **in
	}
	if in.LogAgentFileSzConn != nil {
		in, out := &in.LogAgentFileSzConn, &out.LogAgentFileSzConn
		*out = new(string)
		**out = **in
	}
	if in.LogAgentFileSzDebug != nil {
		in, out := &in.LogAgentFileSzDebug, &out.LogAgentFileSzDebug
		*out = new(string)
		**out = **in
	}
	if in.LogAgentFileSzEvent != nil {
		in, out := &in.LogAgentFileSzEvent, &out.LogAgentFileSzEvent
		*out = new(string)
		**out = **in
	}
	if in.LogAgentLogStorageMinSz != nil {
		in, out := &in.LogAgentLogStorageMinSz, &out.LogAgentLogStorageMinSz
		*out = new(string)
		**out = **in
	}
	if in.LogAgentMaxConcurrentRsync != nil {
		in, out := &in.LogAgentMaxConcurrentRsync, &out.LogAgentMaxConcurrentRsync
		*out = new(string)
		**out = **in
	}
	if in.LogAgentMaxStorageExcessPercent != nil {
		in, out := &in.LogAgentMaxStorageExcessPercent, &out.LogAgentMaxStorageExcessPercent
		*out = new(string)
		**out = **in
	}
	if in.LogAgentMaxStorageIgnorePercent != nil {
		in, out := &in.LogAgentMaxStorageIgnorePercent, &out.LogAgentMaxStorageIgnorePercent
		*out = new(string)
		**out = **in
	}
	if in.LogAgentMinStoragePerVs != nil {
		in, out := &in.LogAgentMinStoragePerVs, &out.LogAgentMinStoragePerVs
		*out = new(string)
		**out = **in
	}
	if in.LogAgentSleepInterval != nil {
		in, out := &in.LogAgentSleepInterval, &out.LogAgentSleepInterval
		*out = new(string)
		**out = **in
	}
	if in.LogAgentTraceEnabled != nil {
		in, out := &in.LogAgentTraceEnabled, &out.LogAgentTraceEnabled
		*out = new(string)
		**out = **in
	}
	if in.LogAgentUnknownVsTimer != nil {
		in, out := &in.LogAgentUnknownVsTimer, &out.LogAgentUnknownVsTimer
		*out = new(string)
		**out = **in
	}
	if in.LogDisksz != nil {
		in, out := &in.LogDisksz, &out.LogDisksz
		*out = new(string)
		**out = **in
	}
	if in.LogMallocFailure != nil {
		in, out := &in.LogMallocFailure, &out.LogMallocFailure
		*out = new(string)
		**out = **in
	}
	if in.LogMessageMaxFileListSize != nil {
		in, out := &in.LogMessageMaxFileListSize, &out.LogMessageMaxFileListSize
		*out = new(string)
		**out = **in
	}
	if in.Markers != nil {
		in, out := &in.Markers, &out.Markers
		*out = make([]ServiceEngineGroupMarkersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxCPUUsage != nil {
		in, out := &in.MaxCPUUsage, &out.MaxCPUUsage
		*out = new(string)
		**out = **in
	}
	if in.MaxConcurrentExternalHm != nil {
		in, out := &in.MaxConcurrentExternalHm, &out.MaxConcurrentExternalHm
		*out = new(string)
		**out = **in
	}
	if in.MaxMemoryPerMempool != nil {
		in, out := &in.MaxMemoryPerMempool, &out.MaxMemoryPerMempool
		*out = new(string)
		**out = **in
	}
	if in.MaxNumSeDps != nil {
		in, out := &in.MaxNumSeDps, &out.MaxNumSeDps
		*out = new(string)
		**out = **in
	}
	if in.MaxPublicIpsPerLB != nil {
		in, out := &in.MaxPublicIpsPerLB, &out.MaxPublicIpsPerLB
		*out = new(string)
		**out = **in
	}
	if in.MaxQueuesPerVnic != nil {
		in, out := &in.MaxQueuesPerVnic, &out.MaxQueuesPerVnic
		*out = new(string)
		**out = **in
	}
	if in.MaxRulesPerLB != nil {
		in, out := &in.MaxRulesPerLB, &out.MaxRulesPerLB
		*out = new(string)
		**out = **in
	}
	if in.MaxScaleoutPerVs != nil {
		in, out := &in.MaxScaleoutPerVs, &out.MaxScaleoutPerVs
		*out = new(string)
		**out = **in
	}
	if in.MaxSe != nil {
		in, out := &in.MaxSe, &out.MaxSe
		*out = new(string)
		**out = **in
	}
	if in.MaxSkbFrags != nil {
		in, out := &in.MaxSkbFrags, &out.MaxSkbFrags
		*out = new(string)
		**out = **in
	}
	if in.MaxVsPerSe != nil {
		in, out := &in.MaxVsPerSe, &out.MaxVsPerSe
		*out = new(string)
		**out = **in
	}
	if in.MemReserve != nil {
		in, out := &in.MemReserve, &out.MemReserve
		*out = new(string)
		**out = **in
	}
	if in.MemoryForConfigUpdate != nil {
		in, out := &in.MemoryForConfigUpdate, &out.MemoryForConfigUpdate
		*out = new(string)
		**out = **in
	}
	if in.MemoryPerSe != nil {
		in, out := &in.MemoryPerSe, &out.MemoryPerSe
		*out = new(string)
		**out = **in
	}
	if in.MetricsCollectionMode != nil {
		in, out := &in.MetricsCollectionMode, &out.MetricsCollectionMode
		*out = new(string)
		**out = **in
	}
	if in.MgmtNetworkRef != nil {
		in, out := &in.MgmtNetworkRef, &out.MgmtNetworkRef
		*out = new(string)
		**out = **in
	}
	if in.MgmtSubnet != nil {
		in, out := &in.MgmtSubnet, &out.MgmtSubnet
		*out = make([]MgmtSubnetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinCPUUsage != nil {
		in, out := &in.MinCPUUsage, &out.MinCPUUsage
		*out = new(string)
		**out = **in
	}
	if in.MinScaleoutPerVs != nil {
		in, out := &in.MinScaleoutPerVs, &out.MinScaleoutPerVs
		*out = new(string)
		**out = **in
	}
	if in.MinSe != nil {
		in, out := &in.MinSe, &out.MinSe
		*out = new(string)
		**out = **in
	}
	if in.MinimumConnectionMemory != nil {
		in, out := &in.MinimumConnectionMemory, &out.MinimumConnectionMemory
		*out = new(string)
		**out = **in
	}
	if in.MulticastEnable != nil {
		in, out := &in.MulticastEnable, &out.MulticastEnable
		*out = new(string)
		**out = **in
	}
	if in.NLogStreamingThreads != nil {
		in, out := &in.NLogStreamingThreads, &out.NLogStreamingThreads
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetlinkPollerThreads != nil {
		in, out := &in.NetlinkPollerThreads, &out.NetlinkPollerThreads
		*out = new(string)
		**out = **in
	}
	if in.NetlinkSockBufSize != nil {
		in, out := &in.NetlinkSockBufSize, &out.NetlinkSockBufSize
		*out = new(string)
		**out = **in
	}
	if in.NgxFreeConnectionStack != nil {
		in, out := &in.NgxFreeConnectionStack, &out.NgxFreeConnectionStack
		*out = new(string)
		**out = **in
	}
	if in.NonSignificantLogThrottle != nil {
		in, out := &in.NonSignificantLogThrottle, &out.NonSignificantLogThrottle
		*out = new(string)
		**out = **in
	}
	if in.NsHelperDeqIntervalMsec != nil {
		in, out := &in.NsHelperDeqIntervalMsec, &out.NsHelperDeqIntervalMsec
		*out = new(string)
		**out = **in
	}
	if in.NtpSyncFailEvent != nil {
		in, out := &in.NtpSyncFailEvent, &out.NtpSyncFailEvent
		*out = new(string)
		**out = **in
	}
	if in.NtpSyncStatusInterval != nil {
		in, out := &in.NtpSyncStatusInterval, &out.NtpSyncStatusInterval
		*out = new(string)
		**out = **in
	}
	if in.NumDispatcherCores != nil {
		in, out := &in.NumDispatcherCores, &out.NumDispatcherCores
		*out = new(string)
		**out = **in
	}
	if in.NumDispatcherQueues != nil {
		in, out := &in.NumDispatcherQueues, &out.NumDispatcherQueues
		*out = new(string)
		**out = **in
	}
	if in.NumFlowCoresSumChangesToIgnore != nil {
		in, out := &in.NumFlowCoresSumChangesToIgnore, &out.NumFlowCoresSumChangesToIgnore
		*out = new(string)
		**out = **in
	}
	if in.ObjsyncConfig != nil {
		in, out := &in.ObjsyncConfig, &out.ObjsyncConfig
		*out = make([]ObjsyncConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ObjsyncPort != nil {
		in, out := &in.ObjsyncPort, &out.ObjsyncPort
		*out = new(string)
		**out = **in
	}
	if in.OpenstackAvailabilityZones != nil {
		in, out := &in.OpenstackAvailabilityZones, &out.OpenstackAvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OpenstackMgmtNetworkName != nil {
		in, out := &in.OpenstackMgmtNetworkName, &out.OpenstackMgmtNetworkName
		*out = new(string)
		**out = **in
	}
	if in.OpenstackMgmtNetworkUUID != nil {
		in, out := &in.OpenstackMgmtNetworkUUID, &out.OpenstackMgmtNetworkUUID
		*out = new(string)
		**out = **in
	}
	if in.OsReservedMemory != nil {
		in, out := &in.OsReservedMemory, &out.OsReservedMemory
		*out = new(string)
		**out = **in
	}
	if in.PathMtuDiscoveryV4 != nil {
		in, out := &in.PathMtuDiscoveryV4, &out.PathMtuDiscoveryV4
		*out = new(string)
		**out = **in
	}
	if in.PathMtuDiscoveryV6 != nil {
		in, out := &in.PathMtuDiscoveryV6, &out.PathMtuDiscoveryV6
		*out = new(string)
		**out = **in
	}
	if in.PcapTxMode != nil {
		in, out := &in.PcapTxMode, &out.PcapTxMode
		*out = new(string)
		**out = **in
	}
	if in.PcapTxRingRdBalancingFactor != nil {
		in, out := &in.PcapTxRingRdBalancingFactor, &out.PcapTxRingRdBalancingFactor
		*out = new(string)
		**out = **in
	}
	if in.PerApp != nil {
		in, out := &in.PerApp, &out.PerApp
		*out = new(string)
		**out = **in
	}
	if in.PerVsAdmissionControl != nil {
		in, out := &in.PerVsAdmissionControl, &out.PerVsAdmissionControl
		*out = new(string)
		**out = **in
	}
	if in.PlacementMode != nil {
		in, out := &in.PlacementMode, &out.PlacementMode
		*out = new(string)
		**out = **in
	}
	if in.RealtimeSeMetrics != nil {
		in, out := &in.RealtimeSeMetrics, &out.RealtimeSeMetrics
		*out = make([]RealtimeSeMetricsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RebootOnPanic != nil {
		in, out := &in.RebootOnPanic, &out.RebootOnPanic
		*out = new(string)
		**out = **in
	}
	if in.ReplayVrfRoutesInterval != nil {
		in, out := &in.ReplayVrfRoutesInterval, &out.ReplayVrfRoutesInterval
		*out = new(string)
		**out = **in
	}
	if in.ResyncTimeInterval != nil {
		in, out := &in.ResyncTimeInterval, &out.ResyncTimeInterval
		*out = new(string)
		**out = **in
	}
	if in.SSLPreprocessSniHostname != nil {
		in, out := &in.SSLPreprocessSniHostname, &out.SSLPreprocessSniHostname
		*out = new(string)
		**out = **in
	}
	if in.SSLSessCachePerVs != nil {
		in, out := &in.SSLSessCachePerVs, &out.SSLSessCachePerVs
		*out = new(string)
		**out = **in
	}
	if in.SdbFlushInterval != nil {
		in, out := &in.SdbFlushInterval, &out.SdbFlushInterval
		*out = new(string)
		**out = **in
	}
	if in.SdbPipelineSize != nil {
		in, out := &in.SdbPipelineSize, &out.SdbPipelineSize
		*out = new(string)
		**out = **in
	}
	if in.SdbScanCount != nil {
		in, out := &in.SdbScanCount, &out.SdbScanCount
		*out = new(string)
		**out = **in
	}
	if in.SeBandwidthType != nil {
		in, out := &in.SeBandwidthType, &out.SeBandwidthType
		*out = new(string)
		**out = **in
	}
	if in.SeDebugTraceSz != nil {
		in, out := &in.SeDebugTraceSz, &out.SeDebugTraceSz
		*out = new(string)
		**out = **in
	}
	if in.SeDelayedFlowDelete != nil {
		in, out := &in.SeDelayedFlowDelete, &out.SeDelayedFlowDelete
		*out = new(string)
		**out = **in
	}
	if in.SeDeprovisionDelay != nil {
		in, out := &in.SeDeprovisionDelay, &out.SeDeprovisionDelay
		*out = new(string)
		**out = **in
	}
	if in.SeDosProfile != nil {
		in, out := &in.SeDosProfile, &out.SeDosProfile
		*out = make([]SeDosProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SeDpHmDrops != nil {
		in, out := &in.SeDpHmDrops, &out.SeDpHmDrops
		*out = new(string)
		**out = **in
	}
	if in.SeDpIfStatePollInterval != nil {
		in, out := &in.SeDpIfStatePollInterval, &out.SeDpIfStatePollInterval
		*out = new(string)
		**out = **in
	}
	if in.SeDpIsolation != nil {
		in, out := &in.SeDpIsolation, &out.SeDpIsolation
		*out = new(string)
		**out = **in
	}
	if in.SeDpIsolationNumNonDpCpus != nil {
		in, out := &in.SeDpIsolationNumNonDpCpus, &out.SeDpIsolationNumNonDpCpus
		*out = new(string)
		**out = **in
	}
	if in.SeDpLogNfEnqueuePercent != nil {
		in, out := &in.SeDpLogNfEnqueuePercent, &out.SeDpLogNfEnqueuePercent
		*out = new(string)
		**out = **in
	}
	if in.SeDpLogUdfEnqueuePercent != nil {
		in, out := &in.SeDpLogUdfEnqueuePercent, &out.SeDpLogUdfEnqueuePercent
		*out = new(string)
		**out = **in
	}
	if in.SeDpMaxHbVersion != nil {
		in, out := &in.SeDpMaxHbVersion, &out.SeDpMaxHbVersion
		*out = new(string)
		**out = **in
	}
	if in.SeDpVnicQueueStallEventSleep != nil {
		in, out := &in.SeDpVnicQueueStallEventSleep, &out.SeDpVnicQueueStallEventSleep
		*out = new(string)
		**out = **in
	}
	if in.SeDpVnicQueueStallThreshold != nil {
		in, out := &in.SeDpVnicQueueStallThreshold, &out.SeDpVnicQueueStallThreshold
		*out = new(string)
		**out = **in
	}
	if in.SeDpVnicQueueStallTimeout != nil {
		in, out := &in.SeDpVnicQueueStallTimeout, &out.SeDpVnicQueueStallTimeout
		*out = new(string)
		**out = **in
	}
	if in.SeDpVnicRestartOnQueueStallCount != nil {
		in, out := &in.SeDpVnicRestartOnQueueStallCount, &out.SeDpVnicRestartOnQueueStallCount
		*out = new(string)
		**out = **in
	}
	if in.SeDpVnicStallSeRestartWindow != nil {
		in, out := &in.SeDpVnicStallSeRestartWindow, &out.SeDpVnicStallSeRestartWindow
		*out = new(string)
		**out = **in
	}
	if in.SeDpdkPmd != nil {
		in, out := &in.SeDpdkPmd, &out.SeDpdkPmd
		*out = new(string)
		**out = **in
	}
	if in.SeDumpCoreOnAssert != nil {
		in, out := &in.SeDumpCoreOnAssert, &out.SeDumpCoreOnAssert
		*out = new(string)
		**out = **in
	}
	if in.SeEmulatedCores != nil {
		in, out := &in.SeEmulatedCores, &out.SeEmulatedCores
		*out = new(string)
		**out = **in
	}
	if in.SeFlowProbeRetries != nil {
		in, out := &in.SeFlowProbeRetries, &out.SeFlowProbeRetries
		*out = new(string)
		**out = **in
	}
	if in.SeFlowProbeRetryTimer != nil {
		in, out := &in.SeFlowProbeRetryTimer, &out.SeFlowProbeRetryTimer
		*out = new(string)
		**out = **in
	}
	if in.SeGroupAnalyticsPolicy != nil {
		in, out := &in.SeGroupAnalyticsPolicy, &out.SeGroupAnalyticsPolicy
		*out = make([]SeGroupAnalyticsPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SeHyperthreadedMode != nil {
		in, out := &in.SeHyperthreadedMode, &out.SeHyperthreadedMode
		*out = new(string)
		**out = **in
	}
	if in.SeIPEncapIpc != nil {
		in, out := &in.SeIPEncapIpc, &out.SeIPEncapIpc
		*out = new(string)
		**out = **in
	}
	if in.SeKniBurstFactor != nil {
		in, out := &in.SeKniBurstFactor, &out.SeKniBurstFactor
		*out = new(string)
		**out = **in
	}
	if in.SeL3EncapIpc != nil {
		in, out := &in.SeL3EncapIpc, &out.SeL3EncapIpc
		*out = new(string)
		**out = **in
	}
	if in.SeLogBufferAppBlockingDequeue != nil {
		in, out := &in.SeLogBufferAppBlockingDequeue, &out.SeLogBufferAppBlockingDequeue
		*out = new(string)
		**out = **in
	}
	if in.SeLogBufferConnBlockingDequeue != nil {
		in, out := &in.SeLogBufferConnBlockingDequeue, &out.SeLogBufferConnBlockingDequeue
		*out = new(string)
		**out = **in
	}
	if in.SeLogBufferEventsBlockingDequeue != nil {
		in, out := &in.SeLogBufferEventsBlockingDequeue, &out.SeLogBufferEventsBlockingDequeue
		*out = new(string)
		**out = **in
	}
	if in.SeLro != nil {
		in, out := &in.SeLro, &out.SeLro
		*out = new(string)
		**out = **in
	}
	if in.SeMpRingRetryCount != nil {
		in, out := &in.SeMpRingRetryCount, &out.SeMpRingRetryCount
		*out = new(string)
		**out = **in
	}
	if in.SeMtu != nil {
		in, out := &in.SeMtu, &out.SeMtu
		*out = new(string)
		**out = **in
	}
	if in.SeNamePrefix != nil {
		in, out := &in.SeNamePrefix, &out.SeNamePrefix
		*out = new(string)
		**out = **in
	}
	if in.SePacketBufferMax != nil {
		in, out := &in.SePacketBufferMax, &out.SePacketBufferMax
		*out = new(string)
		**out = **in
	}
	if in.SePcapLookahead != nil {
		in, out := &in.SePcapLookahead, &out.SePcapLookahead
		*out = new(string)
		**out = **in
	}
	if in.SePcapPktCount != nil {
		in, out := &in.SePcapPktCount, &out.SePcapPktCount
		*out = new(string)
		**out = **in
	}
	if in.SePcapPktSz != nil {
		in, out := &in.SePcapPktSz, &out.SePcapPktSz
		*out = new(string)
		**out = **in
	}
	if in.SePcapQdiscBypass != nil {
		in, out := &in.SePcapQdiscBypass, &out.SePcapQdiscBypass
		*out = new(string)
		**out = **in
	}
	if in.SePcapReinitFrequency != nil {
		in, out := &in.SePcapReinitFrequency, &out.SePcapReinitFrequency
		*out = new(string)
		**out = **in
	}
	if in.SePcapReinitThreshold != nil {
		in, out := &in.SePcapReinitThreshold, &out.SePcapReinitThreshold
		*out = new(string)
		**out = **in
	}
	if in.SeProbePort != nil {
		in, out := &in.SeProbePort, &out.SeProbePort
		*out = new(string)
		**out = **in
	}
	if in.SeRlProp != nil {
		in, out := &in.SeRlProp, &out.SeRlProp
		*out = make([]SeRlPropObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SeRumSamplingNavInterval != nil {
		in, out := &in.SeRumSamplingNavInterval, &out.SeRumSamplingNavInterval
		*out = new(string)
		**out = **in
	}
	if in.SeRumSamplingNavPercent != nil {
		in, out := &in.SeRumSamplingNavPercent, &out.SeRumSamplingNavPercent
		*out = new(string)
		**out = **in
	}
	if in.SeRumSamplingResInterval != nil {
		in, out := &in.SeRumSamplingResInterval, &out.SeRumSamplingResInterval
		*out = new(string)
		**out = **in
	}
	if in.SeRumSamplingResPercent != nil {
		in, out := &in.SeRumSamplingResPercent, &out.SeRumSamplingResPercent
		*out = new(string)
		**out = **in
	}
	if in.SeSbDedicatedCore != nil {
		in, out := &in.SeSbDedicatedCore, &out.SeSbDedicatedCore
		*out = new(string)
		**out = **in
	}
	if in.SeSbThreads != nil {
		in, out := &in.SeSbThreads, &out.SeSbThreads
		*out = new(string)
		**out = **in
	}
	if in.SeThreadMultiplier != nil {
		in, out := &in.SeThreadMultiplier, &out.SeThreadMultiplier
		*out = new(string)
		**out = **in
	}
	if in.SeTimeTrackerProps != nil {
		in, out := &in.SeTimeTrackerProps, &out.SeTimeTrackerProps
		*out = make([]SeTimeTrackerPropsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SeTracertPortRange != nil {
		in, out := &in.SeTracertPortRange, &out.SeTracertPortRange
		*out = make([]SeTracertPortRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SeTunnelMode != nil {
		in, out := &in.SeTunnelMode, &out.SeTunnelMode
		*out = new(string)
		**out = **in
	}
	if in.SeTunnelUDPPort != nil {
		in, out := &in.SeTunnelUDPPort, &out.SeTunnelUDPPort
		*out = new(string)
		**out = **in
	}
	if in.SeTxBatchSize != nil {
		in, out := &in.SeTxBatchSize, &out.SeTxBatchSize
		*out = new(string)
		**out = **in
	}
	if in.SeTxqThreshold != nil {
		in, out := &in.SeTxqThreshold, &out.SeTxqThreshold
		*out = new(string)
		**out = **in
	}
	if in.SeUDPEncapIpc != nil {
		in, out := &in.SeUDPEncapIpc, &out.SeUDPEncapIpc
		*out = new(string)
		**out = **in
	}
	if in.SeUseDpdk != nil {
		in, out := &in.SeUseDpdk, &out.SeUseDpdk
		*out = new(string)
		**out = **in
	}
	if in.SeVnicTxSwQueueFlushFrequency != nil {
		in, out := &in.SeVnicTxSwQueueFlushFrequency, &out.SeVnicTxSwQueueFlushFrequency
		*out = new(string)
		**out = **in
	}
	if in.SeVnicTxSwQueueSize != nil {
		in, out := &in.SeVnicTxSwQueueSize, &out.SeVnicTxSwQueueSize
		*out = new(string)
		**out = **in
	}
	if in.SeVsHbMaxPktsInBatch != nil {
		in, out := &in.SeVsHbMaxPktsInBatch, &out.SeVsHbMaxPktsInBatch
		*out = new(string)
		**out = **in
	}
	if in.SeVsHbMaxVsInPkt != nil {
		in, out := &in.SeVsHbMaxVsInPkt, &out.SeVsHbMaxVsInPkt
		*out = new(string)
		**out = **in
	}
	if in.SelfSeElection != nil {
		in, out := &in.SelfSeElection, &out.SelfSeElection
		*out = new(string)
		**out = **in
	}
	if in.SendSeReadyTimeout != nil {
		in, out := &in.SendSeReadyTimeout, &out.SendSeReadyTimeout
		*out = new(string)
		**out = **in
	}
	if in.ServiceIPSubnets != nil {
		in, out := &in.ServiceIPSubnets, &out.ServiceIPSubnets
		*out = make([]ServiceIPSubnetsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceIp6Subnets != nil {
		in, out := &in.ServiceIp6Subnets, &out.ServiceIp6Subnets
		*out = make([]ServiceIp6SubnetsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShmMinimumConfigMemory != nil {
		in, out := &in.ShmMinimumConfigMemory, &out.ShmMinimumConfigMemory
		*out = new(string)
		**out = **in
	}
	if in.SignificantLogThrottle != nil {
		in, out := &in.SignificantLogThrottle, &out.SignificantLogThrottle
		*out = new(string)
		**out = **in
	}
	if in.TenantRef != nil {
		in, out := &in.TenantRef, &out.TenantRef
		*out = new(string)
		**out = **in
	}
	if in.TransientSharedMemoryMax != nil {
		in, out := &in.TransientSharedMemoryMax, &out.TransientSharedMemoryMax
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.UdfLogThrottle != nil {
		in, out := &in.UdfLogThrottle, &out.UdfLogThrottle
		*out = new(string)
		**out = **in
	}
	if in.UpstreamConnectTimeout != nil {
		in, out := &in.UpstreamConnectTimeout, &out.UpstreamConnectTimeout
		*out = new(string)
		**out = **in
	}
	if in.UpstreamConnpoolEnable != nil {
		in, out := &in.UpstreamConnpoolEnable, &out.UpstreamConnpoolEnable
		*out = new(string)
		**out = **in
	}
	if in.UpstreamReadTimeout != nil {
		in, out := &in.UpstreamReadTimeout, &out.UpstreamReadTimeout
		*out = new(string)
		**out = **in
	}
	if in.UpstreamSendTimeout != nil {
		in, out := &in.UpstreamSendTimeout, &out.UpstreamSendTimeout
		*out = new(string)
		**out = **in
	}
	if in.UseDpUtilForScaleout != nil {
		in, out := &in.UseDpUtilForScaleout, &out.UseDpUtilForScaleout
		*out = new(string)
		**out = **in
	}
	if in.UseHyperthreadedCores != nil {
		in, out := &in.UseHyperthreadedCores, &out.UseHyperthreadedCores
		*out = new(string)
		**out = **in
	}
	if in.UseLegacyNetlink != nil {
		in, out := &in.UseLegacyNetlink, &out.UseLegacyNetlink
		*out = new(string)
		**out = **in
	}
	if in.UseObjsync != nil {
		in, out := &in.UseObjsync, &out.UseObjsync
		*out = new(string)
		**out = **in
	}
	if in.UseStandardALB != nil {
		in, out := &in.UseStandardALB, &out.UseStandardALB
		*out = new(string)
		**out = **in
	}
	if in.UserAgentCacheConfig != nil {
		in, out := &in.UserAgentCacheConfig, &out.UserAgentCacheConfig
		*out = make([]UserAgentCacheConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UserDefinedMetricAge != nil {
		in, out := &in.UserDefinedMetricAge, &out.UserDefinedMetricAge
		*out = new(string)
		**out = **in
	}
	if in.VcenterClusters != nil {
		in, out := &in.VcenterClusters, &out.VcenterClusters
		*out = make([]VcenterClustersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcenterDatastoreMode != nil {
		in, out := &in.VcenterDatastoreMode, &out.VcenterDatastoreMode
		*out = new(string)
		**out = **in
	}
	if in.VcenterDatastores != nil {
		in, out := &in.VcenterDatastores, &out.VcenterDatastores
		*out = make([]VcenterDatastoresObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcenterDatastoresInclude != nil {
		in, out := &in.VcenterDatastoresInclude, &out.VcenterDatastoresInclude
		*out = new(string)
		**out = **in
	}
	if in.VcenterFolder != nil {
		in, out := &in.VcenterFolder, &out.VcenterFolder
		*out = new(string)
		**out = **in
	}
	if in.VcenterHosts != nil {
		in, out := &in.VcenterHosts, &out.VcenterHosts
		*out = make([]VcenterHostsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcenterParkingVnicPg != nil {
		in, out := &in.VcenterParkingVnicPg, &out.VcenterParkingVnicPg
		*out = new(string)
		**out = **in
	}
	if in.Vcenters != nil {
		in, out := &in.Vcenters, &out.Vcenters
		*out = make([]VcentersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcpusPerSe != nil {
		in, out := &in.VcpusPerSe, &out.VcpusPerSe
		*out = new(string)
		**out = **in
	}
	if in.VipAsg != nil {
		in, out := &in.VipAsg, &out.VipAsg
		*out = make([]VipAsgObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VnicDHCPIPCheckInterval != nil {
		in, out := &in.VnicDHCPIPCheckInterval, &out.VnicDHCPIPCheckInterval
		*out = new(string)
		**out = **in
	}
	if in.VnicDHCPIPMaxRetries != nil {
		in, out := &in.VnicDHCPIPMaxRetries, &out.VnicDHCPIPMaxRetries
		*out = new(string)
		**out = **in
	}
	if in.VnicIPDeleteInterval != nil {
		in, out := &in.VnicIPDeleteInterval, &out.VnicIPDeleteInterval
		*out = new(string)
		**out = **in
	}
	if in.VnicProbeInterval != nil {
		in, out := &in.VnicProbeInterval, &out.VnicProbeInterval
		*out = new(string)
		**out = **in
	}
	if in.VnicRPCRetryInterval != nil {
		in, out := &in.VnicRPCRetryInterval, &out.VnicRPCRetryInterval
		*out = new(string)
		**out = **in
	}
	if in.VnicdbCmdHistorySize != nil {
		in, out := &in.VnicdbCmdHistorySize, &out.VnicdbCmdHistorySize
		*out = new(string)
		**out = **in
	}
	if in.VsHostRedundancy != nil {
		in, out := &in.VsHostRedundancy, &out.VsHostRedundancy
		*out = new(string)
		**out = **in
	}
	if in.VsScaleinTimeout != nil {
		in, out := &in.VsScaleinTimeout, &out.VsScaleinTimeout
		*out = new(string)
		**out = **in
	}
	if in.VsScaleinTimeoutForUpgrade != nil {
		in, out := &in.VsScaleinTimeoutForUpgrade, &out.VsScaleinTimeoutForUpgrade
		*out = new(string)
		**out = **in
	}
	if in.VsScaleoutTimeout != nil {
		in, out := &in.VsScaleoutTimeout, &out.VsScaleoutTimeout
		*out = new(string)
		**out = **in
	}
	if in.VsSePrimarySwitchoverAdditionalWaitTime != nil {
		in, out := &in.VsSePrimarySwitchoverAdditionalWaitTime, &out.VsSePrimarySwitchoverAdditionalWaitTime
		*out = new(string)
		**out = **in
	}
	if in.VsSeScaleinAdditionalWaitTime != nil {
		in, out := &in.VsSeScaleinAdditionalWaitTime, &out.VsSeScaleinAdditionalWaitTime
		*out = new(string)
		**out = **in
	}
	if in.VsSeScaleoutAdditionalWaitTime != nil {
		in, out := &in.VsSeScaleoutAdditionalWaitTime, &out.VsSeScaleoutAdditionalWaitTime
		*out = new(string)
		**out = **in
	}
	if in.VsSeScaleoutReadyTimeout != nil {
		in, out := &in.VsSeScaleoutReadyTimeout, &out.VsSeScaleoutReadyTimeout
		*out = new(string)
		**out = **in
	}
	if in.VsSwitchoverTimeout != nil {
		in, out := &in.VsSwitchoverTimeout, &out.VsSwitchoverTimeout
		*out = new(string)
		**out = **in
	}
	if in.VssPlacement != nil {
		in, out := &in.VssPlacement, &out.VssPlacement
		*out = make([]VssPlacementObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VssPlacementEnabled != nil {
		in, out := &in.VssPlacementEnabled, &out.VssPlacementEnabled
		*out = new(string)
		**out = **in
	}
	if in.WafMempool != nil {
		in, out := &in.WafMempool, &out.WafMempool
		*out = new(string)
		**out = **in
	}
	if in.WafMempoolSize != nil {
		in, out := &in.WafMempoolSize, &out.WafMempoolSize
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceEngineGroupObservation.
func (in *ServiceEngineGroupObservation) DeepCopy() *ServiceEngineGroupObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceEngineGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceEngineGroupParameters) DeepCopyInto(out *ServiceEngineGroupParameters) {
	*out = *in
	if in.AcceleratedNetworking != nil {
		in, out := &in.AcceleratedNetworking, &out.AcceleratedNetworking
		*out = new(string)
		**out = **in
	}
	if in.ActiveStandby != nil {
		in, out := &in.ActiveStandby, &out.ActiveStandby
		*out = new(string)
		**out = **in
	}
	if in.AggressiveFailureDetection != nil {
		in, out := &in.AggressiveFailureDetection, &out.AggressiveFailureDetection
		*out = new(string)
		**out = **in
	}
	if in.Algo != nil {
		in, out := &in.Algo, &out.Algo
		*out = new(string)
		**out = **in
	}
	if in.AllowBurst != nil {
		in, out := &in.AllowBurst, &out.AllowBurst
		*out = new(string)
		**out = **in
	}
	if in.AppCachePercent != nil {
		in, out := &in.AppCachePercent, &out.AppCachePercent
		*out = new(string)
		**out = **in
	}
	if in.AppCacheThreshold != nil {
		in, out := &in.AppCacheThreshold, &out.AppCacheThreshold
		*out = new(string)
		**out = **in
	}
	if in.AppLearningMemoryPercent != nil {
		in, out := &in.AppLearningMemoryPercent, &out.AppLearningMemoryPercent
		*out = new(string)
		**out = **in
	}
	if in.ArchiveShmLimit != nil {
		in, out := &in.ArchiveShmLimit, &out.ArchiveShmLimit
		*out = new(string)
		**out = **in
	}
	if in.AsyncSSL != nil {
		in, out := &in.AsyncSSL, &out.AsyncSSL
		*out = new(string)
		**out = **in
	}
	if in.AsyncSSLThreads != nil {
		in, out := &in.AsyncSSLThreads, &out.AsyncSSLThreads
		*out = new(string)
		**out = **in
	}
	if in.AutoRebalance != nil {
		in, out := &in.AutoRebalance, &out.AutoRebalance
		*out = new(string)
		**out = **in
	}
	if in.AutoRebalanceCapacityPerSe != nil {
		in, out := &in.AutoRebalanceCapacityPerSe, &out.AutoRebalanceCapacityPerSe
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
	if in.AutoRebalanceCriteria != nil {
		in, out := &in.AutoRebalanceCriteria, &out.AutoRebalanceCriteria
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AutoRebalanceInterval != nil {
		in, out := &in.AutoRebalanceInterval, &out.AutoRebalanceInterval
		*out = new(string)
		**out = **in
	}
	if in.AutoRedistributeActiveStandbyLoad != nil {
		in, out := &in.AutoRedistributeActiveStandbyLoad, &out.AutoRedistributeActiveStandbyLoad
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZoneRefs != nil {
		in, out := &in.AvailabilityZoneRefs, &out.AvailabilityZoneRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BGPPeerMonitorFailoverEnabled != nil {
		in, out := &in.BGPPeerMonitorFailoverEnabled, &out.BGPPeerMonitorFailoverEnabled
		*out = new(string)
		**out = **in
	}
	if in.BGPStateUpdateInterval != nil {
		in, out := &in.BGPStateUpdateInterval, &out.BGPStateUpdateInterval
		*out = new(string)
		**out = **in
	}
	if in.BaremetalDispatcherHandlesFlows != nil {
		in, out := &in.BaremetalDispatcherHandlesFlows, &out.BaremetalDispatcherHandlesFlows
		*out = new(string)
		**out = **in
	}
	if in.BufferSe != nil {
		in, out := &in.BufferSe, &out.BufferSe
		*out = new(string)
		**out = **in
	}
	if in.CPUReserve != nil {
		in, out := &in.CPUReserve, &out.CPUReserve
		*out = new(string)
		**out = **in
	}
	if in.CPUSocketAffinity != nil {
		in, out := &in.CPUSocketAffinity, &out.CPUSocketAffinity
		*out = new(string)
		**out = **in
	}
	if in.CloudRef != nil {
		in, out := &in.CloudRef, &out.CloudRef
		*out = new(string)
		**out = **in
	}
	if in.CompressIPRulesForEachNsSubnet != nil {
		in, out := &in.CompressIPRulesForEachNsSubnet, &out.CompressIPRulesForEachNsSubnet
		*out = new(string)
		**out = **in
	}
	if in.ConfigDebugsOnAllCores != nil {
		in, out := &in.ConfigDebugsOnAllCores, &out.ConfigDebugsOnAllCores
		*out = new(string)
		**out = **in
	}
	if in.ConfigpbAttributes != nil {
		in, out := &in.ConfigpbAttributes, &out.ConfigpbAttributes
		*out = make([]ServiceEngineGroupConfigpbAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnectionMemoryPercentage != nil {
		in, out := &in.ConnectionMemoryPercentage, &out.ConnectionMemoryPercentage
		*out = new(string)
		**out = **in
	}
	if in.CoreShmAppCache != nil {
		in, out := &in.CoreShmAppCache, &out.CoreShmAppCache
		*out = new(string)
		**out = **in
	}
	if in.CoreShmAppLearning != nil {
		in, out := &in.CoreShmAppLearning, &out.CoreShmAppLearning
		*out = new(string)
		**out = **in
	}
	if in.CustomSecuritygroupsData != nil {
		in, out := &in.CustomSecuritygroupsData, &out.CustomSecuritygroupsData
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomSecuritygroupsMgmt != nil {
		in, out := &in.CustomSecuritygroupsMgmt, &out.CustomSecuritygroupsMgmt
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomTag != nil {
		in, out := &in.CustomTag, &out.CustomTag
		*out = make([]CustomTagParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DataNetworkID != nil {
		in, out := &in.DataNetworkID, &out.DataNetworkID
		*out = new(string)
		**out = **in
	}
	if in.DatascriptTimeout != nil {
		in, out := &in.DatascriptTimeout, &out.DatascriptTimeout
		*out = new(string)
		**out = **in
	}
	if in.DeactivateIPv6Discovery != nil {
		in, out := &in.DeactivateIPv6Discovery, &out.DeactivateIPv6Discovery
		*out = new(string)
		**out = **in
	}
	if in.DeactivateKniFilteringAtDispatcher != nil {
		in, out := &in.DeactivateKniFilteringAtDispatcher, &out.DeactivateKniFilteringAtDispatcher
		*out = new(string)
		**out = **in
	}
	if in.DedicatedDispatcherCore != nil {
		in, out := &in.DedicatedDispatcherCore, &out.DedicatedDispatcherCore
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableAviSecuritygroups != nil {
		in, out := &in.DisableAviSecuritygroups, &out.DisableAviSecuritygroups
		*out = new(string)
		**out = **in
	}
	if in.DisableCsumOffloads != nil {
		in, out := &in.DisableCsumOffloads, &out.DisableCsumOffloads
		*out = new(string)
		**out = **in
	}
	if in.DisableFlowProbes != nil {
		in, out := &in.DisableFlowProbes, &out.DisableFlowProbes
		*out = new(string)
		**out = **in
	}
	if in.DisableGro != nil {
		in, out := &in.DisableGro, &out.DisableGro
		*out = new(string)
		**out = **in
	}
	if in.DisableSeMemoryCheck != nil {
		in, out := &in.DisableSeMemoryCheck, &out.DisableSeMemoryCheck
		*out = new(string)
		**out = **in
	}
	if in.DisableTso != nil {
		in, out := &in.DisableTso, &out.DisableTso
		*out = new(string)
		**out = **in
	}
	if in.DiskPerSe != nil {
		in, out := &in.DiskPerSe, &out.DiskPerSe
		*out = new(string)
		**out = **in
	}
	if in.DistributeLoadActiveStandby != nil {
		in, out := &in.DistributeLoadActiveStandby, &out.DistributeLoadActiveStandby
		*out = new(string)
		**out = **in
	}
	if in.DistributeQueues != nil {
		in, out := &in.DistributeQueues, &out.DistributeQueues
		*out = new(string)
		**out = **in
	}
	if in.DistributeVnics != nil {
		in, out := &in.DistributeVnics, &out.DistributeVnics
		*out = new(string)
		**out = **in
	}
	if in.DownstreamSendTimeout != nil {
		in, out := &in.DownstreamSendTimeout, &out.DownstreamSendTimeout
		*out = new(string)
		**out = **in
	}
	if in.DpAggressiveDeqIntervalMsec != nil {
		in, out := &in.DpAggressiveDeqIntervalMsec, &out.DpAggressiveDeqIntervalMsec
		*out = new(string)
		**out = **in
	}
	if in.DpAggressiveEnqIntervalMsec != nil {
		in, out := &in.DpAggressiveEnqIntervalMsec, &out.DpAggressiveEnqIntervalMsec
		*out = new(string)
		**out = **in
	}
	if in.DpAggressiveHbFrequency != nil {
		in, out := &in.DpAggressiveHbFrequency, &out.DpAggressiveHbFrequency
		*out = new(string)
		**out = **in
	}
	if in.DpAggressiveHbTimeoutCount != nil {
		in, out := &in.DpAggressiveHbTimeoutCount, &out.DpAggressiveHbTimeoutCount
		*out = new(string)
		**out = **in
	}
	if in.DpDeqIntervalMsec != nil {
		in, out := &in.DpDeqIntervalMsec, &out.DpDeqIntervalMsec
		*out = new(string)
		**out = **in
	}
	if in.DpEnqIntervalMsec != nil {
		in, out := &in.DpEnqIntervalMsec, &out.DpEnqIntervalMsec
		*out = new(string)
		**out = **in
	}
	if in.DpHbFrequency != nil {
		in, out := &in.DpHbFrequency, &out.DpHbFrequency
		*out = new(string)
		**out = **in
	}
	if in.DpHbTimeoutCount != nil {
		in, out := &in.DpHbTimeoutCount, &out.DpHbTimeoutCount
		*out = new(string)
		**out = **in
	}
	if in.DpdkGroTimeoutInterval != nil {
		in, out := &in.DpdkGroTimeoutInterval, &out.DpdkGroTimeoutInterval
		*out = new(string)
		**out = **in
	}
	if in.EnableGratarpPermanent != nil {
		in, out := &in.EnableGratarpPermanent, &out.EnableGratarpPermanent
		*out = new(string)
		**out = **in
	}
	if in.EnableHSMLog != nil {
		in, out := &in.EnableHSMLog, &out.EnableHSMLog
		*out = new(string)
		**out = **in
	}
	if in.EnableHSMPriming != nil {
		in, out := &in.EnableHSMPriming, &out.EnableHSMPriming
		*out = new(string)
		**out = **in
	}
	if in.EnableMultiLB != nil {
		in, out := &in.EnableMultiLB, &out.EnableMultiLB
		*out = new(string)
		**out = **in
	}
	if in.EnablePcapTxRing != nil {
		in, out := &in.EnablePcapTxRing, &out.EnablePcapTxRing
		*out = new(string)
		**out = **in
	}
	if in.EphemeralPortrangeEnd != nil {
		in, out := &in.EphemeralPortrangeEnd, &out.EphemeralPortrangeEnd
		*out = new(string)
		**out = **in
	}
	if in.EphemeralPortrangeStart != nil {
		in, out := &in.EphemeralPortrangeStart, &out.EphemeralPortrangeStart
		*out = new(string)
		**out = **in
	}
	if in.ExtraConfigMultiplier != nil {
		in, out := &in.ExtraConfigMultiplier, &out.ExtraConfigMultiplier
		*out = new(string)
		**out = **in
	}
	if in.ExtraSharedConfigMemory != nil {
		in, out := &in.ExtraSharedConfigMemory, &out.ExtraSharedConfigMemory
		*out = new(string)
		**out = **in
	}
	if in.FlowTableNewSynMaxEntries != nil {
		in, out := &in.FlowTableNewSynMaxEntries, &out.FlowTableNewSynMaxEntries
		*out = new(string)
		**out = **in
	}
	if in.FreeListSize != nil {
		in, out := &in.FreeListSize, &out.FreeListSize
		*out = new(string)
		**out = **in
	}
	if in.GCPConfig != nil {
		in, out := &in.GCPConfig, &out.GCPConfig
		*out = make([]GCPConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GRPCChannelConnectTimeout != nil {
		in, out := &in.GRPCChannelConnectTimeout, &out.GRPCChannelConnectTimeout
		*out = new(string)
		**out = **in
	}
	if in.GratarpPermanentPeriodicity != nil {
		in, out := &in.GratarpPermanentPeriodicity, &out.GratarpPermanentPeriodicity
		*out = new(string)
		**out = **in
	}
	if in.HTTPRumConsoleLog != nil {
		in, out := &in.HTTPRumConsoleLog, &out.HTTPRumConsoleLog
		*out = new(string)
		**out = **in
	}
	if in.HTTPRumMinContentLength != nil {
		in, out := &in.HTTPRumMinContentLength, &out.HTTPRumMinContentLength
		*out = new(string)
		**out = **in
	}
	if in.HaMode != nil {
		in, out := &in.HaMode, &out.HaMode
		*out = new(string)
		**out = **in
	}
	if in.HandlePerPktAttack != nil {
		in, out := &in.HandlePerPktAttack, &out.HandlePerPktAttack
		*out = new(string)
		**out = **in
	}
	if in.HardwaresecuritymodulegroupRef != nil {
		in, out := &in.HardwaresecuritymodulegroupRef, &out.HardwaresecuritymodulegroupRef
		*out = new(string)
		**out = **in
	}
	if in.HeapMinimumConfigMemory != nil {
		in, out := &in.HeapMinimumConfigMemory, &out.HeapMinimumConfigMemory
		*out = new(string)
		**out = **in
	}
	if in.HmOnStandby != nil {
		in, out := &in.HmOnStandby, &out.HmOnStandby
		*out = new(string)
		**out = **in
	}
	if in.HostAttributeKey != nil {
		in, out := &in.HostAttributeKey, &out.HostAttributeKey
		*out = new(string)
		**out = **in
	}
	if in.HostAttributeValue != nil {
		in, out := &in.HostAttributeValue, &out.HostAttributeValue
		*out = new(string)
		**out = **in
	}
	if in.HostGatewayMonitor != nil {
		in, out := &in.HostGatewayMonitor, &out.HostGatewayMonitor
		*out = new(string)
		**out = **in
	}
	if in.HybridRssMode != nil {
		in, out := &in.HybridRssMode, &out.HybridRssMode
		*out = new(string)
		**out = **in
	}
	if in.Hypervisor != nil {
		in, out := &in.Hypervisor, &out.Hypervisor
		*out = new(string)
		**out = **in
	}
	if in.IgnoreDockerMacChange != nil {
		in, out := &in.IgnoreDockerMacChange, &out.IgnoreDockerMacChange
		*out = new(string)
		**out = **in
	}
	if in.IgnoreRttThreshold != nil {
		in, out := &in.IgnoreRttThreshold, &out.IgnoreRttThreshold
		*out = new(string)
		**out = **in
	}
	if in.IngressAccessData != nil {
		in, out := &in.IngressAccessData, &out.IngressAccessData
		*out = new(string)
		**out = **in
	}
	if in.IngressAccessMgmt != nil {
		in, out := &in.IngressAccessMgmt, &out.IngressAccessMgmt
		*out = new(string)
		**out = **in
	}
	if in.InstanceFlavor != nil {
		in, out := &in.InstanceFlavor, &out.InstanceFlavor
		*out = new(string)
		**out = **in
	}
	if in.InstanceFlavorInfo != nil {
		in, out := &in.InstanceFlavorInfo, &out.InstanceFlavorInfo
		*out = make([]InstanceFlavorInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Iptables != nil {
		in, out := &in.Iptables, &out.Iptables
		*out = make([]IptablesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KniAllowedServerPorts != nil {
		in, out := &in.KniAllowedServerPorts, &out.KniAllowedServerPorts
		*out = make([]KniAllowedServerPortsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.L7ConnsPerCore != nil {
		in, out := &in.L7ConnsPerCore, &out.L7ConnsPerCore
		*out = new(string)
		**out = **in
	}
	if in.L7ResvdListenConnsPerCore != nil {
		in, out := &in.L7ResvdListenConnsPerCore, &out.L7ResvdListenConnsPerCore
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]LabelsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LbactionNumRequestsToDispatch != nil {
		in, out := &in.LbactionNumRequestsToDispatch, &out.LbactionNumRequestsToDispatch
		*out = new(string)
		**out = **in
	}
	if in.LbactionRqPerRequestMaxRetries != nil {
		in, out := &in.LbactionRqPerRequestMaxRetries, &out.LbactionRqPerRequestMaxRetries
		*out = new(string)
		**out = **in
	}
	if in.LeastLoadCoreSelection != nil {
		in, out := &in.LeastLoadCoreSelection, &out.LeastLoadCoreSelection
		*out = new(string)
		**out = **in
	}
	if in.LicenseTier != nil {
		in, out := &in.LicenseTier, &out.LicenseTier
		*out = new(string)
		**out = **in
	}
	if in.LicenseType != nil {
		in, out := &in.LicenseType, &out.LicenseType
		*out = new(string)
		**out = **in
	}
	if in.LogAgentCompressLogs != nil {
		in, out := &in.LogAgentCompressLogs, &out.LogAgentCompressLogs
		*out = new(string)
		**out = **in
	}
	if in.LogAgentDebugEnabled != nil {
		in, out := &in.LogAgentDebugEnabled, &out.LogAgentDebugEnabled
		*out = new(string)
		**out = **in
	}
	if in.LogAgentFileSzAppl != nil {
		in, out := &in.LogAgentFileSzAppl, &out.LogAgentFileSzAppl
		*out = new(string)
		**out = **in
	}
	if in.LogAgentFileSzConn != nil {
		in, out := &in.LogAgentFileSzConn, &out.LogAgentFileSzConn
		*out = new(string)
		**out = **in
	}
	if in.LogAgentFileSzDebug != nil {
		in, out := &in.LogAgentFileSzDebug, &out.LogAgentFileSzDebug
		*out = new(string)
		**out = **in
	}
	if in.LogAgentFileSzEvent != nil {
		in, out := &in.LogAgentFileSzEvent, &out.LogAgentFileSzEvent
		*out = new(string)
		**out = **in
	}
	if in.LogAgentLogStorageMinSz != nil {
		in, out := &in.LogAgentLogStorageMinSz, &out.LogAgentLogStorageMinSz
		*out = new(string)
		**out = **in
	}
	if in.LogAgentMaxConcurrentRsync != nil {
		in, out := &in.LogAgentMaxConcurrentRsync, &out.LogAgentMaxConcurrentRsync
		*out = new(string)
		**out = **in
	}
	if in.LogAgentMaxStorageExcessPercent != nil {
		in, out := &in.LogAgentMaxStorageExcessPercent, &out.LogAgentMaxStorageExcessPercent
		*out = new(string)
		**out = **in
	}
	if in.LogAgentMaxStorageIgnorePercent != nil {
		in, out := &in.LogAgentMaxStorageIgnorePercent, &out.LogAgentMaxStorageIgnorePercent
		*out = new(string)
		**out = **in
	}
	if in.LogAgentMinStoragePerVs != nil {
		in, out := &in.LogAgentMinStoragePerVs, &out.LogAgentMinStoragePerVs
		*out = new(string)
		**out = **in
	}
	if in.LogAgentSleepInterval != nil {
		in, out := &in.LogAgentSleepInterval, &out.LogAgentSleepInterval
		*out = new(string)
		**out = **in
	}
	if in.LogAgentTraceEnabled != nil {
		in, out := &in.LogAgentTraceEnabled, &out.LogAgentTraceEnabled
		*out = new(string)
		**out = **in
	}
	if in.LogAgentUnknownVsTimer != nil {
		in, out := &in.LogAgentUnknownVsTimer, &out.LogAgentUnknownVsTimer
		*out = new(string)
		**out = **in
	}
	if in.LogDisksz != nil {
		in, out := &in.LogDisksz, &out.LogDisksz
		*out = new(string)
		**out = **in
	}
	if in.LogMallocFailure != nil {
		in, out := &in.LogMallocFailure, &out.LogMallocFailure
		*out = new(string)
		**out = **in
	}
	if in.LogMessageMaxFileListSize != nil {
		in, out := &in.LogMessageMaxFileListSize, &out.LogMessageMaxFileListSize
		*out = new(string)
		**out = **in
	}
	if in.Markers != nil {
		in, out := &in.Markers, &out.Markers
		*out = make([]ServiceEngineGroupMarkersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxCPUUsage != nil {
		in, out := &in.MaxCPUUsage, &out.MaxCPUUsage
		*out = new(string)
		**out = **in
	}
	if in.MaxConcurrentExternalHm != nil {
		in, out := &in.MaxConcurrentExternalHm, &out.MaxConcurrentExternalHm
		*out = new(string)
		**out = **in
	}
	if in.MaxMemoryPerMempool != nil {
		in, out := &in.MaxMemoryPerMempool, &out.MaxMemoryPerMempool
		*out = new(string)
		**out = **in
	}
	if in.MaxNumSeDps != nil {
		in, out := &in.MaxNumSeDps, &out.MaxNumSeDps
		*out = new(string)
		**out = **in
	}
	if in.MaxPublicIpsPerLB != nil {
		in, out := &in.MaxPublicIpsPerLB, &out.MaxPublicIpsPerLB
		*out = new(string)
		**out = **in
	}
	if in.MaxQueuesPerVnic != nil {
		in, out := &in.MaxQueuesPerVnic, &out.MaxQueuesPerVnic
		*out = new(string)
		**out = **in
	}
	if in.MaxRulesPerLB != nil {
		in, out := &in.MaxRulesPerLB, &out.MaxRulesPerLB
		*out = new(string)
		**out = **in
	}
	if in.MaxScaleoutPerVs != nil {
		in, out := &in.MaxScaleoutPerVs, &out.MaxScaleoutPerVs
		*out = new(string)
		**out = **in
	}
	if in.MaxSe != nil {
		in, out := &in.MaxSe, &out.MaxSe
		*out = new(string)
		**out = **in
	}
	if in.MaxSkbFrags != nil {
		in, out := &in.MaxSkbFrags, &out.MaxSkbFrags
		*out = new(string)
		**out = **in
	}
	if in.MaxVsPerSe != nil {
		in, out := &in.MaxVsPerSe, &out.MaxVsPerSe
		*out = new(string)
		**out = **in
	}
	if in.MemReserve != nil {
		in, out := &in.MemReserve, &out.MemReserve
		*out = new(string)
		**out = **in
	}
	if in.MemoryForConfigUpdate != nil {
		in, out := &in.MemoryForConfigUpdate, &out.MemoryForConfigUpdate
		*out = new(string)
		**out = **in
	}
	if in.MemoryPerSe != nil {
		in, out := &in.MemoryPerSe, &out.MemoryPerSe
		*out = new(string)
		**out = **in
	}
	if in.MetricsCollectionMode != nil {
		in, out := &in.MetricsCollectionMode, &out.MetricsCollectionMode
		*out = new(string)
		**out = **in
	}
	if in.MgmtNetworkRef != nil {
		in, out := &in.MgmtNetworkRef, &out.MgmtNetworkRef
		*out = new(string)
		**out = **in
	}
	if in.MgmtSubnet != nil {
		in, out := &in.MgmtSubnet, &out.MgmtSubnet
		*out = make([]MgmtSubnetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinCPUUsage != nil {
		in, out := &in.MinCPUUsage, &out.MinCPUUsage
		*out = new(string)
		**out = **in
	}
	if in.MinScaleoutPerVs != nil {
		in, out := &in.MinScaleoutPerVs, &out.MinScaleoutPerVs
		*out = new(string)
		**out = **in
	}
	if in.MinSe != nil {
		in, out := &in.MinSe, &out.MinSe
		*out = new(string)
		**out = **in
	}
	if in.MinimumConnectionMemory != nil {
		in, out := &in.MinimumConnectionMemory, &out.MinimumConnectionMemory
		*out = new(string)
		**out = **in
	}
	if in.MulticastEnable != nil {
		in, out := &in.MulticastEnable, &out.MulticastEnable
		*out = new(string)
		**out = **in
	}
	if in.NLogStreamingThreads != nil {
		in, out := &in.NLogStreamingThreads, &out.NLogStreamingThreads
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetlinkPollerThreads != nil {
		in, out := &in.NetlinkPollerThreads, &out.NetlinkPollerThreads
		*out = new(string)
		**out = **in
	}
	if in.NetlinkSockBufSize != nil {
		in, out := &in.NetlinkSockBufSize, &out.NetlinkSockBufSize
		*out = new(string)
		**out = **in
	}
	if in.NgxFreeConnectionStack != nil {
		in, out := &in.NgxFreeConnectionStack, &out.NgxFreeConnectionStack
		*out = new(string)
		**out = **in
	}
	if in.NonSignificantLogThrottle != nil {
		in, out := &in.NonSignificantLogThrottle, &out.NonSignificantLogThrottle
		*out = new(string)
		**out = **in
	}
	if in.NsHelperDeqIntervalMsec != nil {
		in, out := &in.NsHelperDeqIntervalMsec, &out.NsHelperDeqIntervalMsec
		*out = new(string)
		**out = **in
	}
	if in.NtpSyncFailEvent != nil {
		in, out := &in.NtpSyncFailEvent, &out.NtpSyncFailEvent
		*out = new(string)
		**out = **in
	}
	if in.NtpSyncStatusInterval != nil {
		in, out := &in.NtpSyncStatusInterval, &out.NtpSyncStatusInterval
		*out = new(string)
		**out = **in
	}
	if in.NumDispatcherCores != nil {
		in, out := &in.NumDispatcherCores, &out.NumDispatcherCores
		*out = new(string)
		**out = **in
	}
	if in.NumDispatcherQueues != nil {
		in, out := &in.NumDispatcherQueues, &out.NumDispatcherQueues
		*out = new(string)
		**out = **in
	}
	if in.NumFlowCoresSumChangesToIgnore != nil {
		in, out := &in.NumFlowCoresSumChangesToIgnore, &out.NumFlowCoresSumChangesToIgnore
		*out = new(string)
		**out = **in
	}
	if in.ObjsyncConfig != nil {
		in, out := &in.ObjsyncConfig, &out.ObjsyncConfig
		*out = make([]ObjsyncConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ObjsyncPort != nil {
		in, out := &in.ObjsyncPort, &out.ObjsyncPort
		*out = new(string)
		**out = **in
	}
	if in.OpenstackAvailabilityZones != nil {
		in, out := &in.OpenstackAvailabilityZones, &out.OpenstackAvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OpenstackMgmtNetworkName != nil {
		in, out := &in.OpenstackMgmtNetworkName, &out.OpenstackMgmtNetworkName
		*out = new(string)
		**out = **in
	}
	if in.OpenstackMgmtNetworkUUID != nil {
		in, out := &in.OpenstackMgmtNetworkUUID, &out.OpenstackMgmtNetworkUUID
		*out = new(string)
		**out = **in
	}
	if in.OsReservedMemory != nil {
		in, out := &in.OsReservedMemory, &out.OsReservedMemory
		*out = new(string)
		**out = **in
	}
	if in.PathMtuDiscoveryV4 != nil {
		in, out := &in.PathMtuDiscoveryV4, &out.PathMtuDiscoveryV4
		*out = new(string)
		**out = **in
	}
	if in.PathMtuDiscoveryV6 != nil {
		in, out := &in.PathMtuDiscoveryV6, &out.PathMtuDiscoveryV6
		*out = new(string)
		**out = **in
	}
	if in.PcapTxMode != nil {
		in, out := &in.PcapTxMode, &out.PcapTxMode
		*out = new(string)
		**out = **in
	}
	if in.PcapTxRingRdBalancingFactor != nil {
		in, out := &in.PcapTxRingRdBalancingFactor, &out.PcapTxRingRdBalancingFactor
		*out = new(string)
		**out = **in
	}
	if in.PerApp != nil {
		in, out := &in.PerApp, &out.PerApp
		*out = new(string)
		**out = **in
	}
	if in.PerVsAdmissionControl != nil {
		in, out := &in.PerVsAdmissionControl, &out.PerVsAdmissionControl
		*out = new(string)
		**out = **in
	}
	if in.PlacementMode != nil {
		in, out := &in.PlacementMode, &out.PlacementMode
		*out = new(string)
		**out = **in
	}
	if in.RealtimeSeMetrics != nil {
		in, out := &in.RealtimeSeMetrics, &out.RealtimeSeMetrics
		*out = make([]RealtimeSeMetricsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RebootOnPanic != nil {
		in, out := &in.RebootOnPanic, &out.RebootOnPanic
		*out = new(string)
		**out = **in
	}
	if in.ReplayVrfRoutesInterval != nil {
		in, out := &in.ReplayVrfRoutesInterval, &out.ReplayVrfRoutesInterval
		*out = new(string)
		**out = **in
	}
	if in.ResyncTimeInterval != nil {
		in, out := &in.ResyncTimeInterval, &out.ResyncTimeInterval
		*out = new(string)
		**out = **in
	}
	if in.SSLPreprocessSniHostname != nil {
		in, out := &in.SSLPreprocessSniHostname, &out.SSLPreprocessSniHostname
		*out = new(string)
		**out = **in
	}
	if in.SSLSessCachePerVs != nil {
		in, out := &in.SSLSessCachePerVs, &out.SSLSessCachePerVs
		*out = new(string)
		**out = **in
	}
	if in.SdbFlushInterval != nil {
		in, out := &in.SdbFlushInterval, &out.SdbFlushInterval
		*out = new(string)
		**out = **in
	}
	if in.SdbPipelineSize != nil {
		in, out := &in.SdbPipelineSize, &out.SdbPipelineSize
		*out = new(string)
		**out = **in
	}
	if in.SdbScanCount != nil {
		in, out := &in.SdbScanCount, &out.SdbScanCount
		*out = new(string)
		**out = **in
	}
	if in.SeBandwidthType != nil {
		in, out := &in.SeBandwidthType, &out.SeBandwidthType
		*out = new(string)
		**out = **in
	}
	if in.SeDebugTraceSz != nil {
		in, out := &in.SeDebugTraceSz, &out.SeDebugTraceSz
		*out = new(string)
		**out = **in
	}
	if in.SeDelayedFlowDelete != nil {
		in, out := &in.SeDelayedFlowDelete, &out.SeDelayedFlowDelete
		*out = new(string)
		**out = **in
	}
	if in.SeDeprovisionDelay != nil {
		in, out := &in.SeDeprovisionDelay, &out.SeDeprovisionDelay
		*out = new(string)
		**out = **in
	}
	if in.SeDosProfile != nil {
		in, out := &in.SeDosProfile, &out.SeDosProfile
		*out = make([]SeDosProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SeDpHmDrops != nil {
		in, out := &in.SeDpHmDrops, &out.SeDpHmDrops
		*out = new(string)
		**out = **in
	}
	if in.SeDpIfStatePollInterval != nil {
		in, out := &in.SeDpIfStatePollInterval, &out.SeDpIfStatePollInterval
		*out = new(string)
		**out = **in
	}
	if in.SeDpIsolation != nil {
		in, out := &in.SeDpIsolation, &out.SeDpIsolation
		*out = new(string)
		**out = **in
	}
	if in.SeDpIsolationNumNonDpCpus != nil {
		in, out := &in.SeDpIsolationNumNonDpCpus, &out.SeDpIsolationNumNonDpCpus
		*out = new(string)
		**out = **in
	}
	if in.SeDpLogNfEnqueuePercent != nil {
		in, out := &in.SeDpLogNfEnqueuePercent, &out.SeDpLogNfEnqueuePercent
		*out = new(string)
		**out = **in
	}
	if in.SeDpLogUdfEnqueuePercent != nil {
		in, out := &in.SeDpLogUdfEnqueuePercent, &out.SeDpLogUdfEnqueuePercent
		*out = new(string)
		**out = **in
	}
	if in.SeDpMaxHbVersion != nil {
		in, out := &in.SeDpMaxHbVersion, &out.SeDpMaxHbVersion
		*out = new(string)
		**out = **in
	}
	if in.SeDpVnicQueueStallEventSleep != nil {
		in, out := &in.SeDpVnicQueueStallEventSleep, &out.SeDpVnicQueueStallEventSleep
		*out = new(string)
		**out = **in
	}
	if in.SeDpVnicQueueStallThreshold != nil {
		in, out := &in.SeDpVnicQueueStallThreshold, &out.SeDpVnicQueueStallThreshold
		*out = new(string)
		**out = **in
	}
	if in.SeDpVnicQueueStallTimeout != nil {
		in, out := &in.SeDpVnicQueueStallTimeout, &out.SeDpVnicQueueStallTimeout
		*out = new(string)
		**out = **in
	}
	if in.SeDpVnicRestartOnQueueStallCount != nil {
		in, out := &in.SeDpVnicRestartOnQueueStallCount, &out.SeDpVnicRestartOnQueueStallCount
		*out = new(string)
		**out = **in
	}
	if in.SeDpVnicStallSeRestartWindow != nil {
		in, out := &in.SeDpVnicStallSeRestartWindow, &out.SeDpVnicStallSeRestartWindow
		*out = new(string)
		**out = **in
	}
	if in.SeDpdkPmd != nil {
		in, out := &in.SeDpdkPmd, &out.SeDpdkPmd
		*out = new(string)
		**out = **in
	}
	if in.SeDumpCoreOnAssert != nil {
		in, out := &in.SeDumpCoreOnAssert, &out.SeDumpCoreOnAssert
		*out = new(string)
		**out = **in
	}
	if in.SeEmulatedCores != nil {
		in, out := &in.SeEmulatedCores, &out.SeEmulatedCores
		*out = new(string)
		**out = **in
	}
	if in.SeFlowProbeRetries != nil {
		in, out := &in.SeFlowProbeRetries, &out.SeFlowProbeRetries
		*out = new(string)
		**out = **in
	}
	if in.SeFlowProbeRetryTimer != nil {
		in, out := &in.SeFlowProbeRetryTimer, &out.SeFlowProbeRetryTimer
		*out = new(string)
		**out = **in
	}
	if in.SeGroupAnalyticsPolicy != nil {
		in, out := &in.SeGroupAnalyticsPolicy, &out.SeGroupAnalyticsPolicy
		*out = make([]SeGroupAnalyticsPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SeHyperthreadedMode != nil {
		in, out := &in.SeHyperthreadedMode, &out.SeHyperthreadedMode
		*out = new(string)
		**out = **in
	}
	if in.SeIPEncapIpc != nil {
		in, out := &in.SeIPEncapIpc, &out.SeIPEncapIpc
		*out = new(string)
		**out = **in
	}
	if in.SeKniBurstFactor != nil {
		in, out := &in.SeKniBurstFactor, &out.SeKniBurstFactor
		*out = new(string)
		**out = **in
	}
	if in.SeL3EncapIpc != nil {
		in, out := &in.SeL3EncapIpc, &out.SeL3EncapIpc
		*out = new(string)
		**out = **in
	}
	if in.SeLogBufferAppBlockingDequeue != nil {
		in, out := &in.SeLogBufferAppBlockingDequeue, &out.SeLogBufferAppBlockingDequeue
		*out = new(string)
		**out = **in
	}
	if in.SeLogBufferConnBlockingDequeue != nil {
		in, out := &in.SeLogBufferConnBlockingDequeue, &out.SeLogBufferConnBlockingDequeue
		*out = new(string)
		**out = **in
	}
	if in.SeLogBufferEventsBlockingDequeue != nil {
		in, out := &in.SeLogBufferEventsBlockingDequeue, &out.SeLogBufferEventsBlockingDequeue
		*out = new(string)
		**out = **in
	}
	if in.SeLro != nil {
		in, out := &in.SeLro, &out.SeLro
		*out = new(string)
		**out = **in
	}
	if in.SeMpRingRetryCount != nil {
		in, out := &in.SeMpRingRetryCount, &out.SeMpRingRetryCount
		*out = new(string)
		**out = **in
	}
	if in.SeMtu != nil {
		in, out := &in.SeMtu, &out.SeMtu
		*out = new(string)
		**out = **in
	}
	if in.SeNamePrefix != nil {
		in, out := &in.SeNamePrefix, &out.SeNamePrefix
		*out = new(string)
		**out = **in
	}
	if in.SePacketBufferMax != nil {
		in, out := &in.SePacketBufferMax, &out.SePacketBufferMax
		*out = new(string)
		**out = **in
	}
	if in.SePcapLookahead != nil {
		in, out := &in.SePcapLookahead, &out.SePcapLookahead
		*out = new(string)
		**out = **in
	}
	if in.SePcapPktCount != nil {
		in, out := &in.SePcapPktCount, &out.SePcapPktCount
		*out = new(string)
		**out = **in
	}
	if in.SePcapPktSz != nil {
		in, out := &in.SePcapPktSz, &out.SePcapPktSz
		*out = new(string)
		**out = **in
	}
	if in.SePcapQdiscBypass != nil {
		in, out := &in.SePcapQdiscBypass, &out.SePcapQdiscBypass
		*out = new(string)
		**out = **in
	}
	if in.SePcapReinitFrequency != nil {
		in, out := &in.SePcapReinitFrequency, &out.SePcapReinitFrequency
		*out = new(string)
		**out = **in
	}
	if in.SePcapReinitThreshold != nil {
		in, out := &in.SePcapReinitThreshold, &out.SePcapReinitThreshold
		*out = new(string)
		**out = **in
	}
	if in.SeProbePort != nil {
		in, out := &in.SeProbePort, &out.SeProbePort
		*out = new(string)
		**out = **in
	}
	if in.SeRlProp != nil {
		in, out := &in.SeRlProp, &out.SeRlProp
		*out = make([]SeRlPropParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SeRumSamplingNavInterval != nil {
		in, out := &in.SeRumSamplingNavInterval, &out.SeRumSamplingNavInterval
		*out = new(string)
		**out = **in
	}
	if in.SeRumSamplingNavPercent != nil {
		in, out := &in.SeRumSamplingNavPercent, &out.SeRumSamplingNavPercent
		*out = new(string)
		**out = **in
	}
	if in.SeRumSamplingResInterval != nil {
		in, out := &in.SeRumSamplingResInterval, &out.SeRumSamplingResInterval
		*out = new(string)
		**out = **in
	}
	if in.SeRumSamplingResPercent != nil {
		in, out := &in.SeRumSamplingResPercent, &out.SeRumSamplingResPercent
		*out = new(string)
		**out = **in
	}
	if in.SeSbDedicatedCore != nil {
		in, out := &in.SeSbDedicatedCore, &out.SeSbDedicatedCore
		*out = new(string)
		**out = **in
	}
	if in.SeSbThreads != nil {
		in, out := &in.SeSbThreads, &out.SeSbThreads
		*out = new(string)
		**out = **in
	}
	if in.SeThreadMultiplier != nil {
		in, out := &in.SeThreadMultiplier, &out.SeThreadMultiplier
		*out = new(string)
		**out = **in
	}
	if in.SeTimeTrackerProps != nil {
		in, out := &in.SeTimeTrackerProps, &out.SeTimeTrackerProps
		*out = make([]SeTimeTrackerPropsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SeTracertPortRange != nil {
		in, out := &in.SeTracertPortRange, &out.SeTracertPortRange
		*out = make([]SeTracertPortRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SeTunnelMode != nil {
		in, out := &in.SeTunnelMode, &out.SeTunnelMode
		*out = new(string)
		**out = **in
	}
	if in.SeTunnelUDPPort != nil {
		in, out := &in.SeTunnelUDPPort, &out.SeTunnelUDPPort
		*out = new(string)
		**out = **in
	}
	if in.SeTxBatchSize != nil {
		in, out := &in.SeTxBatchSize, &out.SeTxBatchSize
		*out = new(string)
		**out = **in
	}
	if in.SeTxqThreshold != nil {
		in, out := &in.SeTxqThreshold, &out.SeTxqThreshold
		*out = new(string)
		**out = **in
	}
	if in.SeUDPEncapIpc != nil {
		in, out := &in.SeUDPEncapIpc, &out.SeUDPEncapIpc
		*out = new(string)
		**out = **in
	}
	if in.SeUseDpdk != nil {
		in, out := &in.SeUseDpdk, &out.SeUseDpdk
		*out = new(string)
		**out = **in
	}
	if in.SeVnicTxSwQueueFlushFrequency != nil {
		in, out := &in.SeVnicTxSwQueueFlushFrequency, &out.SeVnicTxSwQueueFlushFrequency
		*out = new(string)
		**out = **in
	}
	if in.SeVnicTxSwQueueSize != nil {
		in, out := &in.SeVnicTxSwQueueSize, &out.SeVnicTxSwQueueSize
		*out = new(string)
		**out = **in
	}
	if in.SeVsHbMaxPktsInBatch != nil {
		in, out := &in.SeVsHbMaxPktsInBatch, &out.SeVsHbMaxPktsInBatch
		*out = new(string)
		**out = **in
	}
	if in.SeVsHbMaxVsInPkt != nil {
		in, out := &in.SeVsHbMaxVsInPkt, &out.SeVsHbMaxVsInPkt
		*out = new(string)
		**out = **in
	}
	if in.SelfSeElection != nil {
		in, out := &in.SelfSeElection, &out.SelfSeElection
		*out = new(string)
		**out = **in
	}
	if in.SendSeReadyTimeout != nil {
		in, out := &in.SendSeReadyTimeout, &out.SendSeReadyTimeout
		*out = new(string)
		**out = **in
	}
	if in.ServiceIPSubnets != nil {
		in, out := &in.ServiceIPSubnets, &out.ServiceIPSubnets
		*out = make([]ServiceIPSubnetsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceIp6Subnets != nil {
		in, out := &in.ServiceIp6Subnets, &out.ServiceIp6Subnets
		*out = make([]ServiceIp6SubnetsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShmMinimumConfigMemory != nil {
		in, out := &in.ShmMinimumConfigMemory, &out.ShmMinimumConfigMemory
		*out = new(string)
		**out = **in
	}
	if in.SignificantLogThrottle != nil {
		in, out := &in.SignificantLogThrottle, &out.SignificantLogThrottle
		*out = new(string)
		**out = **in
	}
	if in.TenantRef != nil {
		in, out := &in.TenantRef, &out.TenantRef
		*out = new(string)
		**out = **in
	}
	if in.TransientSharedMemoryMax != nil {
		in, out := &in.TransientSharedMemoryMax, &out.TransientSharedMemoryMax
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.UdfLogThrottle != nil {
		in, out := &in.UdfLogThrottle, &out.UdfLogThrottle
		*out = new(string)
		**out = **in
	}
	if in.UpstreamConnectTimeout != nil {
		in, out := &in.UpstreamConnectTimeout, &out.UpstreamConnectTimeout
		*out = new(string)
		**out = **in
	}
	if in.UpstreamConnpoolEnable != nil {
		in, out := &in.UpstreamConnpoolEnable, &out.UpstreamConnpoolEnable
		*out = new(string)
		**out = **in
	}
	if in.UpstreamReadTimeout != nil {
		in, out := &in.UpstreamReadTimeout, &out.UpstreamReadTimeout
		*out = new(string)
		**out = **in
	}
	if in.UpstreamSendTimeout != nil {
		in, out := &in.UpstreamSendTimeout, &out.UpstreamSendTimeout
		*out = new(string)
		**out = **in
	}
	if in.UseDpUtilForScaleout != nil {
		in, out := &in.UseDpUtilForScaleout, &out.UseDpUtilForScaleout
		*out = new(string)
		**out = **in
	}
	if in.UseHyperthreadedCores != nil {
		in, out := &in.UseHyperthreadedCores, &out.UseHyperthreadedCores
		*out = new(string)
		**out = **in
	}
	if in.UseLegacyNetlink != nil {
		in, out := &in.UseLegacyNetlink, &out.UseLegacyNetlink
		*out = new(string)
		**out = **in
	}
	if in.UseObjsync != nil {
		in, out := &in.UseObjsync, &out.UseObjsync
		*out = new(string)
		**out = **in
	}
	if in.UseStandardALB != nil {
		in, out := &in.UseStandardALB, &out.UseStandardALB
		*out = new(string)
		**out = **in
	}
	if in.UserAgentCacheConfig != nil {
		in, out := &in.UserAgentCacheConfig, &out.UserAgentCacheConfig
		*out = make([]UserAgentCacheConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UserDefinedMetricAge != nil {
		in, out := &in.UserDefinedMetricAge, &out.UserDefinedMetricAge
		*out = new(string)
		**out = **in
	}
	if in.VcenterClusters != nil {
		in, out := &in.VcenterClusters, &out.VcenterClusters
		*out = make([]VcenterClustersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcenterDatastoreMode != nil {
		in, out := &in.VcenterDatastoreMode, &out.VcenterDatastoreMode
		*out = new(string)
		**out = **in
	}
	if in.VcenterDatastores != nil {
		in, out := &in.VcenterDatastores, &out.VcenterDatastores
		*out = make([]VcenterDatastoresParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcenterDatastoresInclude != nil {
		in, out := &in.VcenterDatastoresInclude, &out.VcenterDatastoresInclude
		*out = new(string)
		**out = **in
	}
	if in.VcenterFolder != nil {
		in, out := &in.VcenterFolder, &out.VcenterFolder
		*out = new(string)
		**out = **in
	}
	if in.VcenterHosts != nil {
		in, out := &in.VcenterHosts, &out.VcenterHosts
		*out = make([]VcenterHostsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcenterParkingVnicPg != nil {
		in, out := &in.VcenterParkingVnicPg, &out.VcenterParkingVnicPg
		*out = new(string)
		**out = **in
	}
	if in.Vcenters != nil {
		in, out := &in.Vcenters, &out.Vcenters
		*out = make([]VcentersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcpusPerSe != nil {
		in, out := &in.VcpusPerSe, &out.VcpusPerSe
		*out = new(string)
		**out = **in
	}
	if in.VipAsg != nil {
		in, out := &in.VipAsg, &out.VipAsg
		*out = make([]VipAsgParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VnicDHCPIPCheckInterval != nil {
		in, out := &in.VnicDHCPIPCheckInterval, &out.VnicDHCPIPCheckInterval
		*out = new(string)
		**out = **in
	}
	if in.VnicDHCPIPMaxRetries != nil {
		in, out := &in.VnicDHCPIPMaxRetries, &out.VnicDHCPIPMaxRetries
		*out = new(string)
		**out = **in
	}
	if in.VnicIPDeleteInterval != nil {
		in, out := &in.VnicIPDeleteInterval, &out.VnicIPDeleteInterval
		*out = new(string)
		**out = **in
	}
	if in.VnicProbeInterval != nil {
		in, out := &in.VnicProbeInterval, &out.VnicProbeInterval
		*out = new(string)
		**out = **in
	}
	if in.VnicRPCRetryInterval != nil {
		in, out := &in.VnicRPCRetryInterval, &out.VnicRPCRetryInterval
		*out = new(string)
		**out = **in
	}
	if in.VnicdbCmdHistorySize != nil {
		in, out := &in.VnicdbCmdHistorySize, &out.VnicdbCmdHistorySize
		*out = new(string)
		**out = **in
	}
	if in.VsHostRedundancy != nil {
		in, out := &in.VsHostRedundancy, &out.VsHostRedundancy
		*out = new(string)
		**out = **in
	}
	if in.VsScaleinTimeout != nil {
		in, out := &in.VsScaleinTimeout, &out.VsScaleinTimeout
		*out = new(string)
		**out = **in
	}
	if in.VsScaleinTimeoutForUpgrade != nil {
		in, out := &in.VsScaleinTimeoutForUpgrade, &out.VsScaleinTimeoutForUpgrade
		*out = new(string)
		**out = **in
	}
	if in.VsScaleoutTimeout != nil {
		in, out := &in.VsScaleoutTimeout, &out.VsScaleoutTimeout
		*out = new(string)
		**out = **in
	}
	if in.VsSePrimarySwitchoverAdditionalWaitTime != nil {
		in, out := &in.VsSePrimarySwitchoverAdditionalWaitTime, &out.VsSePrimarySwitchoverAdditionalWaitTime
		*out = new(string)
		**out = **in
	}
	if in.VsSeScaleinAdditionalWaitTime != nil {
		in, out := &in.VsSeScaleinAdditionalWaitTime, &out.VsSeScaleinAdditionalWaitTime
		*out = new(string)
		**out = **in
	}
	if in.VsSeScaleoutAdditionalWaitTime != nil {
		in, out := &in.VsSeScaleoutAdditionalWaitTime, &out.VsSeScaleoutAdditionalWaitTime
		*out = new(string)
		**out = **in
	}
	if in.VsSeScaleoutReadyTimeout != nil {
		in, out := &in.VsSeScaleoutReadyTimeout, &out.VsSeScaleoutReadyTimeout
		*out = new(string)
		**out = **in
	}
	if in.VsSwitchoverTimeout != nil {
		in, out := &in.VsSwitchoverTimeout, &out.VsSwitchoverTimeout
		*out = new(string)
		**out = **in
	}
	if in.VssPlacement != nil {
		in, out := &in.VssPlacement, &out.VssPlacement
		*out = make([]VssPlacementParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VssPlacementEnabled != nil {
		in, out := &in.VssPlacementEnabled, &out.VssPlacementEnabled
		*out = new(string)
		**out = **in
	}
	if in.WafMempool != nil {
		in, out := &in.WafMempool, &out.WafMempool
		*out = new(string)
		**out = **in
	}
	if in.WafMempoolSize != nil {
		in, out := &in.WafMempoolSize, &out.WafMempoolSize
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceEngineGroupParameters.
func (in *ServiceEngineGroupParameters) DeepCopy() *ServiceEngineGroupParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceEngineGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceEngineGroupSpec) DeepCopyInto(out *ServiceEngineGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceEngineGroupSpec.
func (in *ServiceEngineGroupSpec) DeepCopy() *ServiceEngineGroupSpec {
	if in == nil {
		return nil
	}
	out := new(ServiceEngineGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceEngineGroupStatus) DeepCopyInto(out *ServiceEngineGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceEngineGroupStatus.
func (in *ServiceEngineGroupStatus) DeepCopy() *ServiceEngineGroupStatus {
	if in == nil {
		return nil
	}
	out := new(ServiceEngineGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceEngineInitParameters) DeepCopyInto(out *ServiceEngineInitParameters) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.CloudRef != nil {
		in, out := &in.CloudRef, &out.CloudRef
		*out = new(string)
		**out = **in
	}
	if in.ContainerMode != nil {
		in, out := &in.ContainerMode, &out.ContainerMode
		*out = new(string)
		**out = **in
	}
	if in.ContainerType != nil {
		in, out := &in.ContainerType, &out.ContainerType
		*out = new(string)
		**out = **in
	}
	if in.ControllerCreated != nil {
		in, out := &in.ControllerCreated, &out.ControllerCreated
		*out = new(string)
		**out = **in
	}
	if in.ControllerIP != nil {
		in, out := &in.ControllerIP, &out.ControllerIP
		*out = new(string)
		**out = **in
	}
	if in.DataVnics != nil {
		in, out := &in.DataVnics, &out.DataVnics
		*out = make([]DataVnicsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableState != nil {
		in, out := &in.EnableState, &out.EnableState
		*out = new(string)
		**out = **in
	}
	if in.Flavor != nil {
		in, out := &in.Flavor, &out.Flavor
		*out = new(string)
		**out = **in
	}
	if in.HostRef != nil {
		in, out := &in.HostRef, &out.HostRef
		*out = new(string)
		**out = **in
	}
	if in.Hypervisor != nil {
		in, out := &in.Hypervisor, &out.Hypervisor
		*out = new(string)
		**out = **in
	}
	if in.MgmtVnic != nil {
		in, out := &in.MgmtVnic, &out.MgmtVnic
		*out = make([]MgmtVnicInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NsxtNoHotplug != nil {
		in, out := &in.NsxtNoHotplug, &out.NsxtNoHotplug
		*out = new(string)
		**out = **in
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = make([]ResourcesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SeGroupRef != nil {
		in, out := &in.SeGroupRef, &out.SeGroupRef
		*out = new(string)
		**out = **in
	}
	if in.TenantRef != nil {
		in, out := &in.TenantRef, &out.TenantRef
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceEngineInitParameters.
func (in *ServiceEngineInitParameters) DeepCopy() *ServiceEngineInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceEngineInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceEngineList) DeepCopyInto(out *ServiceEngineList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ServiceEngine, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceEngineList.
func (in *ServiceEngineList) DeepCopy() *ServiceEngineList {
	if in == nil {
		return nil
	}
	out := new(ServiceEngineList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceEngineList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceEngineObservation) DeepCopyInto(out *ServiceEngineObservation) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.CloudRef != nil {
		in, out := &in.CloudRef, &out.CloudRef
		*out = new(string)
		**out = **in
	}
	if in.ContainerMode != nil {
		in, out := &in.ContainerMode, &out.ContainerMode
		*out = new(string)
		**out = **in
	}
	if in.ContainerType != nil {
		in, out := &in.ContainerType, &out.ContainerType
		*out = new(string)
		**out = **in
	}
	if in.ControllerCreated != nil {
		in, out := &in.ControllerCreated, &out.ControllerCreated
		*out = new(string)
		**out = **in
	}
	if in.ControllerIP != nil {
		in, out := &in.ControllerIP, &out.ControllerIP
		*out = new(string)
		**out = **in
	}
	if in.DataVnics != nil {
		in, out := &in.DataVnics, &out.DataVnics
		*out = make([]DataVnicsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableState != nil {
		in, out := &in.EnableState, &out.EnableState
		*out = new(string)
		**out = **in
	}
	if in.Flavor != nil {
		in, out := &in.Flavor, &out.Flavor
		*out = new(string)
		**out = **in
	}
	if in.HostRef != nil {
		in, out := &in.HostRef, &out.HostRef
		*out = new(string)
		**out = **in
	}
	if in.Hypervisor != nil {
		in, out := &in.Hypervisor, &out.Hypervisor
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MgmtVnic != nil {
		in, out := &in.MgmtVnic, &out.MgmtVnic
		*out = make([]MgmtVnicObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NsxtNoHotplug != nil {
		in, out := &in.NsxtNoHotplug, &out.NsxtNoHotplug
		*out = new(string)
		**out = **in
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = make([]ResourcesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SeGroupRef != nil {
		in, out := &in.SeGroupRef, &out.SeGroupRef
		*out = new(string)
		**out = **in
	}
	if in.TenantRef != nil {
		in, out := &in.TenantRef, &out.TenantRef
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceEngineObservation.
func (in *ServiceEngineObservation) DeepCopy() *ServiceEngineObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceEngineObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceEngineParameters) DeepCopyInto(out *ServiceEngineParameters) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.CloudRef != nil {
		in, out := &in.CloudRef, &out.CloudRef
		*out = new(string)
		**out = **in
	}
	if in.ContainerMode != nil {
		in, out := &in.ContainerMode, &out.ContainerMode
		*out = new(string)
		**out = **in
	}
	if in.ContainerType != nil {
		in, out := &in.ContainerType, &out.ContainerType
		*out = new(string)
		**out = **in
	}
	if in.ControllerCreated != nil {
		in, out := &in.ControllerCreated, &out.ControllerCreated
		*out = new(string)
		**out = **in
	}
	if in.ControllerIP != nil {
		in, out := &in.ControllerIP, &out.ControllerIP
		*out = new(string)
		**out = **in
	}
	if in.DataVnics != nil {
		in, out := &in.DataVnics, &out.DataVnics
		*out = make([]DataVnicsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableState != nil {
		in, out := &in.EnableState, &out.EnableState
		*out = new(string)
		**out = **in
	}
	if in.Flavor != nil {
		in, out := &in.Flavor, &out.Flavor
		*out = new(string)
		**out = **in
	}
	if in.HostRef != nil {
		in, out := &in.HostRef, &out.HostRef
		*out = new(string)
		**out = **in
	}
	if in.Hypervisor != nil {
		in, out := &in.Hypervisor, &out.Hypervisor
		*out = new(string)
		**out = **in
	}
	if in.MgmtVnic != nil {
		in, out := &in.MgmtVnic, &out.MgmtVnic
		*out = make([]MgmtVnicParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NsxtNoHotplug != nil {
		in, out := &in.NsxtNoHotplug, &out.NsxtNoHotplug
		*out = new(string)
		**out = **in
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = make([]ResourcesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SeGroupRef != nil {
		in, out := &in.SeGroupRef, &out.SeGroupRef
		*out = new(string)
		**out = **in
	}
	if in.TenantRef != nil {
		in, out := &in.TenantRef, &out.TenantRef
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceEngineParameters.
func (in *ServiceEngineParameters) DeepCopy() *ServiceEngineParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceEngineParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceEngineSpec) DeepCopyInto(out *ServiceEngineSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceEngineSpec.
func (in *ServiceEngineSpec) DeepCopy() *ServiceEngineSpec {
	if in == nil {
		return nil
	}
	out := new(ServiceEngineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceEngineStatus) DeepCopyInto(out *ServiceEngineStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceEngineStatus.
func (in *ServiceEngineStatus) DeepCopy() *ServiceEngineStatus {
	if in == nil {
		return nil
	}
	out := new(ServiceEngineStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceIPSubnetsIPAddrInitParameters) DeepCopyInto(out *ServiceIPSubnetsIPAddrInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceIPSubnetsIPAddrInitParameters.
func (in *ServiceIPSubnetsIPAddrInitParameters) DeepCopy() *ServiceIPSubnetsIPAddrInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceIPSubnetsIPAddrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceIPSubnetsIPAddrObservation) DeepCopyInto(out *ServiceIPSubnetsIPAddrObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceIPSubnetsIPAddrObservation.
func (in *ServiceIPSubnetsIPAddrObservation) DeepCopy() *ServiceIPSubnetsIPAddrObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceIPSubnetsIPAddrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceIPSubnetsIPAddrParameters) DeepCopyInto(out *ServiceIPSubnetsIPAddrParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceIPSubnetsIPAddrParameters.
func (in *ServiceIPSubnetsIPAddrParameters) DeepCopy() *ServiceIPSubnetsIPAddrParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceIPSubnetsIPAddrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceIPSubnetsInitParameters) DeepCopyInto(out *ServiceIPSubnetsInitParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]ServiceIPSubnetsIPAddrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceIPSubnetsInitParameters.
func (in *ServiceIPSubnetsInitParameters) DeepCopy() *ServiceIPSubnetsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceIPSubnetsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceIPSubnetsObservation) DeepCopyInto(out *ServiceIPSubnetsObservation) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]ServiceIPSubnetsIPAddrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceIPSubnetsObservation.
func (in *ServiceIPSubnetsObservation) DeepCopy() *ServiceIPSubnetsObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceIPSubnetsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceIPSubnetsParameters) DeepCopyInto(out *ServiceIPSubnetsParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]ServiceIPSubnetsIPAddrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceIPSubnetsParameters.
func (in *ServiceIPSubnetsParameters) DeepCopy() *ServiceIPSubnetsParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceIPSubnetsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceIp6SubnetsIPAddrInitParameters) DeepCopyInto(out *ServiceIp6SubnetsIPAddrInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceIp6SubnetsIPAddrInitParameters.
func (in *ServiceIp6SubnetsIPAddrInitParameters) DeepCopy() *ServiceIp6SubnetsIPAddrInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceIp6SubnetsIPAddrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceIp6SubnetsIPAddrObservation) DeepCopyInto(out *ServiceIp6SubnetsIPAddrObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceIp6SubnetsIPAddrObservation.
func (in *ServiceIp6SubnetsIPAddrObservation) DeepCopy() *ServiceIp6SubnetsIPAddrObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceIp6SubnetsIPAddrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceIp6SubnetsIPAddrParameters) DeepCopyInto(out *ServiceIp6SubnetsIPAddrParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceIp6SubnetsIPAddrParameters.
func (in *ServiceIp6SubnetsIPAddrParameters) DeepCopy() *ServiceIp6SubnetsIPAddrParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceIp6SubnetsIPAddrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceIp6SubnetsInitParameters) DeepCopyInto(out *ServiceIp6SubnetsInitParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]ServiceIp6SubnetsIPAddrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceIp6SubnetsInitParameters.
func (in *ServiceIp6SubnetsInitParameters) DeepCopy() *ServiceIp6SubnetsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceIp6SubnetsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceIp6SubnetsObservation) DeepCopyInto(out *ServiceIp6SubnetsObservation) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]ServiceIp6SubnetsIPAddrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceIp6SubnetsObservation.
func (in *ServiceIp6SubnetsObservation) DeepCopy() *ServiceIp6SubnetsObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceIp6SubnetsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceIp6SubnetsParameters) DeepCopyInto(out *ServiceIp6SubnetsParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]ServiceIp6SubnetsIPAddrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceIp6SubnetsParameters.
func (in *ServiceIp6SubnetsParameters) DeepCopy() *ServiceIp6SubnetsParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceIp6SubnetsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceLocatorInitParameters) DeepCopyInto(out *ServiceLocatorInitParameters) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceLocatorInitParameters.
func (in *ServiceLocatorInitParameters) DeepCopy() *ServiceLocatorInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceLocatorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceLocatorObservation) DeepCopyInto(out *ServiceLocatorObservation) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceLocatorObservation.
func (in *ServiceLocatorObservation) DeepCopy() *ServiceLocatorObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceLocatorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceLocatorParameters) DeepCopyInto(out *ServiceLocatorParameters) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceLocatorParameters.
func (in *ServiceLocatorParameters) DeepCopy() *ServiceLocatorParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceLocatorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePoolSelectInitParameters) DeepCopyInto(out *ServicePoolSelectInitParameters) {
	*out = *in
	if in.ServicePoolGroupRef != nil {
		in, out := &in.ServicePoolGroupRef, &out.ServicePoolGroupRef
		*out = new(string)
		**out = **in
	}
	if in.ServicePoolRef != nil {
		in, out := &in.ServicePoolRef, &out.ServicePoolRef
		*out = new(string)
		**out = **in
	}
	if in.ServicePort != nil {
		in, out := &in.ServicePort, &out.ServicePort
		*out = new(string)
		**out = **in
	}
	if in.ServicePortRangeEnd != nil {
		in, out := &in.ServicePortRangeEnd, &out.ServicePortRangeEnd
		*out = new(string)
		**out = **in
	}
	if in.ServiceProtocol != nil {
		in, out := &in.ServiceProtocol, &out.ServiceProtocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePoolSelectInitParameters.
func (in *ServicePoolSelectInitParameters) DeepCopy() *ServicePoolSelectInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServicePoolSelectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePoolSelectObservation) DeepCopyInto(out *ServicePoolSelectObservation) {
	*out = *in
	if in.ServicePoolGroupRef != nil {
		in, out := &in.ServicePoolGroupRef, &out.ServicePoolGroupRef
		*out = new(string)
		**out = **in
	}
	if in.ServicePoolRef != nil {
		in, out := &in.ServicePoolRef, &out.ServicePoolRef
		*out = new(string)
		**out = **in
	}
	if in.ServicePort != nil {
		in, out := &in.ServicePort, &out.ServicePort
		*out = new(string)
		**out = **in
	}
	if in.ServicePortRangeEnd != nil {
		in, out := &in.ServicePortRangeEnd, &out.ServicePortRangeEnd
		*out = new(string)
		**out = **in
	}
	if in.ServiceProtocol != nil {
		in, out := &in.ServiceProtocol, &out.ServiceProtocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePoolSelectObservation.
func (in *ServicePoolSelectObservation) DeepCopy() *ServicePoolSelectObservation {
	if in == nil {
		return nil
	}
	out := new(ServicePoolSelectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePoolSelectParameters) DeepCopyInto(out *ServicePoolSelectParameters) {
	*out = *in
	if in.ServicePoolGroupRef != nil {
		in, out := &in.ServicePoolGroupRef, &out.ServicePoolGroupRef
		*out = new(string)
		**out = **in
	}
	if in.ServicePoolRef != nil {
		in, out := &in.ServicePoolRef, &out.ServicePoolRef
		*out = new(string)
		**out = **in
	}
	if in.ServicePort != nil {
		in, out := &in.ServicePort, &out.ServicePort
		*out = new(string)
		**out = **in
	}
	if in.ServicePortRangeEnd != nil {
		in, out := &in.ServicePortRangeEnd, &out.ServicePortRangeEnd
		*out = new(string)
		**out = **in
	}
	if in.ServiceProtocol != nil {
		in, out := &in.ServiceProtocol, &out.ServiceProtocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePoolSelectParameters.
func (in *ServicePoolSelectParameters) DeepCopy() *ServicePoolSelectParameters {
	if in == nil {
		return nil
	}
	out := new(ServicePoolSelectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesInitParameters) DeepCopyInto(out *ServicesInitParameters) {
	*out = *in
	if in.EnableHttp2 != nil {
		in, out := &in.EnableHttp2, &out.EnableHttp2
		*out = new(string)
		**out = **in
	}
	if in.EnableSSL != nil {
		in, out := &in.EnableSSL, &out.EnableSSL
		*out = new(string)
		**out = **in
	}
	if in.HorizonInternalPorts != nil {
		in, out := &in.HorizonInternalPorts, &out.HorizonInternalPorts
		*out = new(string)
		**out = **in
	}
	if in.IsActiveFtpDataPort != nil {
		in, out := &in.IsActiveFtpDataPort, &out.IsActiveFtpDataPort
		*out = new(string)
		**out = **in
	}
	if in.OverrideApplicationProfileRef != nil {
		in, out := &in.OverrideApplicationProfileRef, &out.OverrideApplicationProfileRef
		*out = new(string)
		**out = **in
	}
	if in.OverrideNetworkProfileRef != nil {
		in, out := &in.OverrideNetworkProfileRef, &out.OverrideNetworkProfileRef
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.PortRangeEnd != nil {
		in, out := &in.PortRangeEnd, &out.PortRangeEnd
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesInitParameters.
func (in *ServicesInitParameters) DeepCopy() *ServicesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServicesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesObservation) DeepCopyInto(out *ServicesObservation) {
	*out = *in
	if in.EnableHttp2 != nil {
		in, out := &in.EnableHttp2, &out.EnableHttp2
		*out = new(string)
		**out = **in
	}
	if in.EnableSSL != nil {
		in, out := &in.EnableSSL, &out.EnableSSL
		*out = new(string)
		**out = **in
	}
	if in.HorizonInternalPorts != nil {
		in, out := &in.HorizonInternalPorts, &out.HorizonInternalPorts
		*out = new(string)
		**out = **in
	}
	if in.IsActiveFtpDataPort != nil {
		in, out := &in.IsActiveFtpDataPort, &out.IsActiveFtpDataPort
		*out = new(string)
		**out = **in
	}
	if in.OverrideApplicationProfileRef != nil {
		in, out := &in.OverrideApplicationProfileRef, &out.OverrideApplicationProfileRef
		*out = new(string)
		**out = **in
	}
	if in.OverrideNetworkProfileRef != nil {
		in, out := &in.OverrideNetworkProfileRef, &out.OverrideNetworkProfileRef
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.PortRangeEnd != nil {
		in, out := &in.PortRangeEnd, &out.PortRangeEnd
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesObservation.
func (in *ServicesObservation) DeepCopy() *ServicesObservation {
	if in == nil {
		return nil
	}
	out := new(ServicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesParameters) DeepCopyInto(out *ServicesParameters) {
	*out = *in
	if in.EnableHttp2 != nil {
		in, out := &in.EnableHttp2, &out.EnableHttp2
		*out = new(string)
		**out = **in
	}
	if in.EnableSSL != nil {
		in, out := &in.EnableSSL, &out.EnableSSL
		*out = new(string)
		**out = **in
	}
	if in.HorizonInternalPorts != nil {
		in, out := &in.HorizonInternalPorts, &out.HorizonInternalPorts
		*out = new(string)
		**out = **in
	}
	if in.IsActiveFtpDataPort != nil {
		in, out := &in.IsActiveFtpDataPort, &out.IsActiveFtpDataPort
		*out = new(string)
		**out = **in
	}
	if in.OverrideApplicationProfileRef != nil {
		in, out := &in.OverrideApplicationProfileRef, &out.OverrideApplicationProfileRef
		*out = new(string)
		**out = **in
	}
	if in.OverrideNetworkProfileRef != nil {
		in, out := &in.OverrideNetworkProfileRef, &out.OverrideNetworkProfileRef
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.PortRangeEnd != nil {
		in, out := &in.PortRangeEnd, &out.PortRangeEnd
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesParameters.
func (in *ServicesParameters) DeepCopy() *ServicesParameters {
	if in == nil {
		return nil
	}
	out := new(ServicesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SidebandProfileIPInitParameters) DeepCopyInto(out *SidebandProfileIPInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SidebandProfileIPInitParameters.
func (in *SidebandProfileIPInitParameters) DeepCopy() *SidebandProfileIPInitParameters {
	if in == nil {
		return nil
	}
	out := new(SidebandProfileIPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SidebandProfileIPObservation) DeepCopyInto(out *SidebandProfileIPObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SidebandProfileIPObservation.
func (in *SidebandProfileIPObservation) DeepCopy() *SidebandProfileIPObservation {
	if in == nil {
		return nil
	}
	out := new(SidebandProfileIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SidebandProfileIPParameters) DeepCopyInto(out *SidebandProfileIPParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SidebandProfileIPParameters.
func (in *SidebandProfileIPParameters) DeepCopy() *SidebandProfileIPParameters {
	if in == nil {
		return nil
	}
	out := new(SidebandProfileIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SidebandProfileInitParameters) DeepCopyInto(out *SidebandProfileInitParameters) {
	*out = *in
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = make([]SidebandProfileIPInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SidebandMaxRequestBodySize != nil {
		in, out := &in.SidebandMaxRequestBodySize, &out.SidebandMaxRequestBodySize
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SidebandProfileInitParameters.
func (in *SidebandProfileInitParameters) DeepCopy() *SidebandProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(SidebandProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SidebandProfileObservation) DeepCopyInto(out *SidebandProfileObservation) {
	*out = *in
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = make([]SidebandProfileIPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SidebandMaxRequestBodySize != nil {
		in, out := &in.SidebandMaxRequestBodySize, &out.SidebandMaxRequestBodySize
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SidebandProfileObservation.
func (in *SidebandProfileObservation) DeepCopy() *SidebandProfileObservation {
	if in == nil {
		return nil
	}
	out := new(SidebandProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SidebandProfileParameters) DeepCopyInto(out *SidebandProfileParameters) {
	*out = *in
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = make([]SidebandProfileIPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SidebandMaxRequestBodySize != nil {
		in, out := &in.SidebandMaxRequestBodySize, &out.SidebandMaxRequestBodySize
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SidebandProfileParameters.
func (in *SidebandProfileParameters) DeepCopy() *SidebandProfileParameters {
	if in == nil {
		return nil
	}
	out := new(SidebandProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SitesInitParameters) DeepCopyInto(out *SitesInitParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.ClusterUUID != nil {
		in, out := &in.ClusterUUID, &out.ClusterUUID
		*out = new(string)
		**out = **in
	}
	if in.DNSVses != nil {
		in, out := &in.DNSVses, &out.DNSVses
		*out = make([]DNSVsesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.HmProxies != nil {
		in, out := &in.HmProxies, &out.HmProxies
		*out = make([]HmProxiesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HmShardEnabled != nil {
		in, out := &in.HmShardEnabled, &out.HmShardEnabled
		*out = new(string)
		**out = **in
	}
	if in.IPAddresses != nil {
		in, out := &in.IPAddresses, &out.IPAddresses
		*out = make([]IPAddressesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = make([]LocationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MemberType != nil {
		in, out := &in.MemberType, &out.MemberType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Ratio != nil {
		in, out := &in.Ratio, &out.Ratio
		*out = new(string)
		**out = **in
	}
	if in.SuspendMode != nil {
		in, out := &in.SuspendMode, &out.SuspendMode
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SitesInitParameters.
func (in *SitesInitParameters) DeepCopy() *SitesInitParameters {
	if in == nil {
		return nil
	}
	out := new(SitesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SitesObservation) DeepCopyInto(out *SitesObservation) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.ClusterUUID != nil {
		in, out := &in.ClusterUUID, &out.ClusterUUID
		*out = new(string)
		**out = **in
	}
	if in.DNSVses != nil {
		in, out := &in.DNSVses, &out.DNSVses
		*out = make([]DNSVsesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.HmProxies != nil {
		in, out := &in.HmProxies, &out.HmProxies
		*out = make([]HmProxiesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HmShardEnabled != nil {
		in, out := &in.HmShardEnabled, &out.HmShardEnabled
		*out = new(string)
		**out = **in
	}
	if in.IPAddresses != nil {
		in, out := &in.IPAddresses, &out.IPAddresses
		*out = make([]IPAddressesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = make([]LocationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MemberType != nil {
		in, out := &in.MemberType, &out.MemberType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Ratio != nil {
		in, out := &in.Ratio, &out.Ratio
		*out = new(string)
		**out = **in
	}
	if in.SuspendMode != nil {
		in, out := &in.SuspendMode, &out.SuspendMode
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SitesObservation.
func (in *SitesObservation) DeepCopy() *SitesObservation {
	if in == nil {
		return nil
	}
	out := new(SitesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SitesParameters) DeepCopyInto(out *SitesParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.ClusterUUID != nil {
		in, out := &in.ClusterUUID, &out.ClusterUUID
		*out = new(string)
		**out = **in
	}
	if in.DNSVses != nil {
		in, out := &in.DNSVses, &out.DNSVses
		*out = make([]DNSVsesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.HmProxies != nil {
		in, out := &in.HmProxies, &out.HmProxies
		*out = make([]HmProxiesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HmShardEnabled != nil {
		in, out := &in.HmShardEnabled, &out.HmShardEnabled
		*out = new(string)
		**out = **in
	}
	if in.IPAddresses != nil {
		in, out := &in.IPAddresses, &out.IPAddresses
		*out = make([]IPAddressesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = make([]LocationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MemberType != nil {
		in, out := &in.MemberType, &out.MemberType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Ratio != nil {
		in, out := &in.Ratio, &out.Ratio
		*out = new(string)
		**out = **in
	}
	if in.SuspendMode != nil {
		in, out := &in.SuspendMode, &out.SuspendMode
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SitesParameters.
func (in *SitesParameters) DeepCopy() *SitesParameters {
	if in == nil {
		return nil
	}
	out := new(SitesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SkipUrisInitParameters) DeepCopyInto(out *SkipUrisInitParameters) {
	*out = *in
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.MatchStr != nil {
		in, out := &in.MatchStr, &out.MatchStr
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StringGroupRefs != nil {
		in, out := &in.StringGroupRefs, &out.StringGroupRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SkipUrisInitParameters.
func (in *SkipUrisInitParameters) DeepCopy() *SkipUrisInitParameters {
	if in == nil {
		return nil
	}
	out := new(SkipUrisInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SkipUrisObservation) DeepCopyInto(out *SkipUrisObservation) {
	*out = *in
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.MatchStr != nil {
		in, out := &in.MatchStr, &out.MatchStr
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StringGroupRefs != nil {
		in, out := &in.StringGroupRefs, &out.StringGroupRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SkipUrisObservation.
func (in *SkipUrisObservation) DeepCopy() *SkipUrisObservation {
	if in == nil {
		return nil
	}
	out := new(SkipUrisObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SkipUrisParameters) DeepCopyInto(out *SkipUrisParameters) {
	*out = *in
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.MatchStr != nil {
		in, out := &in.MatchStr, &out.MatchStr
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StringGroupRefs != nil {
		in, out := &in.StringGroupRefs, &out.StringGroupRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SkipUrisParameters.
func (in *SkipUrisParameters) DeepCopy() *SkipUrisParameters {
	if in == nil {
		return nil
	}
	out := new(SkipUrisParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnatIPInitParameters) DeepCopyInto(out *SnatIPInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnatIPInitParameters.
func (in *SnatIPInitParameters) DeepCopy() *SnatIPInitParameters {
	if in == nil {
		return nil
	}
	out := new(SnatIPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnatIPObservation) DeepCopyInto(out *SnatIPObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnatIPObservation.
func (in *SnatIPObservation) DeepCopy() *SnatIPObservation {
	if in == nil {
		return nil
	}
	out := new(SnatIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnatIPParameters) DeepCopyInto(out *SnatIPParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnatIPParameters.
func (in *SnatIPParameters) DeepCopy() *SnatIPParameters {
	if in == nil {
		return nil
	}
	out := new(SnatIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnatIp6AddressesInitParameters) DeepCopyInto(out *SnatIp6AddressesInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnatIp6AddressesInitParameters.
func (in *SnatIp6AddressesInitParameters) DeepCopy() *SnatIp6AddressesInitParameters {
	if in == nil {
		return nil
	}
	out := new(SnatIp6AddressesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnatIp6AddressesObservation) DeepCopyInto(out *SnatIp6AddressesObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnatIp6AddressesObservation.
func (in *SnatIp6AddressesObservation) DeepCopy() *SnatIp6AddressesObservation {
	if in == nil {
		return nil
	}
	out := new(SnatIp6AddressesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnatIp6AddressesParameters) DeepCopyInto(out *SnatIp6AddressesParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnatIp6AddressesParameters.
func (in *SnatIp6AddressesParameters) DeepCopy() *SnatIp6AddressesParameters {
	if in == nil {
		return nil
	}
	out := new(SnatIp6AddressesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceIPAddrsInitParameters) DeepCopyInto(out *SourceIPAddrsInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceIPAddrsInitParameters.
func (in *SourceIPAddrsInitParameters) DeepCopy() *SourceIPAddrsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceIPAddrsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceIPAddrsObservation) DeepCopyInto(out *SourceIPAddrsObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceIPAddrsObservation.
func (in *SourceIPAddrsObservation) DeepCopy() *SourceIPAddrsObservation {
	if in == nil {
		return nil
	}
	out := new(SourceIPAddrsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceIPAddrsParameters) DeepCopyInto(out *SourceIPAddrsParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceIPAddrsParameters.
func (in *SourceIPAddrsParameters) DeepCopy() *SourceIPAddrsParameters {
	if in == nil {
		return nil
	}
	out := new(SourceIPAddrsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceIPInitParameters) DeepCopyInto(out *SourceIPInitParameters) {
	*out = *in
	if in.Addrs != nil {
		in, out := &in.Addrs, &out.Addrs
		*out = make([]SourceIPAddrsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupRefs != nil {
		in, out := &in.GroupRefs, &out.GroupRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Prefixes != nil {
		in, out := &in.Prefixes, &out.Prefixes
		*out = make([]SourceIPPrefixesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]SourceIPRangesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceIPInitParameters.
func (in *SourceIPInitParameters) DeepCopy() *SourceIPInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceIPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceIPObservation) DeepCopyInto(out *SourceIPObservation) {
	*out = *in
	if in.Addrs != nil {
		in, out := &in.Addrs, &out.Addrs
		*out = make([]SourceIPAddrsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupRefs != nil {
		in, out := &in.GroupRefs, &out.GroupRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Prefixes != nil {
		in, out := &in.Prefixes, &out.Prefixes
		*out = make([]SourceIPPrefixesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]SourceIPRangesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceIPObservation.
func (in *SourceIPObservation) DeepCopy() *SourceIPObservation {
	if in == nil {
		return nil
	}
	out := new(SourceIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceIPParameters) DeepCopyInto(out *SourceIPParameters) {
	*out = *in
	if in.Addrs != nil {
		in, out := &in.Addrs, &out.Addrs
		*out = make([]SourceIPAddrsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupRefs != nil {
		in, out := &in.GroupRefs, &out.GroupRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Prefixes != nil {
		in, out := &in.Prefixes, &out.Prefixes
		*out = make([]SourceIPPrefixesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]SourceIPRangesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceIPParameters.
func (in *SourceIPParameters) DeepCopy() *SourceIPParameters {
	if in == nil {
		return nil
	}
	out := new(SourceIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceIPPrefixesIPAddrInitParameters) DeepCopyInto(out *SourceIPPrefixesIPAddrInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceIPPrefixesIPAddrInitParameters.
func (in *SourceIPPrefixesIPAddrInitParameters) DeepCopy() *SourceIPPrefixesIPAddrInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceIPPrefixesIPAddrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceIPPrefixesIPAddrObservation) DeepCopyInto(out *SourceIPPrefixesIPAddrObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceIPPrefixesIPAddrObservation.
func (in *SourceIPPrefixesIPAddrObservation) DeepCopy() *SourceIPPrefixesIPAddrObservation {
	if in == nil {
		return nil
	}
	out := new(SourceIPPrefixesIPAddrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceIPPrefixesIPAddrParameters) DeepCopyInto(out *SourceIPPrefixesIPAddrParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceIPPrefixesIPAddrParameters.
func (in *SourceIPPrefixesIPAddrParameters) DeepCopy() *SourceIPPrefixesIPAddrParameters {
	if in == nil {
		return nil
	}
	out := new(SourceIPPrefixesIPAddrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceIPPrefixesInitParameters) DeepCopyInto(out *SourceIPPrefixesInitParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]SourceIPPrefixesIPAddrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceIPPrefixesInitParameters.
func (in *SourceIPPrefixesInitParameters) DeepCopy() *SourceIPPrefixesInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceIPPrefixesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceIPPrefixesObservation) DeepCopyInto(out *SourceIPPrefixesObservation) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]SourceIPPrefixesIPAddrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceIPPrefixesObservation.
func (in *SourceIPPrefixesObservation) DeepCopy() *SourceIPPrefixesObservation {
	if in == nil {
		return nil
	}
	out := new(SourceIPPrefixesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceIPPrefixesParameters) DeepCopyInto(out *SourceIPPrefixesParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]SourceIPPrefixesIPAddrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceIPPrefixesParameters.
func (in *SourceIPPrefixesParameters) DeepCopy() *SourceIPPrefixesParameters {
	if in == nil {
		return nil
	}
	out := new(SourceIPPrefixesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceIPRangesBeginInitParameters) DeepCopyInto(out *SourceIPRangesBeginInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceIPRangesBeginInitParameters.
func (in *SourceIPRangesBeginInitParameters) DeepCopy() *SourceIPRangesBeginInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceIPRangesBeginInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceIPRangesBeginObservation) DeepCopyInto(out *SourceIPRangesBeginObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceIPRangesBeginObservation.
func (in *SourceIPRangesBeginObservation) DeepCopy() *SourceIPRangesBeginObservation {
	if in == nil {
		return nil
	}
	out := new(SourceIPRangesBeginObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceIPRangesBeginParameters) DeepCopyInto(out *SourceIPRangesBeginParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceIPRangesBeginParameters.
func (in *SourceIPRangesBeginParameters) DeepCopy() *SourceIPRangesBeginParameters {
	if in == nil {
		return nil
	}
	out := new(SourceIPRangesBeginParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceIPRangesEndInitParameters) DeepCopyInto(out *SourceIPRangesEndInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceIPRangesEndInitParameters.
func (in *SourceIPRangesEndInitParameters) DeepCopy() *SourceIPRangesEndInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceIPRangesEndInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceIPRangesEndObservation) DeepCopyInto(out *SourceIPRangesEndObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceIPRangesEndObservation.
func (in *SourceIPRangesEndObservation) DeepCopy() *SourceIPRangesEndObservation {
	if in == nil {
		return nil
	}
	out := new(SourceIPRangesEndObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceIPRangesEndParameters) DeepCopyInto(out *SourceIPRangesEndParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceIPRangesEndParameters.
func (in *SourceIPRangesEndParameters) DeepCopy() *SourceIPRangesEndParameters {
	if in == nil {
		return nil
	}
	out := new(SourceIPRangesEndParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceIPRangesInitParameters) DeepCopyInto(out *SourceIPRangesInitParameters) {
	*out = *in
	if in.Begin != nil {
		in, out := &in.Begin, &out.Begin
		*out = make([]SourceIPRangesBeginInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = make([]SourceIPRangesEndInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceIPRangesInitParameters.
func (in *SourceIPRangesInitParameters) DeepCopy() *SourceIPRangesInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceIPRangesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceIPRangesObservation) DeepCopyInto(out *SourceIPRangesObservation) {
	*out = *in
	if in.Begin != nil {
		in, out := &in.Begin, &out.Begin
		*out = make([]SourceIPRangesBeginObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = make([]SourceIPRangesEndObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceIPRangesObservation.
func (in *SourceIPRangesObservation) DeepCopy() *SourceIPRangesObservation {
	if in == nil {
		return nil
	}
	out := new(SourceIPRangesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceIPRangesParameters) DeepCopyInto(out *SourceIPRangesParameters) {
	*out = *in
	if in.Begin != nil {
		in, out := &in.Begin, &out.Begin
		*out = make([]SourceIPRangesBeginParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = make([]SourceIPRangesEndParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceIPRangesParameters.
func (in *SourceIPRangesParameters) DeepCopy() *SourceIPRangesParameters {
	if in == nil {
		return nil
	}
	out := new(SourceIPRangesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpGsInfoInitParameters) DeepCopyInto(out *SpGsInfoInitParameters) {
	*out = *in
	if in.Fqdns != nil {
		in, out := &in.Fqdns, &out.Fqdns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.GsRef != nil {
		in, out := &in.GsRef, &out.GsRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpGsInfoInitParameters.
func (in *SpGsInfoInitParameters) DeepCopy() *SpGsInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpGsInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpGsInfoObservation) DeepCopyInto(out *SpGsInfoObservation) {
	*out = *in
	if in.Fqdns != nil {
		in, out := &in.Fqdns, &out.Fqdns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.GsRef != nil {
		in, out := &in.GsRef, &out.GsRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpGsInfoObservation.
func (in *SpGsInfoObservation) DeepCopy() *SpGsInfoObservation {
	if in == nil {
		return nil
	}
	out := new(SpGsInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpGsInfoParameters) DeepCopyInto(out *SpGsInfoParameters) {
	*out = *in
	if in.Fqdns != nil {
		in, out := &in.Fqdns, &out.Fqdns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.GsRef != nil {
		in, out := &in.GsRef, &out.GsRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpGsInfoParameters.
func (in *SpGsInfoParameters) DeepCopy() *SpGsInfoParameters {
	if in == nil {
		return nil
	}
	out := new(SpGsInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SrcIPIPAddrInitParameters) DeepCopyInto(out *SrcIPIPAddrInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SrcIPIPAddrInitParameters.
func (in *SrcIPIPAddrInitParameters) DeepCopy() *SrcIPIPAddrInitParameters {
	if in == nil {
		return nil
	}
	out := new(SrcIPIPAddrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SrcIPIPAddrObservation) DeepCopyInto(out *SrcIPIPAddrObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SrcIPIPAddrObservation.
func (in *SrcIPIPAddrObservation) DeepCopy() *SrcIPIPAddrObservation {
	if in == nil {
		return nil
	}
	out := new(SrcIPIPAddrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SrcIPIPAddrParameters) DeepCopyInto(out *SrcIPIPAddrParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SrcIPIPAddrParameters.
func (in *SrcIPIPAddrParameters) DeepCopy() *SrcIPIPAddrParameters {
	if in == nil {
		return nil
	}
	out := new(SrcIPIPAddrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SrcIPInitParameters) DeepCopyInto(out *SrcIPInitParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]SrcIPIPAddrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SrcIPInitParameters.
func (in *SrcIPInitParameters) DeepCopy() *SrcIPInitParameters {
	if in == nil {
		return nil
	}
	out := new(SrcIPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SrcIPObservation) DeepCopyInto(out *SrcIPObservation) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]SrcIPIPAddrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SrcIPObservation.
func (in *SrcIPObservation) DeepCopy() *SrcIPObservation {
	if in == nil {
		return nil
	}
	out := new(SrcIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SrcIPParameters) DeepCopyInto(out *SrcIPParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]SrcIPIPAddrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SrcIPParameters.
func (in *SrcIPParameters) DeepCopy() *SrcIPParameters {
	if in == nil {
		return nil
	}
	out := new(SrcIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SrcPortInitParameters) DeepCopyInto(out *SrcPortInitParameters) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SrcPortInitParameters.
func (in *SrcPortInitParameters) DeepCopy() *SrcPortInitParameters {
	if in == nil {
		return nil
	}
	out := new(SrcPortInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SrcPortObservation) DeepCopyInto(out *SrcPortObservation) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SrcPortObservation.
func (in *SrcPortObservation) DeepCopy() *SrcPortObservation {
	if in == nil {
		return nil
	}
	out := new(SrcPortObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SrcPortParameters) DeepCopyInto(out *SrcPortParameters) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SrcPortParameters.
func (in *SrcPortParameters) DeepCopy() *SrcPortParameters {
	if in == nil {
		return nil
	}
	out := new(SrcPortParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticDNSRecordsCnameInitParameters) DeepCopyInto(out *StaticDNSRecordsCnameInitParameters) {
	*out = *in
	if in.Cname != nil {
		in, out := &in.Cname, &out.Cname
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticDNSRecordsCnameInitParameters.
func (in *StaticDNSRecordsCnameInitParameters) DeepCopy() *StaticDNSRecordsCnameInitParameters {
	if in == nil {
		return nil
	}
	out := new(StaticDNSRecordsCnameInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticDNSRecordsCnameObservation) DeepCopyInto(out *StaticDNSRecordsCnameObservation) {
	*out = *in
	if in.Cname != nil {
		in, out := &in.Cname, &out.Cname
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticDNSRecordsCnameObservation.
func (in *StaticDNSRecordsCnameObservation) DeepCopy() *StaticDNSRecordsCnameObservation {
	if in == nil {
		return nil
	}
	out := new(StaticDNSRecordsCnameObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticDNSRecordsCnameParameters) DeepCopyInto(out *StaticDNSRecordsCnameParameters) {
	*out = *in
	if in.Cname != nil {
		in, out := &in.Cname, &out.Cname
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticDNSRecordsCnameParameters.
func (in *StaticDNSRecordsCnameParameters) DeepCopy() *StaticDNSRecordsCnameParameters {
	if in == nil {
		return nil
	}
	out := new(StaticDNSRecordsCnameParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticDNSRecordsInitParameters) DeepCopyInto(out *StaticDNSRecordsInitParameters) {
	*out = *in
	if in.Algorithm != nil {
		in, out := &in.Algorithm, &out.Algorithm
		*out = new(string)
		**out = **in
	}
	if in.Cname != nil {
		in, out := &in.Cname, &out.Cname
		*out = make([]StaticDNSRecordsCnameInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delegated != nil {
		in, out := &in.Delegated, &out.Delegated
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = make([]IPAddressInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ip6Address != nil {
		in, out := &in.Ip6Address, &out.Ip6Address
		*out = make([]Ip6AddressInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.MxRecords != nil {
		in, out := &in.MxRecords, &out.MxRecords
		*out = make([]MxRecordsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ns != nil {
		in, out := &in.Ns, &out.Ns
		*out = make([]NsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NumRecordsInResponse != nil {
		in, out := &in.NumRecordsInResponse, &out.NumRecordsInResponse
		*out = new(string)
		**out = **in
	}
	if in.ServiceLocator != nil {
		in, out := &in.ServiceLocator, &out.ServiceLocator
		*out = make([]ServiceLocatorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(string)
		**out = **in
	}
	if in.TxtRecords != nil {
		in, out := &in.TxtRecords, &out.TxtRecords
		*out = make([]TxtRecordsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.WildcardMatch != nil {
		in, out := &in.WildcardMatch, &out.WildcardMatch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticDNSRecordsInitParameters.
func (in *StaticDNSRecordsInitParameters) DeepCopy() *StaticDNSRecordsInitParameters {
	if in == nil {
		return nil
	}
	out := new(StaticDNSRecordsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticDNSRecordsObservation) DeepCopyInto(out *StaticDNSRecordsObservation) {
	*out = *in
	if in.Algorithm != nil {
		in, out := &in.Algorithm, &out.Algorithm
		*out = new(string)
		**out = **in
	}
	if in.Cname != nil {
		in, out := &in.Cname, &out.Cname
		*out = make([]StaticDNSRecordsCnameObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delegated != nil {
		in, out := &in.Delegated, &out.Delegated
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = make([]IPAddressObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ip6Address != nil {
		in, out := &in.Ip6Address, &out.Ip6Address
		*out = make([]Ip6AddressObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.MxRecords != nil {
		in, out := &in.MxRecords, &out.MxRecords
		*out = make([]MxRecordsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ns != nil {
		in, out := &in.Ns, &out.Ns
		*out = make([]NsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NumRecordsInResponse != nil {
		in, out := &in.NumRecordsInResponse, &out.NumRecordsInResponse
		*out = new(string)
		**out = **in
	}
	if in.ServiceLocator != nil {
		in, out := &in.ServiceLocator, &out.ServiceLocator
		*out = make([]ServiceLocatorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(string)
		**out = **in
	}
	if in.TxtRecords != nil {
		in, out := &in.TxtRecords, &out.TxtRecords
		*out = make([]TxtRecordsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.WildcardMatch != nil {
		in, out := &in.WildcardMatch, &out.WildcardMatch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticDNSRecordsObservation.
func (in *StaticDNSRecordsObservation) DeepCopy() *StaticDNSRecordsObservation {
	if in == nil {
		return nil
	}
	out := new(StaticDNSRecordsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticDNSRecordsParameters) DeepCopyInto(out *StaticDNSRecordsParameters) {
	*out = *in
	if in.Algorithm != nil {
		in, out := &in.Algorithm, &out.Algorithm
		*out = new(string)
		**out = **in
	}
	if in.Cname != nil {
		in, out := &in.Cname, &out.Cname
		*out = make([]StaticDNSRecordsCnameParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delegated != nil {
		in, out := &in.Delegated, &out.Delegated
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = make([]IPAddressParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ip6Address != nil {
		in, out := &in.Ip6Address, &out.Ip6Address
		*out = make([]Ip6AddressParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.MxRecords != nil {
		in, out := &in.MxRecords, &out.MxRecords
		*out = make([]MxRecordsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ns != nil {
		in, out := &in.Ns, &out.Ns
		*out = make([]NsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NumRecordsInResponse != nil {
		in, out := &in.NumRecordsInResponse, &out.NumRecordsInResponse
		*out = new(string)
		**out = **in
	}
	if in.ServiceLocator != nil {
		in, out := &in.ServiceLocator, &out.ServiceLocator
		*out = make([]ServiceLocatorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(string)
		**out = **in
	}
	if in.TxtRecords != nil {
		in, out := &in.TxtRecords, &out.TxtRecords
		*out = make([]TxtRecordsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.WildcardMatch != nil {
		in, out := &in.WildcardMatch, &out.WildcardMatch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticDNSRecordsParameters.
func (in *StaticDNSRecordsParameters) DeepCopy() *StaticDNSRecordsParameters {
	if in == nil {
		return nil
	}
	out := new(StaticDNSRecordsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subnet6IPAddrInitParameters) DeepCopyInto(out *Subnet6IPAddrInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subnet6IPAddrInitParameters.
func (in *Subnet6IPAddrInitParameters) DeepCopy() *Subnet6IPAddrInitParameters {
	if in == nil {
		return nil
	}
	out := new(Subnet6IPAddrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subnet6IPAddrObservation) DeepCopyInto(out *Subnet6IPAddrObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subnet6IPAddrObservation.
func (in *Subnet6IPAddrObservation) DeepCopy() *Subnet6IPAddrObservation {
	if in == nil {
		return nil
	}
	out := new(Subnet6IPAddrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subnet6IPAddrParameters) DeepCopyInto(out *Subnet6IPAddrParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subnet6IPAddrParameters.
func (in *Subnet6IPAddrParameters) DeepCopy() *Subnet6IPAddrParameters {
	if in == nil {
		return nil
	}
	out := new(Subnet6IPAddrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subnet6InitParameters) DeepCopyInto(out *Subnet6InitParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]Subnet6IPAddrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subnet6InitParameters.
func (in *Subnet6InitParameters) DeepCopy() *Subnet6InitParameters {
	if in == nil {
		return nil
	}
	out := new(Subnet6InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subnet6Observation) DeepCopyInto(out *Subnet6Observation) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]Subnet6IPAddrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subnet6Observation.
func (in *Subnet6Observation) DeepCopy() *Subnet6Observation {
	if in == nil {
		return nil
	}
	out := new(Subnet6Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subnet6Parameters) DeepCopyInto(out *Subnet6Parameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]Subnet6IPAddrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subnet6Parameters.
func (in *Subnet6Parameters) DeepCopy() *Subnet6Parameters {
	if in == nil {
		return nil
	}
	out := new(Subnet6Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetIPAddrInitParameters) DeepCopyInto(out *SubnetIPAddrInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetIPAddrInitParameters.
func (in *SubnetIPAddrInitParameters) DeepCopy() *SubnetIPAddrInitParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetIPAddrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetIPAddrObservation) DeepCopyInto(out *SubnetIPAddrObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetIPAddrObservation.
func (in *SubnetIPAddrObservation) DeepCopy() *SubnetIPAddrObservation {
	if in == nil {
		return nil
	}
	out := new(SubnetIPAddrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetIPAddrParameters) DeepCopyInto(out *SubnetIPAddrParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetIPAddrParameters.
func (in *SubnetIPAddrParameters) DeepCopy() *SubnetIPAddrParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetIPAddrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetInitParameters) DeepCopyInto(out *SubnetInitParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]SubnetIPAddrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetInitParameters.
func (in *SubnetInitParameters) DeepCopy() *SubnetInitParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetObservation) DeepCopyInto(out *SubnetObservation) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]SubnetIPAddrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetObservation.
func (in *SubnetObservation) DeepCopy() *SubnetObservation {
	if in == nil {
		return nil
	}
	out := new(SubnetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetParameters) DeepCopyInto(out *SubnetParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]SubnetIPAddrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetParameters.
func (in *SubnetParameters) DeepCopy() *SubnetParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SvrRespCodeInitParameters) DeepCopyInto(out *SvrRespCodeInitParameters) {
	*out = *in
	if in.Codes != nil {
		in, out := &in.Codes, &out.Codes
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]SvrRespCodeRangesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RespCodeBlock != nil {
		in, out := &in.RespCodeBlock, &out.RespCodeBlock
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SvrRespCodeInitParameters.
func (in *SvrRespCodeInitParameters) DeepCopy() *SvrRespCodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(SvrRespCodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SvrRespCodeObservation) DeepCopyInto(out *SvrRespCodeObservation) {
	*out = *in
	if in.Codes != nil {
		in, out := &in.Codes, &out.Codes
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]SvrRespCodeRangesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RespCodeBlock != nil {
		in, out := &in.RespCodeBlock, &out.RespCodeBlock
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SvrRespCodeObservation.
func (in *SvrRespCodeObservation) DeepCopy() *SvrRespCodeObservation {
	if in == nil {
		return nil
	}
	out := new(SvrRespCodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SvrRespCodeParameters) DeepCopyInto(out *SvrRespCodeParameters) {
	*out = *in
	if in.Codes != nil {
		in, out := &in.Codes, &out.Codes
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]SvrRespCodeRangesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RespCodeBlock != nil {
		in, out := &in.RespCodeBlock, &out.RespCodeBlock
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SvrRespCodeParameters.
func (in *SvrRespCodeParameters) DeepCopy() *SvrRespCodeParameters {
	if in == nil {
		return nil
	}
	out := new(SvrRespCodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SvrRespCodeRangesInitParameters) DeepCopyInto(out *SvrRespCodeRangesInitParameters) {
	*out = *in
	if in.Begin != nil {
		in, out := &in.Begin, &out.Begin
		*out = new(string)
		**out = **in
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SvrRespCodeRangesInitParameters.
func (in *SvrRespCodeRangesInitParameters) DeepCopy() *SvrRespCodeRangesInitParameters {
	if in == nil {
		return nil
	}
	out := new(SvrRespCodeRangesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SvrRespCodeRangesObservation) DeepCopyInto(out *SvrRespCodeRangesObservation) {
	*out = *in
	if in.Begin != nil {
		in, out := &in.Begin, &out.Begin
		*out = new(string)
		**out = **in
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SvrRespCodeRangesObservation.
func (in *SvrRespCodeRangesObservation) DeepCopy() *SvrRespCodeRangesObservation {
	if in == nil {
		return nil
	}
	out := new(SvrRespCodeRangesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SvrRespCodeRangesParameters) DeepCopyInto(out *SvrRespCodeRangesParameters) {
	*out = *in
	if in.Begin != nil {
		in, out := &in.Begin, &out.Begin
		*out = new(string)
		**out = **in
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SvrRespCodeRangesParameters.
func (in *SvrRespCodeRangesParameters) DeepCopy() *SvrRespCodeRangesParameters {
	if in == nil {
		return nil
	}
	out := new(SvrRespCodeRangesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSFingerprintMatchInitParameters) DeepCopyInto(out *TLSFingerprintMatchInitParameters) {
	*out = *in
	if in.Fingerprints != nil {
		in, out := &in.Fingerprints, &out.Fingerprints
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MatchOperation != nil {
		in, out := &in.MatchOperation, &out.MatchOperation
		*out = new(string)
		**out = **in
	}
	if in.StringGroupRefs != nil {
		in, out := &in.StringGroupRefs, &out.StringGroupRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSFingerprintMatchInitParameters.
func (in *TLSFingerprintMatchInitParameters) DeepCopy() *TLSFingerprintMatchInitParameters {
	if in == nil {
		return nil
	}
	out := new(TLSFingerprintMatchInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSFingerprintMatchObservation) DeepCopyInto(out *TLSFingerprintMatchObservation) {
	*out = *in
	if in.Fingerprints != nil {
		in, out := &in.Fingerprints, &out.Fingerprints
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MatchOperation != nil {
		in, out := &in.MatchOperation, &out.MatchOperation
		*out = new(string)
		**out = **in
	}
	if in.StringGroupRefs != nil {
		in, out := &in.StringGroupRefs, &out.StringGroupRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSFingerprintMatchObservation.
func (in *TLSFingerprintMatchObservation) DeepCopy() *TLSFingerprintMatchObservation {
	if in == nil {
		return nil
	}
	out := new(TLSFingerprintMatchObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSFingerprintMatchParameters) DeepCopyInto(out *TLSFingerprintMatchParameters) {
	*out = *in
	if in.Fingerprints != nil {
		in, out := &in.Fingerprints, &out.Fingerprints
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MatchOperation != nil {
		in, out := &in.MatchOperation, &out.MatchOperation
		*out = new(string)
		**out = **in
	}
	if in.StringGroupRefs != nil {
		in, out := &in.StringGroupRefs, &out.StringGroupRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSFingerprintMatchParameters.
func (in *TLSFingerprintMatchParameters) DeepCopy() *TLSFingerprintMatchParameters {
	if in == nil {
		return nil
	}
	out := new(TLSFingerprintMatchParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThirdPartySitesHmProxiesInitParameters) DeepCopyInto(out *ThirdPartySitesHmProxiesInitParameters) {
	*out = *in
	if in.ProxyType != nil {
		in, out := &in.ProxyType, &out.ProxyType
		*out = new(string)
		**out = **in
	}
	if in.SiteUUID != nil {
		in, out := &in.SiteUUID, &out.SiteUUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThirdPartySitesHmProxiesInitParameters.
func (in *ThirdPartySitesHmProxiesInitParameters) DeepCopy() *ThirdPartySitesHmProxiesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ThirdPartySitesHmProxiesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThirdPartySitesHmProxiesObservation) DeepCopyInto(out *ThirdPartySitesHmProxiesObservation) {
	*out = *in
	if in.ProxyType != nil {
		in, out := &in.ProxyType, &out.ProxyType
		*out = new(string)
		**out = **in
	}
	if in.SiteUUID != nil {
		in, out := &in.SiteUUID, &out.SiteUUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThirdPartySitesHmProxiesObservation.
func (in *ThirdPartySitesHmProxiesObservation) DeepCopy() *ThirdPartySitesHmProxiesObservation {
	if in == nil {
		return nil
	}
	out := new(ThirdPartySitesHmProxiesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThirdPartySitesHmProxiesParameters) DeepCopyInto(out *ThirdPartySitesHmProxiesParameters) {
	*out = *in
	if in.ProxyType != nil {
		in, out := &in.ProxyType, &out.ProxyType
		*out = new(string)
		**out = **in
	}
	if in.SiteUUID != nil {
		in, out := &in.SiteUUID, &out.SiteUUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThirdPartySitesHmProxiesParameters.
func (in *ThirdPartySitesHmProxiesParameters) DeepCopy() *ThirdPartySitesHmProxiesParameters {
	if in == nil {
		return nil
	}
	out := new(ThirdPartySitesHmProxiesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThirdPartySitesInitParameters) DeepCopyInto(out *ThirdPartySitesInitParameters) {
	*out = *in
	if in.ClusterUUID != nil {
		in, out := &in.ClusterUUID, &out.ClusterUUID
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.HmProxies != nil {
		in, out := &in.HmProxies, &out.HmProxies
		*out = make([]ThirdPartySitesHmProxiesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = make([]ThirdPartySitesLocationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Ratio != nil {
		in, out := &in.Ratio, &out.Ratio
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThirdPartySitesInitParameters.
func (in *ThirdPartySitesInitParameters) DeepCopy() *ThirdPartySitesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ThirdPartySitesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThirdPartySitesLocationInitParameters) DeepCopyInto(out *ThirdPartySitesLocationInitParameters) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = make([]ThirdPartySitesLocationLocationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThirdPartySitesLocationInitParameters.
func (in *ThirdPartySitesLocationInitParameters) DeepCopy() *ThirdPartySitesLocationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ThirdPartySitesLocationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThirdPartySitesLocationLocationInitParameters) DeepCopyInto(out *ThirdPartySitesLocationLocationInitParameters) {
	*out = *in
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(string)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThirdPartySitesLocationLocationInitParameters.
func (in *ThirdPartySitesLocationLocationInitParameters) DeepCopy() *ThirdPartySitesLocationLocationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ThirdPartySitesLocationLocationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThirdPartySitesLocationLocationObservation) DeepCopyInto(out *ThirdPartySitesLocationLocationObservation) {
	*out = *in
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(string)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThirdPartySitesLocationLocationObservation.
func (in *ThirdPartySitesLocationLocationObservation) DeepCopy() *ThirdPartySitesLocationLocationObservation {
	if in == nil {
		return nil
	}
	out := new(ThirdPartySitesLocationLocationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThirdPartySitesLocationLocationParameters) DeepCopyInto(out *ThirdPartySitesLocationLocationParameters) {
	*out = *in
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(string)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThirdPartySitesLocationLocationParameters.
func (in *ThirdPartySitesLocationLocationParameters) DeepCopy() *ThirdPartySitesLocationLocationParameters {
	if in == nil {
		return nil
	}
	out := new(ThirdPartySitesLocationLocationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThirdPartySitesLocationObservation) DeepCopyInto(out *ThirdPartySitesLocationObservation) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = make([]ThirdPartySitesLocationLocationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThirdPartySitesLocationObservation.
func (in *ThirdPartySitesLocationObservation) DeepCopy() *ThirdPartySitesLocationObservation {
	if in == nil {
		return nil
	}
	out := new(ThirdPartySitesLocationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThirdPartySitesLocationParameters) DeepCopyInto(out *ThirdPartySitesLocationParameters) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = make([]ThirdPartySitesLocationLocationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThirdPartySitesLocationParameters.
func (in *ThirdPartySitesLocationParameters) DeepCopy() *ThirdPartySitesLocationParameters {
	if in == nil {
		return nil
	}
	out := new(ThirdPartySitesLocationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThirdPartySitesObservation) DeepCopyInto(out *ThirdPartySitesObservation) {
	*out = *in
	if in.ClusterUUID != nil {
		in, out := &in.ClusterUUID, &out.ClusterUUID
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.HmProxies != nil {
		in, out := &in.HmProxies, &out.HmProxies
		*out = make([]ThirdPartySitesHmProxiesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = make([]ThirdPartySitesLocationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Ratio != nil {
		in, out := &in.Ratio, &out.Ratio
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThirdPartySitesObservation.
func (in *ThirdPartySitesObservation) DeepCopy() *ThirdPartySitesObservation {
	if in == nil {
		return nil
	}
	out := new(ThirdPartySitesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThirdPartySitesParameters) DeepCopyInto(out *ThirdPartySitesParameters) {
	*out = *in
	if in.ClusterUUID != nil {
		in, out := &in.ClusterUUID, &out.ClusterUUID
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.HmProxies != nil {
		in, out := &in.HmProxies, &out.HmProxies
		*out = make([]ThirdPartySitesHmProxiesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = make([]ThirdPartySitesLocationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Ratio != nil {
		in, out := &in.Ratio, &out.Ratio
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThirdPartySitesParameters.
func (in *ThirdPartySitesParameters) DeepCopy() *ThirdPartySitesParameters {
	if in == nil {
		return nil
	}
	out := new(ThirdPartySitesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThreshInfoInitParameters) DeepCopyInto(out *ThreshInfoInitParameters) {
	*out = *in
	if in.Attack != nil {
		in, out := &in.Attack, &out.Attack
		*out = new(string)
		**out = **in
	}
	if in.MaxValue != nil {
		in, out := &in.MaxValue, &out.MaxValue
		*out = new(string)
		**out = **in
	}
	if in.MinValue != nil {
		in, out := &in.MinValue, &out.MinValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThreshInfoInitParameters.
func (in *ThreshInfoInitParameters) DeepCopy() *ThreshInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(ThreshInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThreshInfoObservation) DeepCopyInto(out *ThreshInfoObservation) {
	*out = *in
	if in.Attack != nil {
		in, out := &in.Attack, &out.Attack
		*out = new(string)
		**out = **in
	}
	if in.MaxValue != nil {
		in, out := &in.MaxValue, &out.MaxValue
		*out = new(string)
		**out = **in
	}
	if in.MinValue != nil {
		in, out := &in.MinValue, &out.MinValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThreshInfoObservation.
func (in *ThreshInfoObservation) DeepCopy() *ThreshInfoObservation {
	if in == nil {
		return nil
	}
	out := new(ThreshInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThreshInfoParameters) DeepCopyInto(out *ThreshInfoParameters) {
	*out = *in
	if in.Attack != nil {
		in, out := &in.Attack, &out.Attack
		*out = new(string)
		**out = **in
	}
	if in.MaxValue != nil {
		in, out := &in.MaxValue, &out.MaxValue
		*out = new(string)
		**out = **in
	}
	if in.MinValue != nil {
		in, out := &in.MinValue, &out.MinValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThreshInfoParameters.
func (in *ThreshInfoParameters) DeepCopy() *ThreshInfoParameters {
	if in == nil {
		return nil
	}
	out := new(ThreshInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokensInitParameters) DeepCopyInto(out *TokensInitParameters) {
	*out = *in
	if in.EndIndex != nil {
		in, out := &in.EndIndex, &out.EndIndex
		*out = new(string)
		**out = **in
	}
	if in.StartIndex != nil {
		in, out := &in.StartIndex, &out.StartIndex
		*out = new(string)
		**out = **in
	}
	if in.StrValue != nil {
		in, out := &in.StrValue, &out.StrValue
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokensInitParameters.
func (in *TokensInitParameters) DeepCopy() *TokensInitParameters {
	if in == nil {
		return nil
	}
	out := new(TokensInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokensObservation) DeepCopyInto(out *TokensObservation) {
	*out = *in
	if in.EndIndex != nil {
		in, out := &in.EndIndex, &out.EndIndex
		*out = new(string)
		**out = **in
	}
	if in.StartIndex != nil {
		in, out := &in.StartIndex, &out.StartIndex
		*out = new(string)
		**out = **in
	}
	if in.StrValue != nil {
		in, out := &in.StrValue, &out.StrValue
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokensObservation.
func (in *TokensObservation) DeepCopy() *TokensObservation {
	if in == nil {
		return nil
	}
	out := new(TokensObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokensParameters) DeepCopyInto(out *TokensParameters) {
	*out = *in
	if in.EndIndex != nil {
		in, out := &in.EndIndex, &out.EndIndex
		*out = new(string)
		**out = **in
	}
	if in.StartIndex != nil {
		in, out := &in.StartIndex, &out.StartIndex
		*out = new(string)
		**out = **in
	}
	if in.StrValue != nil {
		in, out := &in.StrValue, &out.StrValue
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokensParameters.
func (in *TokensParameters) DeepCopy() *TokensParameters {
	if in == nil {
		return nil
	}
	out := new(TokensParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyPoliciesInitParameters) DeepCopyInto(out *TopologyPoliciesInitParameters) {
	*out = *in
	if in.DNSPolicyRef != nil {
		in, out := &in.DNSPolicyRef, &out.DNSPolicyRef
		*out = new(string)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyPoliciesInitParameters.
func (in *TopologyPoliciesInitParameters) DeepCopy() *TopologyPoliciesInitParameters {
	if in == nil {
		return nil
	}
	out := new(TopologyPoliciesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyPoliciesObservation) DeepCopyInto(out *TopologyPoliciesObservation) {
	*out = *in
	if in.DNSPolicyRef != nil {
		in, out := &in.DNSPolicyRef, &out.DNSPolicyRef
		*out = new(string)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyPoliciesObservation.
func (in *TopologyPoliciesObservation) DeepCopy() *TopologyPoliciesObservation {
	if in == nil {
		return nil
	}
	out := new(TopologyPoliciesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopologyPoliciesParameters) DeepCopyInto(out *TopologyPoliciesParameters) {
	*out = *in
	if in.DNSPolicyRef != nil {
		in, out := &in.DNSPolicyRef, &out.DNSPolicyRef
		*out = new(string)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopologyPoliciesParameters.
func (in *TopologyPoliciesParameters) DeepCopy() *TopologyPoliciesParameters {
	if in == nil {
		return nil
	}
	out := new(TopologyPoliciesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TxtRecordsInitParameters) DeepCopyInto(out *TxtRecordsInitParameters) {
	*out = *in
	if in.TextStr != nil {
		in, out := &in.TextStr, &out.TextStr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TxtRecordsInitParameters.
func (in *TxtRecordsInitParameters) DeepCopy() *TxtRecordsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TxtRecordsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TxtRecordsObservation) DeepCopyInto(out *TxtRecordsObservation) {
	*out = *in
	if in.TextStr != nil {
		in, out := &in.TextStr, &out.TextStr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TxtRecordsObservation.
func (in *TxtRecordsObservation) DeepCopy() *TxtRecordsObservation {
	if in == nil {
		return nil
	}
	out := new(TxtRecordsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TxtRecordsParameters) DeepCopyInto(out *TxtRecordsParameters) {
	*out = *in
	if in.TextStr != nil {
		in, out := &in.TextStr, &out.TextStr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TxtRecordsParameters.
func (in *TxtRecordsParameters) DeepCopy() *TxtRecordsParameters {
	if in == nil {
		return nil
	}
	out := new(TxtRecordsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URIInitParameters) DeepCopyInto(out *URIInitParameters) {
	*out = *in
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.MatchStr != nil {
		in, out := &in.MatchStr, &out.MatchStr
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StringGroupRefs != nil {
		in, out := &in.StringGroupRefs, &out.StringGroupRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URIInitParameters.
func (in *URIInitParameters) DeepCopy() *URIInitParameters {
	if in == nil {
		return nil
	}
	out := new(URIInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URIObservation) DeepCopyInto(out *URIObservation) {
	*out = *in
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.MatchStr != nil {
		in, out := &in.MatchStr, &out.MatchStr
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StringGroupRefs != nil {
		in, out := &in.StringGroupRefs, &out.StringGroupRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URIObservation.
func (in *URIObservation) DeepCopy() *URIObservation {
	if in == nil {
		return nil
	}
	out := new(URIObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URIParameters) DeepCopyInto(out *URIParameters) {
	*out = *in
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.MatchStr != nil {
		in, out := &in.MatchStr, &out.MatchStr
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StringGroupRefs != nil {
		in, out := &in.StringGroupRefs, &out.StringGroupRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URIParameters.
func (in *URIParameters) DeepCopy() *URIParameters {
	if in == nil {
		return nil
	}
	out := new(URIParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserAgentCacheConfigInitParameters) DeepCopyInto(out *UserAgentCacheConfigInitParameters) {
	*out = *in
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(string)
		**out = **in
	}
	if in.ControllerCacheSize != nil {
		in, out := &in.ControllerCacheSize, &out.ControllerCacheSize
		*out = new(string)
		**out = **in
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(string)
		**out = **in
	}
	if in.MaxLastHitTime != nil {
		in, out := &in.MaxLastHitTime, &out.MaxLastHitTime
		*out = new(string)
		**out = **in
	}
	if in.MaxUpstreamQueries != nil {
		in, out := &in.MaxUpstreamQueries, &out.MaxUpstreamQueries
		*out = new(string)
		**out = **in
	}
	if in.MaxWaitTime != nil {
		in, out := &in.MaxWaitTime, &out.MaxWaitTime
		*out = new(string)
		**out = **in
	}
	if in.NumEntriesUpstreamUpdate != nil {
		in, out := &in.NumEntriesUpstreamUpdate, &out.NumEntriesUpstreamUpdate
		*out = new(string)
		**out = **in
	}
	if in.PercentReservedForBadBots != nil {
		in, out := &in.PercentReservedForBadBots, &out.PercentReservedForBadBots
		*out = new(string)
		**out = **in
	}
	if in.PercentReservedForBrowsers != nil {
		in, out := &in.PercentReservedForBrowsers, &out.PercentReservedForBrowsers
		*out = new(string)
		**out = **in
	}
	if in.PercentReservedForGoodBots != nil {
		in, out := &in.PercentReservedForGoodBots, &out.PercentReservedForGoodBots
		*out = new(string)
		**out = **in
	}
	if in.PercentReservedForOutstanding != nil {
		in, out := &in.PercentReservedForOutstanding, &out.PercentReservedForOutstanding
		*out = new(string)
		**out = **in
	}
	if in.SeCacheSize != nil {
		in, out := &in.SeCacheSize, &out.SeCacheSize
		*out = new(string)
		**out = **in
	}
	if in.UpstreamUpdateInterval != nil {
		in, out := &in.UpstreamUpdateInterval, &out.UpstreamUpdateInterval
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserAgentCacheConfigInitParameters.
func (in *UserAgentCacheConfigInitParameters) DeepCopy() *UserAgentCacheConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(UserAgentCacheConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserAgentCacheConfigObservation) DeepCopyInto(out *UserAgentCacheConfigObservation) {
	*out = *in
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(string)
		**out = **in
	}
	if in.ControllerCacheSize != nil {
		in, out := &in.ControllerCacheSize, &out.ControllerCacheSize
		*out = new(string)
		**out = **in
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(string)
		**out = **in
	}
	if in.MaxLastHitTime != nil {
		in, out := &in.MaxLastHitTime, &out.MaxLastHitTime
		*out = new(string)
		**out = **in
	}
	if in.MaxUpstreamQueries != nil {
		in, out := &in.MaxUpstreamQueries, &out.MaxUpstreamQueries
		*out = new(string)
		**out = **in
	}
	if in.MaxWaitTime != nil {
		in, out := &in.MaxWaitTime, &out.MaxWaitTime
		*out = new(string)
		**out = **in
	}
	if in.NumEntriesUpstreamUpdate != nil {
		in, out := &in.NumEntriesUpstreamUpdate, &out.NumEntriesUpstreamUpdate
		*out = new(string)
		**out = **in
	}
	if in.PercentReservedForBadBots != nil {
		in, out := &in.PercentReservedForBadBots, &out.PercentReservedForBadBots
		*out = new(string)
		**out = **in
	}
	if in.PercentReservedForBrowsers != nil {
		in, out := &in.PercentReservedForBrowsers, &out.PercentReservedForBrowsers
		*out = new(string)
		**out = **in
	}
	if in.PercentReservedForGoodBots != nil {
		in, out := &in.PercentReservedForGoodBots, &out.PercentReservedForGoodBots
		*out = new(string)
		**out = **in
	}
	if in.PercentReservedForOutstanding != nil {
		in, out := &in.PercentReservedForOutstanding, &out.PercentReservedForOutstanding
		*out = new(string)
		**out = **in
	}
	if in.SeCacheSize != nil {
		in, out := &in.SeCacheSize, &out.SeCacheSize
		*out = new(string)
		**out = **in
	}
	if in.UpstreamUpdateInterval != nil {
		in, out := &in.UpstreamUpdateInterval, &out.UpstreamUpdateInterval
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserAgentCacheConfigObservation.
func (in *UserAgentCacheConfigObservation) DeepCopy() *UserAgentCacheConfigObservation {
	if in == nil {
		return nil
	}
	out := new(UserAgentCacheConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserAgentCacheConfigParameters) DeepCopyInto(out *UserAgentCacheConfigParameters) {
	*out = *in
	if in.BatchSize != nil {
		in, out := &in.BatchSize, &out.BatchSize
		*out = new(string)
		**out = **in
	}
	if in.ControllerCacheSize != nil {
		in, out := &in.ControllerCacheSize, &out.ControllerCacheSize
		*out = new(string)
		**out = **in
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(string)
		**out = **in
	}
	if in.MaxLastHitTime != nil {
		in, out := &in.MaxLastHitTime, &out.MaxLastHitTime
		*out = new(string)
		**out = **in
	}
	if in.MaxUpstreamQueries != nil {
		in, out := &in.MaxUpstreamQueries, &out.MaxUpstreamQueries
		*out = new(string)
		**out = **in
	}
	if in.MaxWaitTime != nil {
		in, out := &in.MaxWaitTime, &out.MaxWaitTime
		*out = new(string)
		**out = **in
	}
	if in.NumEntriesUpstreamUpdate != nil {
		in, out := &in.NumEntriesUpstreamUpdate, &out.NumEntriesUpstreamUpdate
		*out = new(string)
		**out = **in
	}
	if in.PercentReservedForBadBots != nil {
		in, out := &in.PercentReservedForBadBots, &out.PercentReservedForBadBots
		*out = new(string)
		**out = **in
	}
	if in.PercentReservedForBrowsers != nil {
		in, out := &in.PercentReservedForBrowsers, &out.PercentReservedForBrowsers
		*out = new(string)
		**out = **in
	}
	if in.PercentReservedForGoodBots != nil {
		in, out := &in.PercentReservedForGoodBots, &out.PercentReservedForGoodBots
		*out = new(string)
		**out = **in
	}
	if in.PercentReservedForOutstanding != nil {
		in, out := &in.PercentReservedForOutstanding, &out.PercentReservedForOutstanding
		*out = new(string)
		**out = **in
	}
	if in.SeCacheSize != nil {
		in, out := &in.SeCacheSize, &out.SeCacheSize
		*out = new(string)
		**out = **in
	}
	if in.UpstreamUpdateInterval != nil {
		in, out := &in.UpstreamUpdateInterval, &out.UpstreamUpdateInterval
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserAgentCacheConfigParameters.
func (in *UserAgentCacheConfigParameters) DeepCopy() *UserAgentCacheConfigParameters {
	if in == nil {
		return nil
	}
	out := new(UserAgentCacheConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VcenterClustersInitParameters) DeepCopyInto(out *VcenterClustersInitParameters) {
	*out = *in
	if in.ClusterRefs != nil {
		in, out := &in.ClusterRefs, &out.ClusterRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VcenterClustersInitParameters.
func (in *VcenterClustersInitParameters) DeepCopy() *VcenterClustersInitParameters {
	if in == nil {
		return nil
	}
	out := new(VcenterClustersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VcenterClustersObservation) DeepCopyInto(out *VcenterClustersObservation) {
	*out = *in
	if in.ClusterRefs != nil {
		in, out := &in.ClusterRefs, &out.ClusterRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VcenterClustersObservation.
func (in *VcenterClustersObservation) DeepCopy() *VcenterClustersObservation {
	if in == nil {
		return nil
	}
	out := new(VcenterClustersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VcenterClustersParameters) DeepCopyInto(out *VcenterClustersParameters) {
	*out = *in
	if in.ClusterRefs != nil {
		in, out := &in.ClusterRefs, &out.ClusterRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VcenterClustersParameters.
func (in *VcenterClustersParameters) DeepCopy() *VcenterClustersParameters {
	if in == nil {
		return nil
	}
	out := new(VcenterClustersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VcenterDatastoresInitParameters) DeepCopyInto(out *VcenterDatastoresInitParameters) {
	*out = *in
	if in.DatastoreName != nil {
		in, out := &in.DatastoreName, &out.DatastoreName
		*out = new(string)
		**out = **in
	}
	if in.ManagedObjectID != nil {
		in, out := &in.ManagedObjectID, &out.ManagedObjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VcenterDatastoresInitParameters.
func (in *VcenterDatastoresInitParameters) DeepCopy() *VcenterDatastoresInitParameters {
	if in == nil {
		return nil
	}
	out := new(VcenterDatastoresInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VcenterDatastoresObservation) DeepCopyInto(out *VcenterDatastoresObservation) {
	*out = *in
	if in.DatastoreName != nil {
		in, out := &in.DatastoreName, &out.DatastoreName
		*out = new(string)
		**out = **in
	}
	if in.ManagedObjectID != nil {
		in, out := &in.ManagedObjectID, &out.ManagedObjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VcenterDatastoresObservation.
func (in *VcenterDatastoresObservation) DeepCopy() *VcenterDatastoresObservation {
	if in == nil {
		return nil
	}
	out := new(VcenterDatastoresObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VcenterDatastoresParameters) DeepCopyInto(out *VcenterDatastoresParameters) {
	*out = *in
	if in.DatastoreName != nil {
		in, out := &in.DatastoreName, &out.DatastoreName
		*out = new(string)
		**out = **in
	}
	if in.ManagedObjectID != nil {
		in, out := &in.ManagedObjectID, &out.ManagedObjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VcenterDatastoresParameters.
func (in *VcenterDatastoresParameters) DeepCopy() *VcenterDatastoresParameters {
	if in == nil {
		return nil
	}
	out := new(VcenterDatastoresParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VcenterHostsInitParameters) DeepCopyInto(out *VcenterHostsInitParameters) {
	*out = *in
	if in.HostRefs != nil {
		in, out := &in.HostRefs, &out.HostRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VcenterHostsInitParameters.
func (in *VcenterHostsInitParameters) DeepCopy() *VcenterHostsInitParameters {
	if in == nil {
		return nil
	}
	out := new(VcenterHostsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VcenterHostsObservation) DeepCopyInto(out *VcenterHostsObservation) {
	*out = *in
	if in.HostRefs != nil {
		in, out := &in.HostRefs, &out.HostRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VcenterHostsObservation.
func (in *VcenterHostsObservation) DeepCopy() *VcenterHostsObservation {
	if in == nil {
		return nil
	}
	out := new(VcenterHostsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VcenterHostsParameters) DeepCopyInto(out *VcenterHostsParameters) {
	*out = *in
	if in.HostRefs != nil {
		in, out := &in.HostRefs, &out.HostRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VcenterHostsParameters.
func (in *VcenterHostsParameters) DeepCopy() *VcenterHostsParameters {
	if in == nil {
		return nil
	}
	out := new(VcenterHostsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VcentersInitParameters) DeepCopyInto(out *VcentersInitParameters) {
	*out = *in
	if in.Clusters != nil {
		in, out := &in.Clusters, &out.Clusters
		*out = make([]ClustersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsxtClusters != nil {
		in, out := &in.NsxtClusters, &out.NsxtClusters
		*out = make([]NsxtClustersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsxtDatastores != nil {
		in, out := &in.NsxtDatastores, &out.NsxtDatastores
		*out = make([]NsxtDatastoresInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsxtHosts != nil {
		in, out := &in.NsxtHosts, &out.NsxtHosts
		*out = make([]NsxtHostsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcenterFolder != nil {
		in, out := &in.VcenterFolder, &out.VcenterFolder
		*out = new(string)
		**out = **in
	}
	if in.VcenterRef != nil {
		in, out := &in.VcenterRef, &out.VcenterRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VcentersInitParameters.
func (in *VcentersInitParameters) DeepCopy() *VcentersInitParameters {
	if in == nil {
		return nil
	}
	out := new(VcentersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VcentersObservation) DeepCopyInto(out *VcentersObservation) {
	*out = *in
	if in.Clusters != nil {
		in, out := &in.Clusters, &out.Clusters
		*out = make([]ClustersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsxtClusters != nil {
		in, out := &in.NsxtClusters, &out.NsxtClusters
		*out = make([]NsxtClustersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsxtDatastores != nil {
		in, out := &in.NsxtDatastores, &out.NsxtDatastores
		*out = make([]NsxtDatastoresObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsxtHosts != nil {
		in, out := &in.NsxtHosts, &out.NsxtHosts
		*out = make([]NsxtHostsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcenterFolder != nil {
		in, out := &in.VcenterFolder, &out.VcenterFolder
		*out = new(string)
		**out = **in
	}
	if in.VcenterRef != nil {
		in, out := &in.VcenterRef, &out.VcenterRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VcentersObservation.
func (in *VcentersObservation) DeepCopy() *VcentersObservation {
	if in == nil {
		return nil
	}
	out := new(VcentersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VcentersParameters) DeepCopyInto(out *VcentersParameters) {
	*out = *in
	if in.Clusters != nil {
		in, out := &in.Clusters, &out.Clusters
		*out = make([]ClustersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsxtClusters != nil {
		in, out := &in.NsxtClusters, &out.NsxtClusters
		*out = make([]NsxtClustersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsxtDatastores != nil {
		in, out := &in.NsxtDatastores, &out.NsxtDatastores
		*out = make([]NsxtDatastoresParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsxtHosts != nil {
		in, out := &in.NsxtHosts, &out.NsxtHosts
		*out = make([]NsxtHostsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcenterFolder != nil {
		in, out := &in.VcenterFolder, &out.VcenterFolder
		*out = new(string)
		**out = **in
	}
	if in.VcenterRef != nil {
		in, out := &in.VcenterRef, &out.VcenterRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VcentersParameters.
func (in *VcentersParameters) DeepCopy() *VcentersParameters {
	if in == nil {
		return nil
	}
	out := new(VcentersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VersionInitParameters) DeepCopyInto(out *VersionInitParameters) {
	*out = *in
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Versions != nil {
		in, out := &in.Versions, &out.Versions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VersionInitParameters.
func (in *VersionInitParameters) DeepCopy() *VersionInitParameters {
	if in == nil {
		return nil
	}
	out := new(VersionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VersionObservation) DeepCopyInto(out *VersionObservation) {
	*out = *in
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Versions != nil {
		in, out := &in.Versions, &out.Versions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VersionObservation.
func (in *VersionObservation) DeepCopy() *VersionObservation {
	if in == nil {
		return nil
	}
	out := new(VersionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VersionParameters) DeepCopyInto(out *VersionParameters) {
	*out = *in
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Versions != nil {
		in, out := &in.Versions, &out.Versions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VersionParameters.
func (in *VersionParameters) DeepCopy() *VersionParameters {
	if in == nil {
		return nil
	}
	out := new(VersionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VhMatchesInitParameters) DeepCopyInto(out *VhMatchesInitParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]VhMatchesRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VhMatchesInitParameters.
func (in *VhMatchesInitParameters) DeepCopy() *VhMatchesInitParameters {
	if in == nil {
		return nil
	}
	out := new(VhMatchesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VhMatchesObservation) DeepCopyInto(out *VhMatchesObservation) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]VhMatchesRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VhMatchesObservation.
func (in *VhMatchesObservation) DeepCopy() *VhMatchesObservation {
	if in == nil {
		return nil
	}
	out := new(VhMatchesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VhMatchesParameters) DeepCopyInto(out *VhMatchesParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]VhMatchesRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VhMatchesParameters.
func (in *VhMatchesParameters) DeepCopy() *VhMatchesParameters {
	if in == nil {
		return nil
	}
	out := new(VhMatchesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VhMatchesRulesInitParameters) DeepCopyInto(out *VhMatchesRulesInitParameters) {
	*out = *in
	if in.Matches != nil {
		in, out := &in.Matches, &out.Matches
		*out = make([]MatchesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VhMatchesRulesInitParameters.
func (in *VhMatchesRulesInitParameters) DeepCopy() *VhMatchesRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(VhMatchesRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VhMatchesRulesObservation) DeepCopyInto(out *VhMatchesRulesObservation) {
	*out = *in
	if in.Matches != nil {
		in, out := &in.Matches, &out.Matches
		*out = make([]MatchesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VhMatchesRulesObservation.
func (in *VhMatchesRulesObservation) DeepCopy() *VhMatchesRulesObservation {
	if in == nil {
		return nil
	}
	out := new(VhMatchesRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VhMatchesRulesParameters) DeepCopyInto(out *VhMatchesRulesParameters) {
	*out = *in
	if in.Matches != nil {
		in, out := &in.Matches, &out.Matches
		*out = make([]MatchesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VhMatchesRulesParameters.
func (in *VhMatchesRulesParameters) DeepCopy() *VhMatchesRulesParameters {
	if in == nil {
		return nil
	}
	out := new(VhMatchesRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipAsgInitParameters) DeepCopyInto(out *VipAsgInitParameters) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make([]ConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = make([]PolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipAsgInitParameters.
func (in *VipAsgInitParameters) DeepCopy() *VipAsgInitParameters {
	if in == nil {
		return nil
	}
	out := new(VipAsgInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipAsgObservation) DeepCopyInto(out *VipAsgObservation) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make([]ConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = make([]PolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipAsgObservation.
func (in *VipAsgObservation) DeepCopy() *VipAsgObservation {
	if in == nil {
		return nil
	}
	out := new(VipAsgObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipAsgParameters) DeepCopyInto(out *VipAsgParameters) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make([]ConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = make([]PolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipAsgParameters.
func (in *VipAsgParameters) DeepCopy() *VipAsgParameters {
	if in == nil {
		return nil
	}
	out := new(VipAsgParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipDiscoveredNetworksInitParameters) DeepCopyInto(out *VipDiscoveredNetworksInitParameters) {
	*out = *in
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]VipDiscoveredNetworksSubnetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnet6 != nil {
		in, out := &in.Subnet6, &out.Subnet6
		*out = make([]DiscoveredNetworksSubnet6InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipDiscoveredNetworksInitParameters.
func (in *VipDiscoveredNetworksInitParameters) DeepCopy() *VipDiscoveredNetworksInitParameters {
	if in == nil {
		return nil
	}
	out := new(VipDiscoveredNetworksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipDiscoveredNetworksObservation) DeepCopyInto(out *VipDiscoveredNetworksObservation) {
	*out = *in
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]VipDiscoveredNetworksSubnetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnet6 != nil {
		in, out := &in.Subnet6, &out.Subnet6
		*out = make([]DiscoveredNetworksSubnet6Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipDiscoveredNetworksObservation.
func (in *VipDiscoveredNetworksObservation) DeepCopy() *VipDiscoveredNetworksObservation {
	if in == nil {
		return nil
	}
	out := new(VipDiscoveredNetworksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipDiscoveredNetworksParameters) DeepCopyInto(out *VipDiscoveredNetworksParameters) {
	*out = *in
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]VipDiscoveredNetworksSubnetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnet6 != nil {
		in, out := &in.Subnet6, &out.Subnet6
		*out = make([]DiscoveredNetworksSubnet6Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipDiscoveredNetworksParameters.
func (in *VipDiscoveredNetworksParameters) DeepCopy() *VipDiscoveredNetworksParameters {
	if in == nil {
		return nil
	}
	out := new(VipDiscoveredNetworksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipDiscoveredNetworksSubnetIPAddrInitParameters) DeepCopyInto(out *VipDiscoveredNetworksSubnetIPAddrInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipDiscoveredNetworksSubnetIPAddrInitParameters.
func (in *VipDiscoveredNetworksSubnetIPAddrInitParameters) DeepCopy() *VipDiscoveredNetworksSubnetIPAddrInitParameters {
	if in == nil {
		return nil
	}
	out := new(VipDiscoveredNetworksSubnetIPAddrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipDiscoveredNetworksSubnetIPAddrObservation) DeepCopyInto(out *VipDiscoveredNetworksSubnetIPAddrObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipDiscoveredNetworksSubnetIPAddrObservation.
func (in *VipDiscoveredNetworksSubnetIPAddrObservation) DeepCopy() *VipDiscoveredNetworksSubnetIPAddrObservation {
	if in == nil {
		return nil
	}
	out := new(VipDiscoveredNetworksSubnetIPAddrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipDiscoveredNetworksSubnetIPAddrParameters) DeepCopyInto(out *VipDiscoveredNetworksSubnetIPAddrParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipDiscoveredNetworksSubnetIPAddrParameters.
func (in *VipDiscoveredNetworksSubnetIPAddrParameters) DeepCopy() *VipDiscoveredNetworksSubnetIPAddrParameters {
	if in == nil {
		return nil
	}
	out := new(VipDiscoveredNetworksSubnetIPAddrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipDiscoveredNetworksSubnetInitParameters) DeepCopyInto(out *VipDiscoveredNetworksSubnetInitParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]VipDiscoveredNetworksSubnetIPAddrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipDiscoveredNetworksSubnetInitParameters.
func (in *VipDiscoveredNetworksSubnetInitParameters) DeepCopy() *VipDiscoveredNetworksSubnetInitParameters {
	if in == nil {
		return nil
	}
	out := new(VipDiscoveredNetworksSubnetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipDiscoveredNetworksSubnetObservation) DeepCopyInto(out *VipDiscoveredNetworksSubnetObservation) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]VipDiscoveredNetworksSubnetIPAddrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipDiscoveredNetworksSubnetObservation.
func (in *VipDiscoveredNetworksSubnetObservation) DeepCopy() *VipDiscoveredNetworksSubnetObservation {
	if in == nil {
		return nil
	}
	out := new(VipDiscoveredNetworksSubnetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipDiscoveredNetworksSubnetParameters) DeepCopyInto(out *VipDiscoveredNetworksSubnetParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]VipDiscoveredNetworksSubnetIPAddrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipDiscoveredNetworksSubnetParameters.
func (in *VipDiscoveredNetworksSubnetParameters) DeepCopy() *VipDiscoveredNetworksSubnetParameters {
	if in == nil {
		return nil
	}
	out := new(VipDiscoveredNetworksSubnetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipIPAddressInitParameters) DeepCopyInto(out *VipIPAddressInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipIPAddressInitParameters.
func (in *VipIPAddressInitParameters) DeepCopy() *VipIPAddressInitParameters {
	if in == nil {
		return nil
	}
	out := new(VipIPAddressInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipIPAddressObservation) DeepCopyInto(out *VipIPAddressObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipIPAddressObservation.
func (in *VipIPAddressObservation) DeepCopy() *VipIPAddressObservation {
	if in == nil {
		return nil
	}
	out := new(VipIPAddressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipIPAddressParameters) DeepCopyInto(out *VipIPAddressParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipIPAddressParameters.
func (in *VipIPAddressParameters) DeepCopy() *VipIPAddressParameters {
	if in == nil {
		return nil
	}
	out := new(VipIPAddressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipInitParameters) DeepCopyInto(out *VipInitParameters) {
	*out = *in
	if in.AutoAllocateFloatingIP != nil {
		in, out := &in.AutoAllocateFloatingIP, &out.AutoAllocateFloatingIP
		*out = new(string)
		**out = **in
	}
	if in.AutoAllocateIP != nil {
		in, out := &in.AutoAllocateIP, &out.AutoAllocateIP
		*out = new(string)
		**out = **in
	}
	if in.AutoAllocateIPType != nil {
		in, out := &in.AutoAllocateIPType, &out.AutoAllocateIPType
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.AviAllocatedFip != nil {
		in, out := &in.AviAllocatedFip, &out.AviAllocatedFip
		*out = new(string)
		**out = **in
	}
	if in.AviAllocatedVip != nil {
		in, out := &in.AviAllocatedVip, &out.AviAllocatedVip
		*out = new(string)
		**out = **in
	}
	if in.DiscoveredNetworks != nil {
		in, out := &in.DiscoveredNetworks, &out.DiscoveredNetworks
		*out = make([]VipDiscoveredNetworksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.FloatingIP != nil {
		in, out := &in.FloatingIP, &out.FloatingIP
		*out = make([]FloatingIPInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FloatingIp6 != nil {
		in, out := &in.FloatingIp6, &out.FloatingIp6
		*out = make([]FloatingIp6InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FloatingSubnet6UUID != nil {
		in, out := &in.FloatingSubnet6UUID, &out.FloatingSubnet6UUID
		*out = new(string)
		**out = **in
	}
	if in.FloatingSubnetUUID != nil {
		in, out := &in.FloatingSubnetUUID, &out.FloatingSubnetUUID
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = make([]VipIPAddressInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ip6Address != nil {
		in, out := &in.Ip6Address, &out.Ip6Address
		*out = make([]VipIp6AddressInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpamNetworkSubnet != nil {
		in, out := &in.IpamNetworkSubnet, &out.IpamNetworkSubnet
		*out = make([]IpamNetworkSubnetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.PlacementNetworks != nil {
		in, out := &in.PlacementNetworks, &out.PlacementNetworks
		*out = make([]VipPlacementNetworksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PortUUID != nil {
		in, out := &in.PortUUID, &out.PortUUID
		*out = new(string)
		**out = **in
	}
	if in.PrefixLength != nil {
		in, out := &in.PrefixLength, &out.PrefixLength
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]VipSubnetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnet6 != nil {
		in, out := &in.Subnet6, &out.Subnet6
		*out = make([]VipSubnet6InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnet6UUID != nil {
		in, out := &in.Subnet6UUID, &out.Subnet6UUID
		*out = new(string)
		**out = **in
	}
	if in.SubnetUUID != nil {
		in, out := &in.SubnetUUID, &out.SubnetUUID
		*out = new(string)
		**out = **in
	}
	if in.VipID != nil {
		in, out := &in.VipID, &out.VipID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipInitParameters.
func (in *VipInitParameters) DeepCopy() *VipInitParameters {
	if in == nil {
		return nil
	}
	out := new(VipInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipIp6AddressInitParameters) DeepCopyInto(out *VipIp6AddressInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipIp6AddressInitParameters.
func (in *VipIp6AddressInitParameters) DeepCopy() *VipIp6AddressInitParameters {
	if in == nil {
		return nil
	}
	out := new(VipIp6AddressInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipIp6AddressObservation) DeepCopyInto(out *VipIp6AddressObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipIp6AddressObservation.
func (in *VipIp6AddressObservation) DeepCopy() *VipIp6AddressObservation {
	if in == nil {
		return nil
	}
	out := new(VipIp6AddressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipIp6AddressParameters) DeepCopyInto(out *VipIp6AddressParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipIp6AddressParameters.
func (in *VipIp6AddressParameters) DeepCopy() *VipIp6AddressParameters {
	if in == nil {
		return nil
	}
	out := new(VipIp6AddressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipObservation) DeepCopyInto(out *VipObservation) {
	*out = *in
	if in.AutoAllocateFloatingIP != nil {
		in, out := &in.AutoAllocateFloatingIP, &out.AutoAllocateFloatingIP
		*out = new(string)
		**out = **in
	}
	if in.AutoAllocateIP != nil {
		in, out := &in.AutoAllocateIP, &out.AutoAllocateIP
		*out = new(string)
		**out = **in
	}
	if in.AutoAllocateIPType != nil {
		in, out := &in.AutoAllocateIPType, &out.AutoAllocateIPType
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.AviAllocatedFip != nil {
		in, out := &in.AviAllocatedFip, &out.AviAllocatedFip
		*out = new(string)
		**out = **in
	}
	if in.AviAllocatedVip != nil {
		in, out := &in.AviAllocatedVip, &out.AviAllocatedVip
		*out = new(string)
		**out = **in
	}
	if in.DiscoveredNetworks != nil {
		in, out := &in.DiscoveredNetworks, &out.DiscoveredNetworks
		*out = make([]VipDiscoveredNetworksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.FloatingIP != nil {
		in, out := &in.FloatingIP, &out.FloatingIP
		*out = make([]FloatingIPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FloatingIp6 != nil {
		in, out := &in.FloatingIp6, &out.FloatingIp6
		*out = make([]FloatingIp6Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FloatingSubnet6UUID != nil {
		in, out := &in.FloatingSubnet6UUID, &out.FloatingSubnet6UUID
		*out = new(string)
		**out = **in
	}
	if in.FloatingSubnetUUID != nil {
		in, out := &in.FloatingSubnetUUID, &out.FloatingSubnetUUID
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = make([]VipIPAddressObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ip6Address != nil {
		in, out := &in.Ip6Address, &out.Ip6Address
		*out = make([]VipIp6AddressObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpamNetworkSubnet != nil {
		in, out := &in.IpamNetworkSubnet, &out.IpamNetworkSubnet
		*out = make([]IpamNetworkSubnetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.PlacementNetworks != nil {
		in, out := &in.PlacementNetworks, &out.PlacementNetworks
		*out = make([]VipPlacementNetworksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PortUUID != nil {
		in, out := &in.PortUUID, &out.PortUUID
		*out = new(string)
		**out = **in
	}
	if in.PrefixLength != nil {
		in, out := &in.PrefixLength, &out.PrefixLength
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]VipSubnetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnet6 != nil {
		in, out := &in.Subnet6, &out.Subnet6
		*out = make([]VipSubnet6Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnet6UUID != nil {
		in, out := &in.Subnet6UUID, &out.Subnet6UUID
		*out = new(string)
		**out = **in
	}
	if in.SubnetUUID != nil {
		in, out := &in.SubnetUUID, &out.SubnetUUID
		*out = new(string)
		**out = **in
	}
	if in.VipID != nil {
		in, out := &in.VipID, &out.VipID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipObservation.
func (in *VipObservation) DeepCopy() *VipObservation {
	if in == nil {
		return nil
	}
	out := new(VipObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipParameters) DeepCopyInto(out *VipParameters) {
	*out = *in
	if in.AutoAllocateFloatingIP != nil {
		in, out := &in.AutoAllocateFloatingIP, &out.AutoAllocateFloatingIP
		*out = new(string)
		**out = **in
	}
	if in.AutoAllocateIP != nil {
		in, out := &in.AutoAllocateIP, &out.AutoAllocateIP
		*out = new(string)
		**out = **in
	}
	if in.AutoAllocateIPType != nil {
		in, out := &in.AutoAllocateIPType, &out.AutoAllocateIPType
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.AviAllocatedFip != nil {
		in, out := &in.AviAllocatedFip, &out.AviAllocatedFip
		*out = new(string)
		**out = **in
	}
	if in.AviAllocatedVip != nil {
		in, out := &in.AviAllocatedVip, &out.AviAllocatedVip
		*out = new(string)
		**out = **in
	}
	if in.DiscoveredNetworks != nil {
		in, out := &in.DiscoveredNetworks, &out.DiscoveredNetworks
		*out = make([]VipDiscoveredNetworksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.FloatingIP != nil {
		in, out := &in.FloatingIP, &out.FloatingIP
		*out = make([]FloatingIPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FloatingIp6 != nil {
		in, out := &in.FloatingIp6, &out.FloatingIp6
		*out = make([]FloatingIp6Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FloatingSubnet6UUID != nil {
		in, out := &in.FloatingSubnet6UUID, &out.FloatingSubnet6UUID
		*out = new(string)
		**out = **in
	}
	if in.FloatingSubnetUUID != nil {
		in, out := &in.FloatingSubnetUUID, &out.FloatingSubnetUUID
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = make([]VipIPAddressParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ip6Address != nil {
		in, out := &in.Ip6Address, &out.Ip6Address
		*out = make([]VipIp6AddressParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpamNetworkSubnet != nil {
		in, out := &in.IpamNetworkSubnet, &out.IpamNetworkSubnet
		*out = make([]IpamNetworkSubnetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.PlacementNetworks != nil {
		in, out := &in.PlacementNetworks, &out.PlacementNetworks
		*out = make([]VipPlacementNetworksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PortUUID != nil {
		in, out := &in.PortUUID, &out.PortUUID
		*out = new(string)
		**out = **in
	}
	if in.PrefixLength != nil {
		in, out := &in.PrefixLength, &out.PrefixLength
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]VipSubnetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnet6 != nil {
		in, out := &in.Subnet6, &out.Subnet6
		*out = make([]VipSubnet6Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnet6UUID != nil {
		in, out := &in.Subnet6UUID, &out.Subnet6UUID
		*out = new(string)
		**out = **in
	}
	if in.SubnetUUID != nil {
		in, out := &in.SubnetUUID, &out.SubnetUUID
		*out = new(string)
		**out = **in
	}
	if in.VipID != nil {
		in, out := &in.VipID, &out.VipID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipParameters.
func (in *VipParameters) DeepCopy() *VipParameters {
	if in == nil {
		return nil
	}
	out := new(VipParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipPlacementNetworksInitParameters) DeepCopyInto(out *VipPlacementNetworksInitParameters) {
	*out = *in
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]PlacementNetworksSubnetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnet6 != nil {
		in, out := &in.Subnet6, &out.Subnet6
		*out = make([]PlacementNetworksSubnet6InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipPlacementNetworksInitParameters.
func (in *VipPlacementNetworksInitParameters) DeepCopy() *VipPlacementNetworksInitParameters {
	if in == nil {
		return nil
	}
	out := new(VipPlacementNetworksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipPlacementNetworksObservation) DeepCopyInto(out *VipPlacementNetworksObservation) {
	*out = *in
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]PlacementNetworksSubnetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnet6 != nil {
		in, out := &in.Subnet6, &out.Subnet6
		*out = make([]PlacementNetworksSubnet6Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipPlacementNetworksObservation.
func (in *VipPlacementNetworksObservation) DeepCopy() *VipPlacementNetworksObservation {
	if in == nil {
		return nil
	}
	out := new(VipPlacementNetworksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipPlacementNetworksParameters) DeepCopyInto(out *VipPlacementNetworksParameters) {
	*out = *in
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]PlacementNetworksSubnetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnet6 != nil {
		in, out := &in.Subnet6, &out.Subnet6
		*out = make([]PlacementNetworksSubnet6Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipPlacementNetworksParameters.
func (in *VipPlacementNetworksParameters) DeepCopy() *VipPlacementNetworksParameters {
	if in == nil {
		return nil
	}
	out := new(VipPlacementNetworksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipSubnet6IPAddrInitParameters) DeepCopyInto(out *VipSubnet6IPAddrInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipSubnet6IPAddrInitParameters.
func (in *VipSubnet6IPAddrInitParameters) DeepCopy() *VipSubnet6IPAddrInitParameters {
	if in == nil {
		return nil
	}
	out := new(VipSubnet6IPAddrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipSubnet6IPAddrObservation) DeepCopyInto(out *VipSubnet6IPAddrObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipSubnet6IPAddrObservation.
func (in *VipSubnet6IPAddrObservation) DeepCopy() *VipSubnet6IPAddrObservation {
	if in == nil {
		return nil
	}
	out := new(VipSubnet6IPAddrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipSubnet6IPAddrParameters) DeepCopyInto(out *VipSubnet6IPAddrParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipSubnet6IPAddrParameters.
func (in *VipSubnet6IPAddrParameters) DeepCopy() *VipSubnet6IPAddrParameters {
	if in == nil {
		return nil
	}
	out := new(VipSubnet6IPAddrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipSubnet6InitParameters) DeepCopyInto(out *VipSubnet6InitParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]VipSubnet6IPAddrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipSubnet6InitParameters.
func (in *VipSubnet6InitParameters) DeepCopy() *VipSubnet6InitParameters {
	if in == nil {
		return nil
	}
	out := new(VipSubnet6InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipSubnet6Observation) DeepCopyInto(out *VipSubnet6Observation) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]VipSubnet6IPAddrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipSubnet6Observation.
func (in *VipSubnet6Observation) DeepCopy() *VipSubnet6Observation {
	if in == nil {
		return nil
	}
	out := new(VipSubnet6Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipSubnet6Parameters) DeepCopyInto(out *VipSubnet6Parameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]VipSubnet6IPAddrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipSubnet6Parameters.
func (in *VipSubnet6Parameters) DeepCopy() *VipSubnet6Parameters {
	if in == nil {
		return nil
	}
	out := new(VipSubnet6Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipSubnetIPAddrInitParameters) DeepCopyInto(out *VipSubnetIPAddrInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipSubnetIPAddrInitParameters.
func (in *VipSubnetIPAddrInitParameters) DeepCopy() *VipSubnetIPAddrInitParameters {
	if in == nil {
		return nil
	}
	out := new(VipSubnetIPAddrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipSubnetIPAddrObservation) DeepCopyInto(out *VipSubnetIPAddrObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipSubnetIPAddrObservation.
func (in *VipSubnetIPAddrObservation) DeepCopy() *VipSubnetIPAddrObservation {
	if in == nil {
		return nil
	}
	out := new(VipSubnetIPAddrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipSubnetIPAddrParameters) DeepCopyInto(out *VipSubnetIPAddrParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipSubnetIPAddrParameters.
func (in *VipSubnetIPAddrParameters) DeepCopy() *VipSubnetIPAddrParameters {
	if in == nil {
		return nil
	}
	out := new(VipSubnetIPAddrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipSubnetInitParameters) DeepCopyInto(out *VipSubnetInitParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]VipSubnetIPAddrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipSubnetInitParameters.
func (in *VipSubnetInitParameters) DeepCopy() *VipSubnetInitParameters {
	if in == nil {
		return nil
	}
	out := new(VipSubnetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipSubnetObservation) DeepCopyInto(out *VipSubnetObservation) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]VipSubnetIPAddrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipSubnetObservation.
func (in *VipSubnetObservation) DeepCopy() *VipSubnetObservation {
	if in == nil {
		return nil
	}
	out := new(VipSubnetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipSubnetParameters) DeepCopyInto(out *VipSubnetParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]VipSubnetIPAddrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipSubnetParameters.
func (in *VipSubnetParameters) DeepCopy() *VipSubnetParameters {
	if in == nil {
		return nil
	}
	out := new(VipSubnetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualService) DeepCopyInto(out *VirtualService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualService.
func (in *VirtualService) DeepCopy() *VirtualService {
	if in == nil {
		return nil
	}
	out := new(VirtualService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualService) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualServiceAnalyticsPolicyInitParameters) DeepCopyInto(out *VirtualServiceAnalyticsPolicyInitParameters) {
	*out = *in
	if in.AllHeaders != nil {
		in, out := &in.AllHeaders, &out.AllHeaders
		*out = new(string)
		**out = **in
	}
	if in.ClientInsights != nil {
		in, out := &in.ClientInsights, &out.ClientInsights
		*out = new(string)
		**out = **in
	}
	if in.ClientInsightsSampling != nil {
		in, out := &in.ClientInsightsSampling, &out.ClientInsightsSampling
		*out = make([]ClientInsightsSamplingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientLogFilters != nil {
		in, out := &in.ClientLogFilters, &out.ClientLogFilters
		*out = make([]ClientLogFiltersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FullClientLogs != nil {
		in, out := &in.FullClientLogs, &out.FullClientLogs
		*out = make([]FullClientLogsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LearningLogPolicy != nil {
		in, out := &in.LearningLogPolicy, &out.LearningLogPolicy
		*out = make([]LearningLogPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetricsRealtimeUpdate != nil {
		in, out := &in.MetricsRealtimeUpdate, &out.MetricsRealtimeUpdate
		*out = make([]MetricsRealtimeUpdateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SignificantLogThrottle != nil {
		in, out := &in.SignificantLogThrottle, &out.SignificantLogThrottle
		*out = new(string)
		**out = **in
	}
	if in.UdfLogThrottle != nil {
		in, out := &in.UdfLogThrottle, &out.UdfLogThrottle
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualServiceAnalyticsPolicyInitParameters.
func (in *VirtualServiceAnalyticsPolicyInitParameters) DeepCopy() *VirtualServiceAnalyticsPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualServiceAnalyticsPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualServiceAnalyticsPolicyObservation) DeepCopyInto(out *VirtualServiceAnalyticsPolicyObservation) {
	*out = *in
	if in.AllHeaders != nil {
		in, out := &in.AllHeaders, &out.AllHeaders
		*out = new(string)
		**out = **in
	}
	if in.ClientInsights != nil {
		in, out := &in.ClientInsights, &out.ClientInsights
		*out = new(string)
		**out = **in
	}
	if in.ClientInsightsSampling != nil {
		in, out := &in.ClientInsightsSampling, &out.ClientInsightsSampling
		*out = make([]ClientInsightsSamplingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientLogFilters != nil {
		in, out := &in.ClientLogFilters, &out.ClientLogFilters
		*out = make([]ClientLogFiltersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FullClientLogs != nil {
		in, out := &in.FullClientLogs, &out.FullClientLogs
		*out = make([]FullClientLogsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LearningLogPolicy != nil {
		in, out := &in.LearningLogPolicy, &out.LearningLogPolicy
		*out = make([]LearningLogPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetricsRealtimeUpdate != nil {
		in, out := &in.MetricsRealtimeUpdate, &out.MetricsRealtimeUpdate
		*out = make([]MetricsRealtimeUpdateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SignificantLogThrottle != nil {
		in, out := &in.SignificantLogThrottle, &out.SignificantLogThrottle
		*out = new(string)
		**out = **in
	}
	if in.UdfLogThrottle != nil {
		in, out := &in.UdfLogThrottle, &out.UdfLogThrottle
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualServiceAnalyticsPolicyObservation.
func (in *VirtualServiceAnalyticsPolicyObservation) DeepCopy() *VirtualServiceAnalyticsPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualServiceAnalyticsPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualServiceAnalyticsPolicyParameters) DeepCopyInto(out *VirtualServiceAnalyticsPolicyParameters) {
	*out = *in
	if in.AllHeaders != nil {
		in, out := &in.AllHeaders, &out.AllHeaders
		*out = new(string)
		**out = **in
	}
	if in.ClientInsights != nil {
		in, out := &in.ClientInsights, &out.ClientInsights
		*out = new(string)
		**out = **in
	}
	if in.ClientInsightsSampling != nil {
		in, out := &in.ClientInsightsSampling, &out.ClientInsightsSampling
		*out = make([]ClientInsightsSamplingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientLogFilters != nil {
		in, out := &in.ClientLogFilters, &out.ClientLogFilters
		*out = make([]ClientLogFiltersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FullClientLogs != nil {
		in, out := &in.FullClientLogs, &out.FullClientLogs
		*out = make([]FullClientLogsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LearningLogPolicy != nil {
		in, out := &in.LearningLogPolicy, &out.LearningLogPolicy
		*out = make([]LearningLogPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetricsRealtimeUpdate != nil {
		in, out := &in.MetricsRealtimeUpdate, &out.MetricsRealtimeUpdate
		*out = make([]MetricsRealtimeUpdateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SignificantLogThrottle != nil {
		in, out := &in.SignificantLogThrottle, &out.SignificantLogThrottle
		*out = new(string)
		**out = **in
	}
	if in.UdfLogThrottle != nil {
		in, out := &in.UdfLogThrottle, &out.UdfLogThrottle
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualServiceAnalyticsPolicyParameters.
func (in *VirtualServiceAnalyticsPolicyParameters) DeepCopy() *VirtualServiceAnalyticsPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualServiceAnalyticsPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualServiceConfigpbAttributesInitParameters) DeepCopyInto(out *VirtualServiceConfigpbAttributesInitParameters) {
	*out = *in
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualServiceConfigpbAttributesInitParameters.
func (in *VirtualServiceConfigpbAttributesInitParameters) DeepCopy() *VirtualServiceConfigpbAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualServiceConfigpbAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualServiceConfigpbAttributesObservation) DeepCopyInto(out *VirtualServiceConfigpbAttributesObservation) {
	*out = *in
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualServiceConfigpbAttributesObservation.
func (in *VirtualServiceConfigpbAttributesObservation) DeepCopy() *VirtualServiceConfigpbAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualServiceConfigpbAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualServiceConfigpbAttributesParameters) DeepCopyInto(out *VirtualServiceConfigpbAttributesParameters) {
	*out = *in
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualServiceConfigpbAttributesParameters.
func (in *VirtualServiceConfigpbAttributesParameters) DeepCopy() *VirtualServiceConfigpbAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualServiceConfigpbAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualServiceInitParameters) DeepCopyInto(out *VirtualServiceInitParameters) {
	*out = *in
	if in.ActiveStandbySeTag != nil {
		in, out := &in.ActiveStandbySeTag, &out.ActiveStandbySeTag
		*out = new(string)
		**out = **in
	}
	if in.AdvertiseDownVs != nil {
		in, out := &in.AdvertiseDownVs, &out.AdvertiseDownVs
		*out = new(string)
		**out = **in
	}
	if in.AllowInvalidClientCert != nil {
		in, out := &in.AllowInvalidClientCert, &out.AllowInvalidClientCert
		*out = new(string)
		**out = **in
	}
	if in.AnalyticsPolicy != nil {
		in, out := &in.AnalyticsPolicy, &out.AnalyticsPolicy
		*out = make([]VirtualServiceAnalyticsPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AnalyticsProfileRef != nil {
		in, out := &in.AnalyticsProfileRef, &out.AnalyticsProfileRef
		*out = new(string)
		**out = **in
	}
	if in.ApplicationProfileRef != nil {
		in, out := &in.ApplicationProfileRef, &out.ApplicationProfileRef
		*out = new(string)
		**out = **in
	}
	if in.AzureAvailabilitySet != nil {
		in, out := &in.AzureAvailabilitySet, &out.AzureAvailabilitySet
		*out = new(string)
		**out = **in
	}
	if in.BGPLocalPreference != nil {
		in, out := &in.BGPLocalPreference, &out.BGPLocalPreference
		*out = new(string)
		**out = **in
	}
	if in.BGPNumAsPathPrepend != nil {
		in, out := &in.BGPNumAsPathPrepend, &out.BGPNumAsPathPrepend
		*out = new(string)
		**out = **in
	}
	if in.BGPPeerLabels != nil {
		in, out := &in.BGPPeerLabels, &out.BGPPeerLabels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BotPolicyRef != nil {
		in, out := &in.BotPolicyRef, &out.BotPolicyRef
		*out = new(string)
		**out = **in
	}
	if in.BulkSyncKvcache != nil {
		in, out := &in.BulkSyncKvcache, &out.BulkSyncKvcache
		*out = new(string)
		**out = **in
	}
	if in.CloseClientConnOnConfigUpdate != nil {
		in, out := &in.CloseClientConnOnConfigUpdate, &out.CloseClientConnOnConfigUpdate
		*out = new(string)
		**out = **in
	}
	if in.CloudConfigCksum != nil {
		in, out := &in.CloudConfigCksum, &out.CloudConfigCksum
		*out = new(string)
		**out = **in
	}
	if in.CloudRef != nil {
		in, out := &in.CloudRef, &out.CloudRef
		*out = new(string)
		**out = **in
	}
	if in.CloudType != nil {
		in, out := &in.CloudType, &out.CloudType
		*out = new(string)
		**out = **in
	}
	if in.ConfigpbAttributes != nil {
		in, out := &in.ConfigpbAttributes, &out.ConfigpbAttributes
		*out = make([]VirtualServiceConfigpbAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnectionsRateLimit != nil {
		in, out := &in.ConnectionsRateLimit, &out.ConnectionsRateLimit
		*out = make([]ConnectionsRateLimitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContentRewrite != nil {
		in, out := &in.ContentRewrite, &out.ContentRewrite
		*out = make([]ContentRewriteInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.CsrfPolicyRef != nil {
		in, out := &in.CsrfPolicyRef, &out.CsrfPolicyRef
		*out = new(string)
		**out = **in
	}
	if in.DNSInfo != nil {
		in, out := &in.DNSInfo, &out.DNSInfo
		*out = make([]DNSInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DNSPolicies != nil {
		in, out := &in.DNSPolicies, &out.DNSPolicies
		*out = make([]DNSPoliciesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DelayFairness != nil {
		in, out := &in.DelayFairness, &out.DelayFairness
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EastWestPlacement != nil {
		in, out := &in.EastWestPlacement, &out.EastWestPlacement
		*out = new(string)
		**out = **in
	}
	if in.EnableAutogw != nil {
		in, out := &in.EnableAutogw, &out.EnableAutogw
		*out = new(string)
		**out = **in
	}
	if in.EnableRhi != nil {
		in, out := &in.EnableRhi, &out.EnableRhi
		*out = new(string)
		**out = **in
	}
	if in.EnableRhiSnat != nil {
		in, out := &in.EnableRhiSnat, &out.EnableRhiSnat
		*out = new(string)
		**out = **in
	}
	if in.EnableSession != nil {
		in, out := &in.EnableSession, &out.EnableSession
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.ErrorPageProfileRef != nil {
		in, out := &in.ErrorPageProfileRef, &out.ErrorPageProfileRef
		*out = new(string)
		**out = **in
	}
	if in.FlowDist != nil {
		in, out := &in.FlowDist, &out.FlowDist
		*out = new(string)
		**out = **in
	}
	if in.FlowLabelType != nil {
		in, out := &in.FlowLabelType, &out.FlowLabelType
		*out = new(string)
		**out = **in
	}
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.HTTPPolicies != nil {
		in, out := &in.HTTPPolicies, &out.HTTPPolicies
		*out = make([]HTTPPoliciesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HostNameXlate != nil {
		in, out := &in.HostNameXlate, &out.HostNameXlate
		*out = new(string)
		**out = **in
	}
	if in.IcapRequestProfileRefs != nil {
		in, out := &in.IcapRequestProfileRefs, &out.IcapRequestProfileRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IgnPoolNetReach != nil {
		in, out := &in.IgnPoolNetReach, &out.IgnPoolNetReach
		*out = new(string)
		**out = **in
	}
	if in.JwtConfig != nil {
		in, out := &in.JwtConfig, &out.JwtConfig
		*out = make([]JwtConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.L4Policies != nil {
		in, out := &in.L4Policies, &out.L4Policies
		*out = make([]L4PoliciesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LdapVsConfig != nil {
		in, out := &in.LdapVsConfig, &out.LdapVsConfig
		*out = make([]LdapVsConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LimitDoser != nil {
		in, out := &in.LimitDoser, &out.LimitDoser
		*out = new(string)
		**out = **in
	}
	if in.Markers != nil {
		in, out := &in.Markers, &out.Markers
		*out = make([]VirtualServiceMarkersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxCpsPerClient != nil {
		in, out := &in.MaxCpsPerClient, &out.MaxCpsPerClient
		*out = new(string)
		**out = **in
	}
	if in.MicroserviceRef != nil {
		in, out := &in.MicroserviceRef, &out.MicroserviceRef
		*out = new(string)
		**out = **in
	}
	if in.MinPoolsUp != nil {
		in, out := &in.MinPoolsUp, &out.MinPoolsUp
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkProfileRef != nil {
		in, out := &in.NetworkProfileRef, &out.NetworkProfileRef
		*out = new(string)
		**out = **in
	}
	if in.NetworkSecurityPolicyRef != nil {
		in, out := &in.NetworkSecurityPolicyRef, &out.NetworkSecurityPolicyRef
		*out = new(string)
		**out = **in
	}
	if in.NsxSecuritygroup != nil {
		in, out := &in.NsxSecuritygroup, &out.NsxSecuritygroup
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OauthVsConfig != nil {
		in, out := &in.OauthVsConfig, &out.OauthVsConfig
		*out = make([]OauthVsConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PerformanceLimits != nil {
		in, out := &in.PerformanceLimits, &out.PerformanceLimits
		*out = make([]PerformanceLimitsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PoolGroupRef != nil {
		in, out := &in.PoolGroupRef, &out.PoolGroupRef
		*out = new(string)
		**out = **in
	}
	if in.PoolRef != nil {
		in, out := &in.PoolRef, &out.PoolRef
		*out = new(string)
		**out = **in
	}
	if in.RemoveListeningPortOnVsDown != nil {
		in, out := &in.RemoveListeningPortOnVsDown, &out.RemoveListeningPortOnVsDown
		*out = new(string)
		**out = **in
	}
	if in.RequestsRateLimit != nil {
		in, out := &in.RequestsRateLimit, &out.RequestsRateLimit
		*out = make([]RequestsRateLimitInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RevokeVipRoute != nil {
		in, out := &in.RevokeVipRoute, &out.RevokeVipRoute
		*out = new(string)
		**out = **in
	}
	if in.SAMLSpConfig != nil {
		in, out := &in.SAMLSpConfig, &out.SAMLSpConfig
		*out = make([]SAMLSpConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSLKeyAndCertificateRefs != nil {
		in, out := &in.SSLKeyAndCertificateRefs, &out.SSLKeyAndCertificateRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSLProfileRef != nil {
		in, out := &in.SSLProfileRef, &out.SSLProfileRef
		*out = new(string)
		**out = **in
	}
	if in.SSLProfileSelectors != nil {
		in, out := &in.SSLProfileSelectors, &out.SSLProfileSelectors
		*out = make([]SSLProfileSelectorsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSLSessCacheAvgSize != nil {
		in, out := &in.SSLSessCacheAvgSize, &out.SSLSessCacheAvgSize
		*out = new(string)
		**out = **in
	}
	if in.ScaleoutEcmp != nil {
		in, out := &in.ScaleoutEcmp, &out.ScaleoutEcmp
		*out = new(string)
		**out = **in
	}
	if in.SeGroupRef != nil {
		in, out := &in.SeGroupRef, &out.SeGroupRef
		*out = new(string)
		**out = **in
	}
	if in.SecurityPolicyRef != nil {
		in, out := &in.SecurityPolicyRef, &out.SecurityPolicyRef
		*out = new(string)
		**out = **in
	}
	if in.ServerNetworkProfileRef != nil {
		in, out := &in.ServerNetworkProfileRef, &out.ServerNetworkProfileRef
		*out = new(string)
		**out = **in
	}
	if in.ServiceMetadata != nil {
		in, out := &in.ServiceMetadata, &out.ServiceMetadata
		*out = new(string)
		**out = **in
	}
	if in.ServicePoolSelect != nil {
		in, out := &in.ServicePoolSelect, &out.ServicePoolSelect
		*out = make([]ServicePoolSelectInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Services != nil {
		in, out := &in.Services, &out.Services
		*out = make([]ServicesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SidebandProfile != nil {
		in, out := &in.SidebandProfile, &out.SidebandProfile
		*out = make([]SidebandProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SnatIP != nil {
		in, out := &in.SnatIP, &out.SnatIP
		*out = make([]SnatIPInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SnatIp6Addresses != nil {
		in, out := &in.SnatIp6Addresses, &out.SnatIp6Addresses
		*out = make([]SnatIp6AddressesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpPoolRefs != nil {
		in, out := &in.SpPoolRefs, &out.SpPoolRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SsoPolicyRef != nil {
		in, out := &in.SsoPolicyRef, &out.SsoPolicyRef
		*out = new(string)
		**out = **in
	}
	if in.StaticDNSRecords != nil {
		in, out := &in.StaticDNSRecords, &out.StaticDNSRecords
		*out = make([]StaticDNSRecordsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TenantRef != nil {
		in, out := &in.TenantRef, &out.TenantRef
		*out = new(string)
		**out = **in
	}
	if in.TestSeDatastoreLevel1Ref != nil {
		in, out := &in.TestSeDatastoreLevel1Ref, &out.TestSeDatastoreLevel1Ref
		*out = new(string)
		**out = **in
	}
	if in.TopologyPolicies != nil {
		in, out := &in.TopologyPolicies, &out.TopologyPolicies
		*out = make([]TopologyPoliciesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TrafficCloneProfileRef != nil {
		in, out := &in.TrafficCloneProfileRef, &out.TrafficCloneProfileRef
		*out = new(string)
		**out = **in
	}
	if in.TrafficEnabled != nil {
		in, out := &in.TrafficEnabled, &out.TrafficEnabled
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.UseBridgeIPAsVip != nil {
		in, out := &in.UseBridgeIPAsVip, &out.UseBridgeIPAsVip
		*out = new(string)
		**out = **in
	}
	if in.UseVipAsSnat != nil {
		in, out := &in.UseVipAsSnat, &out.UseVipAsSnat
		*out = new(string)
		**out = **in
	}
	if in.VhDomainName != nil {
		in, out := &in.VhDomainName, &out.VhDomainName
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VhMatches != nil {
		in, out := &in.VhMatches, &out.VhMatches
		*out = make([]VhMatchesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VhParentVsRef != nil {
		in, out := &in.VhParentVsRef, &out.VhParentVsRef
		*out = new(string)
		**out = **in
	}
	if in.VhType != nil {
		in, out := &in.VhType, &out.VhType
		*out = new(string)
		**out = **in
	}
	if in.Vip != nil {
		in, out := &in.Vip, &out.Vip
		*out = make([]VipInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VrfContextRef != nil {
		in, out := &in.VrfContextRef, &out.VrfContextRef
		*out = new(string)
		**out = **in
	}
	if in.VsDatascripts != nil {
		in, out := &in.VsDatascripts, &out.VsDatascripts
		*out = make([]VsDatascriptsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VsvipCloudConfigCksum != nil {
		in, out := &in.VsvipCloudConfigCksum, &out.VsvipCloudConfigCksum
		*out = new(string)
		**out = **in
	}
	if in.VsvipRef != nil {
		in, out := &in.VsvipRef, &out.VsvipRef
		*out = new(string)
		**out = **in
	}
	if in.WafPolicyRef != nil {
		in, out := &in.WafPolicyRef, &out.WafPolicyRef
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualServiceInitParameters.
func (in *VirtualServiceInitParameters) DeepCopy() *VirtualServiceInitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualServiceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualServiceList) DeepCopyInto(out *VirtualServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VirtualService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualServiceList.
func (in *VirtualServiceList) DeepCopy() *VirtualServiceList {
	if in == nil {
		return nil
	}
	out := new(VirtualServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualServiceMarkersInitParameters) DeepCopyInto(out *VirtualServiceMarkersInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualServiceMarkersInitParameters.
func (in *VirtualServiceMarkersInitParameters) DeepCopy() *VirtualServiceMarkersInitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualServiceMarkersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualServiceMarkersObservation) DeepCopyInto(out *VirtualServiceMarkersObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualServiceMarkersObservation.
func (in *VirtualServiceMarkersObservation) DeepCopy() *VirtualServiceMarkersObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualServiceMarkersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualServiceMarkersParameters) DeepCopyInto(out *VirtualServiceMarkersParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualServiceMarkersParameters.
func (in *VirtualServiceMarkersParameters) DeepCopy() *VirtualServiceMarkersParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualServiceMarkersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualServiceObservation) DeepCopyInto(out *VirtualServiceObservation) {
	*out = *in
	if in.ActiveStandbySeTag != nil {
		in, out := &in.ActiveStandbySeTag, &out.ActiveStandbySeTag
		*out = new(string)
		**out = **in
	}
	if in.AdvertiseDownVs != nil {
		in, out := &in.AdvertiseDownVs, &out.AdvertiseDownVs
		*out = new(string)
		**out = **in
	}
	if in.AllowInvalidClientCert != nil {
		in, out := &in.AllowInvalidClientCert, &out.AllowInvalidClientCert
		*out = new(string)
		**out = **in
	}
	if in.AnalyticsPolicy != nil {
		in, out := &in.AnalyticsPolicy, &out.AnalyticsPolicy
		*out = make([]VirtualServiceAnalyticsPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AnalyticsProfileRef != nil {
		in, out := &in.AnalyticsProfileRef, &out.AnalyticsProfileRef
		*out = new(string)
		**out = **in
	}
	if in.ApplicationProfileRef != nil {
		in, out := &in.ApplicationProfileRef, &out.ApplicationProfileRef
		*out = new(string)
		**out = **in
	}
	if in.AzureAvailabilitySet != nil {
		in, out := &in.AzureAvailabilitySet, &out.AzureAvailabilitySet
		*out = new(string)
		**out = **in
	}
	if in.BGPLocalPreference != nil {
		in, out := &in.BGPLocalPreference, &out.BGPLocalPreference
		*out = new(string)
		**out = **in
	}
	if in.BGPNumAsPathPrepend != nil {
		in, out := &in.BGPNumAsPathPrepend, &out.BGPNumAsPathPrepend
		*out = new(string)
		**out = **in
	}
	if in.BGPPeerLabels != nil {
		in, out := &in.BGPPeerLabels, &out.BGPPeerLabels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BotPolicyRef != nil {
		in, out := &in.BotPolicyRef, &out.BotPolicyRef
		*out = new(string)
		**out = **in
	}
	if in.BulkSyncKvcache != nil {
		in, out := &in.BulkSyncKvcache, &out.BulkSyncKvcache
		*out = new(string)
		**out = **in
	}
	if in.CloseClientConnOnConfigUpdate != nil {
		in, out := &in.CloseClientConnOnConfigUpdate, &out.CloseClientConnOnConfigUpdate
		*out = new(string)
		**out = **in
	}
	if in.CloudConfigCksum != nil {
		in, out := &in.CloudConfigCksum, &out.CloudConfigCksum
		*out = new(string)
		**out = **in
	}
	if in.CloudRef != nil {
		in, out := &in.CloudRef, &out.CloudRef
		*out = new(string)
		**out = **in
	}
	if in.CloudType != nil {
		in, out := &in.CloudType, &out.CloudType
		*out = new(string)
		**out = **in
	}
	if in.ConfigpbAttributes != nil {
		in, out := &in.ConfigpbAttributes, &out.ConfigpbAttributes
		*out = make([]VirtualServiceConfigpbAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnectionsRateLimit != nil {
		in, out := &in.ConnectionsRateLimit, &out.ConnectionsRateLimit
		*out = make([]ConnectionsRateLimitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContentRewrite != nil {
		in, out := &in.ContentRewrite, &out.ContentRewrite
		*out = make([]ContentRewriteObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.CsrfPolicyRef != nil {
		in, out := &in.CsrfPolicyRef, &out.CsrfPolicyRef
		*out = new(string)
		**out = **in
	}
	if in.DNSInfo != nil {
		in, out := &in.DNSInfo, &out.DNSInfo
		*out = make([]DNSInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DNSPolicies != nil {
		in, out := &in.DNSPolicies, &out.DNSPolicies
		*out = make([]DNSPoliciesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DelayFairness != nil {
		in, out := &in.DelayFairness, &out.DelayFairness
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EastWestPlacement != nil {
		in, out := &in.EastWestPlacement, &out.EastWestPlacement
		*out = new(string)
		**out = **in
	}
	if in.EnableAutogw != nil {
		in, out := &in.EnableAutogw, &out.EnableAutogw
		*out = new(string)
		**out = **in
	}
	if in.EnableRhi != nil {
		in, out := &in.EnableRhi, &out.EnableRhi
		*out = new(string)
		**out = **in
	}
	if in.EnableRhiSnat != nil {
		in, out := &in.EnableRhiSnat, &out.EnableRhiSnat
		*out = new(string)
		**out = **in
	}
	if in.EnableSession != nil {
		in, out := &in.EnableSession, &out.EnableSession
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.ErrorPageProfileRef != nil {
		in, out := &in.ErrorPageProfileRef, &out.ErrorPageProfileRef
		*out = new(string)
		**out = **in
	}
	if in.FlowDist != nil {
		in, out := &in.FlowDist, &out.FlowDist
		*out = new(string)
		**out = **in
	}
	if in.FlowLabelType != nil {
		in, out := &in.FlowLabelType, &out.FlowLabelType
		*out = new(string)
		**out = **in
	}
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.HTTPPolicies != nil {
		in, out := &in.HTTPPolicies, &out.HTTPPolicies
		*out = make([]HTTPPoliciesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HostNameXlate != nil {
		in, out := &in.HostNameXlate, &out.HostNameXlate
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IcapRequestProfileRefs != nil {
		in, out := &in.IcapRequestProfileRefs, &out.IcapRequestProfileRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IgnPoolNetReach != nil {
		in, out := &in.IgnPoolNetReach, &out.IgnPoolNetReach
		*out = new(string)
		**out = **in
	}
	if in.JwtConfig != nil {
		in, out := &in.JwtConfig, &out.JwtConfig
		*out = make([]JwtConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.L4Policies != nil {
		in, out := &in.L4Policies, &out.L4Policies
		*out = make([]L4PoliciesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LdapVsConfig != nil {
		in, out := &in.LdapVsConfig, &out.LdapVsConfig
		*out = make([]LdapVsConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LimitDoser != nil {
		in, out := &in.LimitDoser, &out.LimitDoser
		*out = new(string)
		**out = **in
	}
	if in.Markers != nil {
		in, out := &in.Markers, &out.Markers
		*out = make([]VirtualServiceMarkersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxCpsPerClient != nil {
		in, out := &in.MaxCpsPerClient, &out.MaxCpsPerClient
		*out = new(string)
		**out = **in
	}
	if in.MicroserviceRef != nil {
		in, out := &in.MicroserviceRef, &out.MicroserviceRef
		*out = new(string)
		**out = **in
	}
	if in.MinPoolsUp != nil {
		in, out := &in.MinPoolsUp, &out.MinPoolsUp
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkProfileRef != nil {
		in, out := &in.NetworkProfileRef, &out.NetworkProfileRef
		*out = new(string)
		**out = **in
	}
	if in.NetworkSecurityPolicyRef != nil {
		in, out := &in.NetworkSecurityPolicyRef, &out.NetworkSecurityPolicyRef
		*out = new(string)
		**out = **in
	}
	if in.NsxSecuritygroup != nil {
		in, out := &in.NsxSecuritygroup, &out.NsxSecuritygroup
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OauthVsConfig != nil {
		in, out := &in.OauthVsConfig, &out.OauthVsConfig
		*out = make([]OauthVsConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PerformanceLimits != nil {
		in, out := &in.PerformanceLimits, &out.PerformanceLimits
		*out = make([]PerformanceLimitsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PoolGroupRef != nil {
		in, out := &in.PoolGroupRef, &out.PoolGroupRef
		*out = new(string)
		**out = **in
	}
	if in.PoolRef != nil {
		in, out := &in.PoolRef, &out.PoolRef
		*out = new(string)
		**out = **in
	}
	if in.RemoveListeningPortOnVsDown != nil {
		in, out := &in.RemoveListeningPortOnVsDown, &out.RemoveListeningPortOnVsDown
		*out = new(string)
		**out = **in
	}
	if in.RequestsRateLimit != nil {
		in, out := &in.RequestsRateLimit, &out.RequestsRateLimit
		*out = make([]RequestsRateLimitObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RevokeVipRoute != nil {
		in, out := &in.RevokeVipRoute, &out.RevokeVipRoute
		*out = new(string)
		**out = **in
	}
	if in.SAMLSpConfig != nil {
		in, out := &in.SAMLSpConfig, &out.SAMLSpConfig
		*out = make([]SAMLSpConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSLKeyAndCertificateRefs != nil {
		in, out := &in.SSLKeyAndCertificateRefs, &out.SSLKeyAndCertificateRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSLProfileRef != nil {
		in, out := &in.SSLProfileRef, &out.SSLProfileRef
		*out = new(string)
		**out = **in
	}
	if in.SSLProfileSelectors != nil {
		in, out := &in.SSLProfileSelectors, &out.SSLProfileSelectors
		*out = make([]SSLProfileSelectorsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSLSessCacheAvgSize != nil {
		in, out := &in.SSLSessCacheAvgSize, &out.SSLSessCacheAvgSize
		*out = new(string)
		**out = **in
	}
	if in.ScaleoutEcmp != nil {
		in, out := &in.ScaleoutEcmp, &out.ScaleoutEcmp
		*out = new(string)
		**out = **in
	}
	if in.SeGroupRef != nil {
		in, out := &in.SeGroupRef, &out.SeGroupRef
		*out = new(string)
		**out = **in
	}
	if in.SecurityPolicyRef != nil {
		in, out := &in.SecurityPolicyRef, &out.SecurityPolicyRef
		*out = new(string)
		**out = **in
	}
	if in.ServerNetworkProfileRef != nil {
		in, out := &in.ServerNetworkProfileRef, &out.ServerNetworkProfileRef
		*out = new(string)
		**out = **in
	}
	if in.ServiceMetadata != nil {
		in, out := &in.ServiceMetadata, &out.ServiceMetadata
		*out = new(string)
		**out = **in
	}
	if in.ServicePoolSelect != nil {
		in, out := &in.ServicePoolSelect, &out.ServicePoolSelect
		*out = make([]ServicePoolSelectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Services != nil {
		in, out := &in.Services, &out.Services
		*out = make([]ServicesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SidebandProfile != nil {
		in, out := &in.SidebandProfile, &out.SidebandProfile
		*out = make([]SidebandProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SnatIP != nil {
		in, out := &in.SnatIP, &out.SnatIP
		*out = make([]SnatIPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SnatIp6Addresses != nil {
		in, out := &in.SnatIp6Addresses, &out.SnatIp6Addresses
		*out = make([]SnatIp6AddressesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpPoolRefs != nil {
		in, out := &in.SpPoolRefs, &out.SpPoolRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SsoPolicyRef != nil {
		in, out := &in.SsoPolicyRef, &out.SsoPolicyRef
		*out = new(string)
		**out = **in
	}
	if in.StaticDNSRecords != nil {
		in, out := &in.StaticDNSRecords, &out.StaticDNSRecords
		*out = make([]StaticDNSRecordsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TenantRef != nil {
		in, out := &in.TenantRef, &out.TenantRef
		*out = new(string)
		**out = **in
	}
	if in.TestSeDatastoreLevel1Ref != nil {
		in, out := &in.TestSeDatastoreLevel1Ref, &out.TestSeDatastoreLevel1Ref
		*out = new(string)
		**out = **in
	}
	if in.TopologyPolicies != nil {
		in, out := &in.TopologyPolicies, &out.TopologyPolicies
		*out = make([]TopologyPoliciesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TrafficCloneProfileRef != nil {
		in, out := &in.TrafficCloneProfileRef, &out.TrafficCloneProfileRef
		*out = new(string)
		**out = **in
	}
	if in.TrafficEnabled != nil {
		in, out := &in.TrafficEnabled, &out.TrafficEnabled
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.UseBridgeIPAsVip != nil {
		in, out := &in.UseBridgeIPAsVip, &out.UseBridgeIPAsVip
		*out = new(string)
		**out = **in
	}
	if in.UseVipAsSnat != nil {
		in, out := &in.UseVipAsSnat, &out.UseVipAsSnat
		*out = new(string)
		**out = **in
	}
	if in.VhDomainName != nil {
		in, out := &in.VhDomainName, &out.VhDomainName
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VhMatches != nil {
		in, out := &in.VhMatches, &out.VhMatches
		*out = make([]VhMatchesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VhParentVsRef != nil {
		in, out := &in.VhParentVsRef, &out.VhParentVsRef
		*out = new(string)
		**out = **in
	}
	if in.VhType != nil {
		in, out := &in.VhType, &out.VhType
		*out = new(string)
		**out = **in
	}
	if in.Vip != nil {
		in, out := &in.Vip, &out.Vip
		*out = make([]VipObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VrfContextRef != nil {
		in, out := &in.VrfContextRef, &out.VrfContextRef
		*out = new(string)
		**out = **in
	}
	if in.VsDatascripts != nil {
		in, out := &in.VsDatascripts, &out.VsDatascripts
		*out = make([]VsDatascriptsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VsvipCloudConfigCksum != nil {
		in, out := &in.VsvipCloudConfigCksum, &out.VsvipCloudConfigCksum
		*out = new(string)
		**out = **in
	}
	if in.VsvipRef != nil {
		in, out := &in.VsvipRef, &out.VsvipRef
		*out = new(string)
		**out = **in
	}
	if in.WafPolicyRef != nil {
		in, out := &in.WafPolicyRef, &out.WafPolicyRef
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualServiceObservation.
func (in *VirtualServiceObservation) DeepCopy() *VirtualServiceObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualServiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualServiceParameters) DeepCopyInto(out *VirtualServiceParameters) {
	*out = *in
	if in.ActiveStandbySeTag != nil {
		in, out := &in.ActiveStandbySeTag, &out.ActiveStandbySeTag
		*out = new(string)
		**out = **in
	}
	if in.AdvertiseDownVs != nil {
		in, out := &in.AdvertiseDownVs, &out.AdvertiseDownVs
		*out = new(string)
		**out = **in
	}
	if in.AllowInvalidClientCert != nil {
		in, out := &in.AllowInvalidClientCert, &out.AllowInvalidClientCert
		*out = new(string)
		**out = **in
	}
	if in.AnalyticsPolicy != nil {
		in, out := &in.AnalyticsPolicy, &out.AnalyticsPolicy
		*out = make([]VirtualServiceAnalyticsPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AnalyticsProfileRef != nil {
		in, out := &in.AnalyticsProfileRef, &out.AnalyticsProfileRef
		*out = new(string)
		**out = **in
	}
	if in.ApplicationProfileRef != nil {
		in, out := &in.ApplicationProfileRef, &out.ApplicationProfileRef
		*out = new(string)
		**out = **in
	}
	if in.AzureAvailabilitySet != nil {
		in, out := &in.AzureAvailabilitySet, &out.AzureAvailabilitySet
		*out = new(string)
		**out = **in
	}
	if in.BGPLocalPreference != nil {
		in, out := &in.BGPLocalPreference, &out.BGPLocalPreference
		*out = new(string)
		**out = **in
	}
	if in.BGPNumAsPathPrepend != nil {
		in, out := &in.BGPNumAsPathPrepend, &out.BGPNumAsPathPrepend
		*out = new(string)
		**out = **in
	}
	if in.BGPPeerLabels != nil {
		in, out := &in.BGPPeerLabels, &out.BGPPeerLabels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BotPolicyRef != nil {
		in, out := &in.BotPolicyRef, &out.BotPolicyRef
		*out = new(string)
		**out = **in
	}
	if in.BulkSyncKvcache != nil {
		in, out := &in.BulkSyncKvcache, &out.BulkSyncKvcache
		*out = new(string)
		**out = **in
	}
	if in.CloseClientConnOnConfigUpdate != nil {
		in, out := &in.CloseClientConnOnConfigUpdate, &out.CloseClientConnOnConfigUpdate
		*out = new(string)
		**out = **in
	}
	if in.CloudConfigCksum != nil {
		in, out := &in.CloudConfigCksum, &out.CloudConfigCksum
		*out = new(string)
		**out = **in
	}
	if in.CloudRef != nil {
		in, out := &in.CloudRef, &out.CloudRef
		*out = new(string)
		**out = **in
	}
	if in.CloudType != nil {
		in, out := &in.CloudType, &out.CloudType
		*out = new(string)
		**out = **in
	}
	if in.ConfigpbAttributes != nil {
		in, out := &in.ConfigpbAttributes, &out.ConfigpbAttributes
		*out = make([]VirtualServiceConfigpbAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnectionsRateLimit != nil {
		in, out := &in.ConnectionsRateLimit, &out.ConnectionsRateLimit
		*out = make([]ConnectionsRateLimitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContentRewrite != nil {
		in, out := &in.ContentRewrite, &out.ContentRewrite
		*out = make([]ContentRewriteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.CsrfPolicyRef != nil {
		in, out := &in.CsrfPolicyRef, &out.CsrfPolicyRef
		*out = new(string)
		**out = **in
	}
	if in.DNSInfo != nil {
		in, out := &in.DNSInfo, &out.DNSInfo
		*out = make([]DNSInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DNSPolicies != nil {
		in, out := &in.DNSPolicies, &out.DNSPolicies
		*out = make([]DNSPoliciesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DelayFairness != nil {
		in, out := &in.DelayFairness, &out.DelayFairness
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EastWestPlacement != nil {
		in, out := &in.EastWestPlacement, &out.EastWestPlacement
		*out = new(string)
		**out = **in
	}
	if in.EnableAutogw != nil {
		in, out := &in.EnableAutogw, &out.EnableAutogw
		*out = new(string)
		**out = **in
	}
	if in.EnableRhi != nil {
		in, out := &in.EnableRhi, &out.EnableRhi
		*out = new(string)
		**out = **in
	}
	if in.EnableRhiSnat != nil {
		in, out := &in.EnableRhiSnat, &out.EnableRhiSnat
		*out = new(string)
		**out = **in
	}
	if in.EnableSession != nil {
		in, out := &in.EnableSession, &out.EnableSession
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.ErrorPageProfileRef != nil {
		in, out := &in.ErrorPageProfileRef, &out.ErrorPageProfileRef
		*out = new(string)
		**out = **in
	}
	if in.FlowDist != nil {
		in, out := &in.FlowDist, &out.FlowDist
		*out = new(string)
		**out = **in
	}
	if in.FlowLabelType != nil {
		in, out := &in.FlowLabelType, &out.FlowLabelType
		*out = new(string)
		**out = **in
	}
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.HTTPPolicies != nil {
		in, out := &in.HTTPPolicies, &out.HTTPPolicies
		*out = make([]HTTPPoliciesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HostNameXlate != nil {
		in, out := &in.HostNameXlate, &out.HostNameXlate
		*out = new(string)
		**out = **in
	}
	if in.IcapRequestProfileRefs != nil {
		in, out := &in.IcapRequestProfileRefs, &out.IcapRequestProfileRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IgnPoolNetReach != nil {
		in, out := &in.IgnPoolNetReach, &out.IgnPoolNetReach
		*out = new(string)
		**out = **in
	}
	if in.JwtConfig != nil {
		in, out := &in.JwtConfig, &out.JwtConfig
		*out = make([]JwtConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.L4Policies != nil {
		in, out := &in.L4Policies, &out.L4Policies
		*out = make([]L4PoliciesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LdapVsConfig != nil {
		in, out := &in.LdapVsConfig, &out.LdapVsConfig
		*out = make([]LdapVsConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LimitDoser != nil {
		in, out := &in.LimitDoser, &out.LimitDoser
		*out = new(string)
		**out = **in
	}
	if in.Markers != nil {
		in, out := &in.Markers, &out.Markers
		*out = make([]VirtualServiceMarkersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxCpsPerClient != nil {
		in, out := &in.MaxCpsPerClient, &out.MaxCpsPerClient
		*out = new(string)
		**out = **in
	}
	if in.MicroserviceRef != nil {
		in, out := &in.MicroserviceRef, &out.MicroserviceRef
		*out = new(string)
		**out = **in
	}
	if in.MinPoolsUp != nil {
		in, out := &in.MinPoolsUp, &out.MinPoolsUp
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkProfileRef != nil {
		in, out := &in.NetworkProfileRef, &out.NetworkProfileRef
		*out = new(string)
		**out = **in
	}
	if in.NetworkSecurityPolicyRef != nil {
		in, out := &in.NetworkSecurityPolicyRef, &out.NetworkSecurityPolicyRef
		*out = new(string)
		**out = **in
	}
	if in.NsxSecuritygroup != nil {
		in, out := &in.NsxSecuritygroup, &out.NsxSecuritygroup
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OauthVsConfig != nil {
		in, out := &in.OauthVsConfig, &out.OauthVsConfig
		*out = make([]OauthVsConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PerformanceLimits != nil {
		in, out := &in.PerformanceLimits, &out.PerformanceLimits
		*out = make([]PerformanceLimitsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PoolGroupRef != nil {
		in, out := &in.PoolGroupRef, &out.PoolGroupRef
		*out = new(string)
		**out = **in
	}
	if in.PoolRef != nil {
		in, out := &in.PoolRef, &out.PoolRef
		*out = new(string)
		**out = **in
	}
	if in.RemoveListeningPortOnVsDown != nil {
		in, out := &in.RemoveListeningPortOnVsDown, &out.RemoveListeningPortOnVsDown
		*out = new(string)
		**out = **in
	}
	if in.RequestsRateLimit != nil {
		in, out := &in.RequestsRateLimit, &out.RequestsRateLimit
		*out = make([]RequestsRateLimitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RevokeVipRoute != nil {
		in, out := &in.RevokeVipRoute, &out.RevokeVipRoute
		*out = new(string)
		**out = **in
	}
	if in.SAMLSpConfig != nil {
		in, out := &in.SAMLSpConfig, &out.SAMLSpConfig
		*out = make([]SAMLSpConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSLKeyAndCertificateRefs != nil {
		in, out := &in.SSLKeyAndCertificateRefs, &out.SSLKeyAndCertificateRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSLProfileRef != nil {
		in, out := &in.SSLProfileRef, &out.SSLProfileRef
		*out = new(string)
		**out = **in
	}
	if in.SSLProfileSelectors != nil {
		in, out := &in.SSLProfileSelectors, &out.SSLProfileSelectors
		*out = make([]SSLProfileSelectorsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSLSessCacheAvgSize != nil {
		in, out := &in.SSLSessCacheAvgSize, &out.SSLSessCacheAvgSize
		*out = new(string)
		**out = **in
	}
	if in.ScaleoutEcmp != nil {
		in, out := &in.ScaleoutEcmp, &out.ScaleoutEcmp
		*out = new(string)
		**out = **in
	}
	if in.SeGroupRef != nil {
		in, out := &in.SeGroupRef, &out.SeGroupRef
		*out = new(string)
		**out = **in
	}
	if in.SecurityPolicyRef != nil {
		in, out := &in.SecurityPolicyRef, &out.SecurityPolicyRef
		*out = new(string)
		**out = **in
	}
	if in.ServerNetworkProfileRef != nil {
		in, out := &in.ServerNetworkProfileRef, &out.ServerNetworkProfileRef
		*out = new(string)
		**out = **in
	}
	if in.ServiceMetadata != nil {
		in, out := &in.ServiceMetadata, &out.ServiceMetadata
		*out = new(string)
		**out = **in
	}
	if in.ServicePoolSelect != nil {
		in, out := &in.ServicePoolSelect, &out.ServicePoolSelect
		*out = make([]ServicePoolSelectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Services != nil {
		in, out := &in.Services, &out.Services
		*out = make([]ServicesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SidebandProfile != nil {
		in, out := &in.SidebandProfile, &out.SidebandProfile
		*out = make([]SidebandProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SnatIP != nil {
		in, out := &in.SnatIP, &out.SnatIP
		*out = make([]SnatIPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SnatIp6Addresses != nil {
		in, out := &in.SnatIp6Addresses, &out.SnatIp6Addresses
		*out = make([]SnatIp6AddressesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpPoolRefs != nil {
		in, out := &in.SpPoolRefs, &out.SpPoolRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SsoPolicyRef != nil {
		in, out := &in.SsoPolicyRef, &out.SsoPolicyRef
		*out = new(string)
		**out = **in
	}
	if in.StaticDNSRecords != nil {
		in, out := &in.StaticDNSRecords, &out.StaticDNSRecords
		*out = make([]StaticDNSRecordsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TenantRef != nil {
		in, out := &in.TenantRef, &out.TenantRef
		*out = new(string)
		**out = **in
	}
	if in.TestSeDatastoreLevel1Ref != nil {
		in, out := &in.TestSeDatastoreLevel1Ref, &out.TestSeDatastoreLevel1Ref
		*out = new(string)
		**out = **in
	}
	if in.TopologyPolicies != nil {
		in, out := &in.TopologyPolicies, &out.TopologyPolicies
		*out = make([]TopologyPoliciesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TrafficCloneProfileRef != nil {
		in, out := &in.TrafficCloneProfileRef, &out.TrafficCloneProfileRef
		*out = new(string)
		**out = **in
	}
	if in.TrafficEnabled != nil {
		in, out := &in.TrafficEnabled, &out.TrafficEnabled
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.UseBridgeIPAsVip != nil {
		in, out := &in.UseBridgeIPAsVip, &out.UseBridgeIPAsVip
		*out = new(string)
		**out = **in
	}
	if in.UseVipAsSnat != nil {
		in, out := &in.UseVipAsSnat, &out.UseVipAsSnat
		*out = new(string)
		**out = **in
	}
	if in.VhDomainName != nil {
		in, out := &in.VhDomainName, &out.VhDomainName
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VhMatches != nil {
		in, out := &in.VhMatches, &out.VhMatches
		*out = make([]VhMatchesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VhParentVsRef != nil {
		in, out := &in.VhParentVsRef, &out.VhParentVsRef
		*out = new(string)
		**out = **in
	}
	if in.VhType != nil {
		in, out := &in.VhType, &out.VhType
		*out = new(string)
		**out = **in
	}
	if in.Vip != nil {
		in, out := &in.Vip, &out.Vip
		*out = make([]VipParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VrfContextRef != nil {
		in, out := &in.VrfContextRef, &out.VrfContextRef
		*out = new(string)
		**out = **in
	}
	if in.VsDatascripts != nil {
		in, out := &in.VsDatascripts, &out.VsDatascripts
		*out = make([]VsDatascriptsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VsvipCloudConfigCksum != nil {
		in, out := &in.VsvipCloudConfigCksum, &out.VsvipCloudConfigCksum
		*out = new(string)
		**out = **in
	}
	if in.VsvipRef != nil {
		in, out := &in.VsvipRef, &out.VsvipRef
		*out = new(string)
		**out = **in
	}
	if in.WafPolicyRef != nil {
		in, out := &in.WafPolicyRef, &out.WafPolicyRef
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualServiceParameters.
func (in *VirtualServiceParameters) DeepCopy() *VirtualServiceParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualServiceSpec) DeepCopyInto(out *VirtualServiceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualServiceSpec.
func (in *VirtualServiceSpec) DeepCopy() *VirtualServiceSpec {
	if in == nil {
		return nil
	}
	out := new(VirtualServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualServiceStatus) DeepCopyInto(out *VirtualServiceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualServiceStatus.
func (in *VirtualServiceStatus) DeepCopy() *VirtualServiceStatus {
	if in == nil {
		return nil
	}
	out := new(VirtualServiceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VlanInterfacesInitParameters) DeepCopyInto(out *VlanInterfacesInitParameters) {
	*out = *in
	if in.DHCPEnabled != nil {
		in, out := &in.DHCPEnabled, &out.DHCPEnabled
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.IfName != nil {
		in, out := &in.IfName, &out.IfName
		*out = new(string)
		**out = **in
	}
	if in.Ip6AutocfgEnabled != nil {
		in, out := &in.Ip6AutocfgEnabled, &out.Ip6AutocfgEnabled
		*out = new(string)
		**out = **in
	}
	if in.IsMgmt != nil {
		in, out := &in.IsMgmt, &out.IsMgmt
		*out = new(string)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(string)
		**out = **in
	}
	if in.VnicNetworks != nil {
		in, out := &in.VnicNetworks, &out.VnicNetworks
		*out = make([]VnicNetworksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VrfRef != nil {
		in, out := &in.VrfRef, &out.VrfRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VlanInterfacesInitParameters.
func (in *VlanInterfacesInitParameters) DeepCopy() *VlanInterfacesInitParameters {
	if in == nil {
		return nil
	}
	out := new(VlanInterfacesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VlanInterfacesObservation) DeepCopyInto(out *VlanInterfacesObservation) {
	*out = *in
	if in.DHCPEnabled != nil {
		in, out := &in.DHCPEnabled, &out.DHCPEnabled
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.IfName != nil {
		in, out := &in.IfName, &out.IfName
		*out = new(string)
		**out = **in
	}
	if in.Ip6AutocfgEnabled != nil {
		in, out := &in.Ip6AutocfgEnabled, &out.Ip6AutocfgEnabled
		*out = new(string)
		**out = **in
	}
	if in.IsMgmt != nil {
		in, out := &in.IsMgmt, &out.IsMgmt
		*out = new(string)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(string)
		**out = **in
	}
	if in.VnicNetworks != nil {
		in, out := &in.VnicNetworks, &out.VnicNetworks
		*out = make([]VnicNetworksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VrfRef != nil {
		in, out := &in.VrfRef, &out.VrfRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VlanInterfacesObservation.
func (in *VlanInterfacesObservation) DeepCopy() *VlanInterfacesObservation {
	if in == nil {
		return nil
	}
	out := new(VlanInterfacesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VlanInterfacesParameters) DeepCopyInto(out *VlanInterfacesParameters) {
	*out = *in
	if in.DHCPEnabled != nil {
		in, out := &in.DHCPEnabled, &out.DHCPEnabled
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.IfName != nil {
		in, out := &in.IfName, &out.IfName
		*out = new(string)
		**out = **in
	}
	if in.Ip6AutocfgEnabled != nil {
		in, out := &in.Ip6AutocfgEnabled, &out.Ip6AutocfgEnabled
		*out = new(string)
		**out = **in
	}
	if in.IsMgmt != nil {
		in, out := &in.IsMgmt, &out.IsMgmt
		*out = new(string)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(string)
		**out = **in
	}
	if in.VnicNetworks != nil {
		in, out := &in.VnicNetworks, &out.VnicNetworks
		*out = make([]VnicNetworksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VrfRef != nil {
		in, out := &in.VrfRef, &out.VrfRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VlanInterfacesParameters.
func (in *VlanInterfacesParameters) DeepCopy() *VlanInterfacesParameters {
	if in == nil {
		return nil
	}
	out := new(VlanInterfacesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VlanInterfacesVnicNetworksIPIPAddrInitParameters) DeepCopyInto(out *VlanInterfacesVnicNetworksIPIPAddrInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VlanInterfacesVnicNetworksIPIPAddrInitParameters.
func (in *VlanInterfacesVnicNetworksIPIPAddrInitParameters) DeepCopy() *VlanInterfacesVnicNetworksIPIPAddrInitParameters {
	if in == nil {
		return nil
	}
	out := new(VlanInterfacesVnicNetworksIPIPAddrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VlanInterfacesVnicNetworksIPIPAddrObservation) DeepCopyInto(out *VlanInterfacesVnicNetworksIPIPAddrObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VlanInterfacesVnicNetworksIPIPAddrObservation.
func (in *VlanInterfacesVnicNetworksIPIPAddrObservation) DeepCopy() *VlanInterfacesVnicNetworksIPIPAddrObservation {
	if in == nil {
		return nil
	}
	out := new(VlanInterfacesVnicNetworksIPIPAddrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VlanInterfacesVnicNetworksIPIPAddrParameters) DeepCopyInto(out *VlanInterfacesVnicNetworksIPIPAddrParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VlanInterfacesVnicNetworksIPIPAddrParameters.
func (in *VlanInterfacesVnicNetworksIPIPAddrParameters) DeepCopy() *VlanInterfacesVnicNetworksIPIPAddrParameters {
	if in == nil {
		return nil
	}
	out := new(VlanInterfacesVnicNetworksIPIPAddrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VlanInterfacesVnicNetworksIPInitParameters) DeepCopyInto(out *VlanInterfacesVnicNetworksIPInitParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]VlanInterfacesVnicNetworksIPIPAddrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VlanInterfacesVnicNetworksIPInitParameters.
func (in *VlanInterfacesVnicNetworksIPInitParameters) DeepCopy() *VlanInterfacesVnicNetworksIPInitParameters {
	if in == nil {
		return nil
	}
	out := new(VlanInterfacesVnicNetworksIPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VlanInterfacesVnicNetworksIPObservation) DeepCopyInto(out *VlanInterfacesVnicNetworksIPObservation) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]VlanInterfacesVnicNetworksIPIPAddrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VlanInterfacesVnicNetworksIPObservation.
func (in *VlanInterfacesVnicNetworksIPObservation) DeepCopy() *VlanInterfacesVnicNetworksIPObservation {
	if in == nil {
		return nil
	}
	out := new(VlanInterfacesVnicNetworksIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VlanInterfacesVnicNetworksIPParameters) DeepCopyInto(out *VlanInterfacesVnicNetworksIPParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]VlanInterfacesVnicNetworksIPIPAddrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VlanInterfacesVnicNetworksIPParameters.
func (in *VlanInterfacesVnicNetworksIPParameters) DeepCopy() *VlanInterfacesVnicNetworksIPParameters {
	if in == nil {
		return nil
	}
	out := new(VlanInterfacesVnicNetworksIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VlanInterfacesVnicNetworksInitParameters) DeepCopyInto(out *VlanInterfacesVnicNetworksInitParameters) {
	*out = *in
	if in.CtlrAlloc != nil {
		in, out := &in.CtlrAlloc, &out.CtlrAlloc
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = make([]VlanInterfacesVnicNetworksIPInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VlanInterfacesVnicNetworksInitParameters.
func (in *VlanInterfacesVnicNetworksInitParameters) DeepCopy() *VlanInterfacesVnicNetworksInitParameters {
	if in == nil {
		return nil
	}
	out := new(VlanInterfacesVnicNetworksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VlanInterfacesVnicNetworksObservation) DeepCopyInto(out *VlanInterfacesVnicNetworksObservation) {
	*out = *in
	if in.CtlrAlloc != nil {
		in, out := &in.CtlrAlloc, &out.CtlrAlloc
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = make([]VlanInterfacesVnicNetworksIPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VlanInterfacesVnicNetworksObservation.
func (in *VlanInterfacesVnicNetworksObservation) DeepCopy() *VlanInterfacesVnicNetworksObservation {
	if in == nil {
		return nil
	}
	out := new(VlanInterfacesVnicNetworksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VlanInterfacesVnicNetworksParameters) DeepCopyInto(out *VlanInterfacesVnicNetworksParameters) {
	*out = *in
	if in.CtlrAlloc != nil {
		in, out := &in.CtlrAlloc, &out.CtlrAlloc
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = make([]VlanInterfacesVnicNetworksIPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VlanInterfacesVnicNetworksParameters.
func (in *VlanInterfacesVnicNetworksParameters) DeepCopy() *VlanInterfacesVnicNetworksParameters {
	if in == nil {
		return nil
	}
	out := new(VlanInterfacesVnicNetworksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VnicNetworksIPIPAddrInitParameters) DeepCopyInto(out *VnicNetworksIPIPAddrInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VnicNetworksIPIPAddrInitParameters.
func (in *VnicNetworksIPIPAddrInitParameters) DeepCopy() *VnicNetworksIPIPAddrInitParameters {
	if in == nil {
		return nil
	}
	out := new(VnicNetworksIPIPAddrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VnicNetworksIPIPAddrObservation) DeepCopyInto(out *VnicNetworksIPIPAddrObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VnicNetworksIPIPAddrObservation.
func (in *VnicNetworksIPIPAddrObservation) DeepCopy() *VnicNetworksIPIPAddrObservation {
	if in == nil {
		return nil
	}
	out := new(VnicNetworksIPIPAddrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VnicNetworksIPIPAddrParameters) DeepCopyInto(out *VnicNetworksIPIPAddrParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VnicNetworksIPIPAddrParameters.
func (in *VnicNetworksIPIPAddrParameters) DeepCopy() *VnicNetworksIPIPAddrParameters {
	if in == nil {
		return nil
	}
	out := new(VnicNetworksIPIPAddrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VnicNetworksIPInitParameters) DeepCopyInto(out *VnicNetworksIPInitParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]IPIPAddrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VnicNetworksIPInitParameters.
func (in *VnicNetworksIPInitParameters) DeepCopy() *VnicNetworksIPInitParameters {
	if in == nil {
		return nil
	}
	out := new(VnicNetworksIPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VnicNetworksIPObservation) DeepCopyInto(out *VnicNetworksIPObservation) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]IPIPAddrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VnicNetworksIPObservation.
func (in *VnicNetworksIPObservation) DeepCopy() *VnicNetworksIPObservation {
	if in == nil {
		return nil
	}
	out := new(VnicNetworksIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VnicNetworksIPParameters) DeepCopyInto(out *VnicNetworksIPParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]IPIPAddrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VnicNetworksIPParameters.
func (in *VnicNetworksIPParameters) DeepCopy() *VnicNetworksIPParameters {
	if in == nil {
		return nil
	}
	out := new(VnicNetworksIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VnicNetworksInitParameters) DeepCopyInto(out *VnicNetworksInitParameters) {
	*out = *in
	if in.CtlrAlloc != nil {
		in, out := &in.CtlrAlloc, &out.CtlrAlloc
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = make([]VnicNetworksIPInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VnicNetworksInitParameters.
func (in *VnicNetworksInitParameters) DeepCopy() *VnicNetworksInitParameters {
	if in == nil {
		return nil
	}
	out := new(VnicNetworksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VnicNetworksObservation) DeepCopyInto(out *VnicNetworksObservation) {
	*out = *in
	if in.CtlrAlloc != nil {
		in, out := &in.CtlrAlloc, &out.CtlrAlloc
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = make([]VnicNetworksIPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VnicNetworksObservation.
func (in *VnicNetworksObservation) DeepCopy() *VnicNetworksObservation {
	if in == nil {
		return nil
	}
	out := new(VnicNetworksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VnicNetworksParameters) DeepCopyInto(out *VnicNetworksParameters) {
	*out = *in
	if in.CtlrAlloc != nil {
		in, out := &in.CtlrAlloc, &out.CtlrAlloc
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = make([]VnicNetworksIPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VnicNetworksParameters.
func (in *VnicNetworksParameters) DeepCopy() *VnicNetworksParameters {
	if in == nil {
		return nil
	}
	out := new(VnicNetworksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsDatascriptsInitParameters) DeepCopyInto(out *VsDatascriptsInitParameters) {
	*out = *in
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
	if in.VsDatascriptSetRef != nil {
		in, out := &in.VsDatascriptSetRef, &out.VsDatascriptSetRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsDatascriptsInitParameters.
func (in *VsDatascriptsInitParameters) DeepCopy() *VsDatascriptsInitParameters {
	if in == nil {
		return nil
	}
	out := new(VsDatascriptsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsDatascriptsObservation) DeepCopyInto(out *VsDatascriptsObservation) {
	*out = *in
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
	if in.VsDatascriptSetRef != nil {
		in, out := &in.VsDatascriptSetRef, &out.VsDatascriptSetRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsDatascriptsObservation.
func (in *VsDatascriptsObservation) DeepCopy() *VsDatascriptsObservation {
	if in == nil {
		return nil
	}
	out := new(VsDatascriptsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsDatascriptsParameters) DeepCopyInto(out *VsDatascriptsParameters) {
	*out = *in
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
	if in.VsDatascriptSetRef != nil {
		in, out := &in.VsDatascriptSetRef, &out.VsDatascriptSetRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsDatascriptsParameters.
func (in *VsDatascriptsParameters) DeepCopy() *VsDatascriptsParameters {
	if in == nil {
		return nil
	}
	out := new(VsDatascriptsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsPortInitParameters) DeepCopyInto(out *VsPortInitParameters) {
	*out = *in
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsPortInitParameters.
func (in *VsPortInitParameters) DeepCopy() *VsPortInitParameters {
	if in == nil {
		return nil
	}
	out := new(VsPortInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsPortObservation) DeepCopyInto(out *VsPortObservation) {
	*out = *in
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsPortObservation.
func (in *VsPortObservation) DeepCopy() *VsPortObservation {
	if in == nil {
		return nil
	}
	out := new(VsPortObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsPortParameters) DeepCopyInto(out *VsPortParameters) {
	*out = *in
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = new(string)
		**out = **in
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsPortParameters.
func (in *VsPortParameters) DeepCopy() *VsPortParameters {
	if in == nil {
		return nil
	}
	out := new(VsPortParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VssPlacementInitParameters) DeepCopyInto(out *VssPlacementInitParameters) {
	*out = *in
	if in.CoreNonaffinity != nil {
		in, out := &in.CoreNonaffinity, &out.CoreNonaffinity
		*out = new(string)
		**out = **in
	}
	if in.NumSubcores != nil {
		in, out := &in.NumSubcores, &out.NumSubcores
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VssPlacementInitParameters.
func (in *VssPlacementInitParameters) DeepCopy() *VssPlacementInitParameters {
	if in == nil {
		return nil
	}
	out := new(VssPlacementInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VssPlacementObservation) DeepCopyInto(out *VssPlacementObservation) {
	*out = *in
	if in.CoreNonaffinity != nil {
		in, out := &in.CoreNonaffinity, &out.CoreNonaffinity
		*out = new(string)
		**out = **in
	}
	if in.NumSubcores != nil {
		in, out := &in.NumSubcores, &out.NumSubcores
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VssPlacementObservation.
func (in *VssPlacementObservation) DeepCopy() *VssPlacementObservation {
	if in == nil {
		return nil
	}
	out := new(VssPlacementObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VssPlacementParameters) DeepCopyInto(out *VssPlacementParameters) {
	*out = *in
	if in.CoreNonaffinity != nil {
		in, out := &in.CoreNonaffinity, &out.CoreNonaffinity
		*out = new(string)
		**out = **in
	}
	if in.NumSubcores != nil {
		in, out := &in.NumSubcores, &out.NumSubcores
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VssPlacementParameters.
func (in *VssPlacementParameters) DeepCopy() *VssPlacementParameters {
	if in == nil {
		return nil
	}
	out := new(VssPlacementParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZonesInitParameters) DeepCopyInto(out *ZonesInitParameters) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.FipCapable != nil {
		in, out := &in.FipCapable, &out.FipCapable
		*out = new(string)
		**out = **in
	}
	if in.SubnetUUID != nil {
		in, out := &in.SubnetUUID, &out.SubnetUUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZonesInitParameters.
func (in *ZonesInitParameters) DeepCopy() *ZonesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ZonesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZonesObservation) DeepCopyInto(out *ZonesObservation) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.FipCapable != nil {
		in, out := &in.FipCapable, &out.FipCapable
		*out = new(string)
		**out = **in
	}
	if in.SubnetUUID != nil {
		in, out := &in.SubnetUUID, &out.SubnetUUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZonesObservation.
func (in *ZonesObservation) DeepCopy() *ZonesObservation {
	if in == nil {
		return nil
	}
	out := new(ZonesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZonesParameters) DeepCopyInto(out *ZonesParameters) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.FipCapable != nil {
		in, out := &in.FipCapable, &out.FipCapable
		*out = new(string)
		**out = **in
	}
	if in.SubnetUUID != nil {
		in, out := &in.SubnetUUID, &out.SubnetUUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZonesParameters.
func (in *ZonesParameters) DeepCopy() *ZonesParameters {
	if in == nil {
		return nil
	}
	out := new(ZonesParameters)
	in.DeepCopyInto(out)
	return out
}
