//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionFileInitParameters) DeepCopyInto(out *ActionFileInitParameters) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.FileContent != nil {
		in, out := &in.FileContent, &out.FileContent
		*out = new(string)
		**out = **in
	}
	if in.FileLength != nil {
		in, out := &in.FileLength, &out.FileLength
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionFileInitParameters.
func (in *ActionFileInitParameters) DeepCopy() *ActionFileInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActionFileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionFileObservation) DeepCopyInto(out *ActionFileObservation) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.FileContent != nil {
		in, out := &in.FileContent, &out.FileContent
		*out = new(string)
		**out = **in
	}
	if in.FileLength != nil {
		in, out := &in.FileLength, &out.FileLength
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionFileObservation.
func (in *ActionFileObservation) DeepCopy() *ActionFileObservation {
	if in == nil {
		return nil
	}
	out := new(ActionFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionFileParameters) DeepCopyInto(out *ActionFileParameters) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.FileContent != nil {
		in, out := &in.FileContent, &out.FileContent
		*out = new(string)
		**out = **in
	}
	if in.FileLength != nil {
		in, out := &in.FileLength, &out.FileLength
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionFileParameters.
func (in *ActionFileParameters) DeepCopy() *ActionFileParameters {
	if in == nil {
		return nil
	}
	out := new(ActionFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionInitParameters) DeepCopyInto(out *ActionInitParameters) {
	*out = *in
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]ActionFileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Redirect != nil {
		in, out := &in.Redirect, &out.Redirect
		*out = make([]ActionRedirectInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionInitParameters.
func (in *ActionInitParameters) DeepCopy() *ActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionObservation) DeepCopyInto(out *ActionObservation) {
	*out = *in
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]ActionFileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Redirect != nil {
		in, out := &in.Redirect, &out.Redirect
		*out = make([]ActionRedirectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionObservation.
func (in *ActionObservation) DeepCopy() *ActionObservation {
	if in == nil {
		return nil
	}
	out := new(ActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionParameters) DeepCopyInto(out *ActionParameters) {
	*out = *in
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]ActionFileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Redirect != nil {
		in, out := &in.Redirect, &out.Redirect
		*out = make([]ActionRedirectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionParameters.
func (in *ActionParameters) DeepCopy() *ActionParameters {
	if in == nil {
		return nil
	}
	out := new(ActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionRedirectInitParameters) DeepCopyInto(out *ActionRedirectInitParameters) {
	*out = *in
	if in.AddString != nil {
		in, out := &in.AddString, &out.AddString
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = make([]HostInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeepQuery != nil {
		in, out := &in.KeepQuery, &out.KeepQuery
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = make([]PathInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionRedirectInitParameters.
func (in *ActionRedirectInitParameters) DeepCopy() *ActionRedirectInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActionRedirectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionRedirectObservation) DeepCopyInto(out *ActionRedirectObservation) {
	*out = *in
	if in.AddString != nil {
		in, out := &in.AddString, &out.AddString
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = make([]HostObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeepQuery != nil {
		in, out := &in.KeepQuery, &out.KeepQuery
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = make([]PathObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionRedirectObservation.
func (in *ActionRedirectObservation) DeepCopy() *ActionRedirectObservation {
	if in == nil {
		return nil
	}
	out := new(ActionRedirectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionRedirectParameters) DeepCopyInto(out *ActionRedirectParameters) {
	*out = *in
	if in.AddString != nil {
		in, out := &in.AddString, &out.AddString
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = make([]HostParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeepQuery != nil {
		in, out := &in.KeepQuery, &out.KeepQuery
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = make([]PathParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionRedirectParameters.
func (in *ActionRedirectParameters) DeepCopy() *ActionRedirectParameters {
	if in == nil {
		return nil
	}
	out := new(ActionRedirectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsPolicyInitParameters) DeepCopyInto(out *AnalyticsPolicyInitParameters) {
	*out = *in
	if in.EnableRealtimeMetrics != nil {
		in, out := &in.EnableRealtimeMetrics, &out.EnableRealtimeMetrics
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsPolicyInitParameters.
func (in *AnalyticsPolicyInitParameters) DeepCopy() *AnalyticsPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(AnalyticsPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsPolicyObservation) DeepCopyInto(out *AnalyticsPolicyObservation) {
	*out = *in
	if in.EnableRealtimeMetrics != nil {
		in, out := &in.EnableRealtimeMetrics, &out.EnableRealtimeMetrics
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsPolicyObservation.
func (in *AnalyticsPolicyObservation) DeepCopy() *AnalyticsPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(AnalyticsPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalyticsPolicyParameters) DeepCopyInto(out *AnalyticsPolicyParameters) {
	*out = *in
	if in.EnableRealtimeMetrics != nil {
		in, out := &in.EnableRealtimeMetrics, &out.EnableRealtimeMetrics
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalyticsPolicyParameters.
func (in *AnalyticsPolicyParameters) DeepCopy() *AnalyticsPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(AnalyticsPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigpbAttributesInitParameters) DeepCopyInto(out *ConfigpbAttributesInitParameters) {
	*out = *in
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigpbAttributesInitParameters.
func (in *ConfigpbAttributesInitParameters) DeepCopy() *ConfigpbAttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigpbAttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigpbAttributesObservation) DeepCopyInto(out *ConfigpbAttributesObservation) {
	*out = *in
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigpbAttributesObservation.
func (in *ConfigpbAttributesObservation) DeepCopy() *ConfigpbAttributesObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigpbAttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigpbAttributesParameters) DeepCopyInto(out *ConfigpbAttributesParameters) {
	*out = *in
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigpbAttributesParameters.
func (in *ConfigpbAttributesParameters) DeepCopy() *ConfigpbAttributesParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigpbAttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnPoolPropertiesInitParameters) DeepCopyInto(out *ConnPoolPropertiesInitParameters) {
	*out = *in
	if in.UpstreamConnpoolConnIdleTmo != nil {
		in, out := &in.UpstreamConnpoolConnIdleTmo, &out.UpstreamConnpoolConnIdleTmo
		*out = new(string)
		**out = **in
	}
	if in.UpstreamConnpoolConnLifeTmo != nil {
		in, out := &in.UpstreamConnpoolConnLifeTmo, &out.UpstreamConnpoolConnLifeTmo
		*out = new(string)
		**out = **in
	}
	if in.UpstreamConnpoolConnMaxReuse != nil {
		in, out := &in.UpstreamConnpoolConnMaxReuse, &out.UpstreamConnpoolConnMaxReuse
		*out = new(string)
		**out = **in
	}
	if in.UpstreamConnpoolServerMaxCache != nil {
		in, out := &in.UpstreamConnpoolServerMaxCache, &out.UpstreamConnpoolServerMaxCache
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnPoolPropertiesInitParameters.
func (in *ConnPoolPropertiesInitParameters) DeepCopy() *ConnPoolPropertiesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnPoolPropertiesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnPoolPropertiesObservation) DeepCopyInto(out *ConnPoolPropertiesObservation) {
	*out = *in
	if in.UpstreamConnpoolConnIdleTmo != nil {
		in, out := &in.UpstreamConnpoolConnIdleTmo, &out.UpstreamConnpoolConnIdleTmo
		*out = new(string)
		**out = **in
	}
	if in.UpstreamConnpoolConnLifeTmo != nil {
		in, out := &in.UpstreamConnpoolConnLifeTmo, &out.UpstreamConnpoolConnLifeTmo
		*out = new(string)
		**out = **in
	}
	if in.UpstreamConnpoolConnMaxReuse != nil {
		in, out := &in.UpstreamConnpoolConnMaxReuse, &out.UpstreamConnpoolConnMaxReuse
		*out = new(string)
		**out = **in
	}
	if in.UpstreamConnpoolServerMaxCache != nil {
		in, out := &in.UpstreamConnpoolServerMaxCache, &out.UpstreamConnpoolServerMaxCache
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnPoolPropertiesObservation.
func (in *ConnPoolPropertiesObservation) DeepCopy() *ConnPoolPropertiesObservation {
	if in == nil {
		return nil
	}
	out := new(ConnPoolPropertiesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnPoolPropertiesParameters) DeepCopyInto(out *ConnPoolPropertiesParameters) {
	*out = *in
	if in.UpstreamConnpoolConnIdleTmo != nil {
		in, out := &in.UpstreamConnpoolConnIdleTmo, &out.UpstreamConnpoolConnIdleTmo
		*out = new(string)
		**out = **in
	}
	if in.UpstreamConnpoolConnLifeTmo != nil {
		in, out := &in.UpstreamConnpoolConnLifeTmo, &out.UpstreamConnpoolConnLifeTmo
		*out = new(string)
		**out = **in
	}
	if in.UpstreamConnpoolConnMaxReuse != nil {
		in, out := &in.UpstreamConnpoolConnMaxReuse, &out.UpstreamConnpoolConnMaxReuse
		*out = new(string)
		**out = **in
	}
	if in.UpstreamConnpoolServerMaxCache != nil {
		in, out := &in.UpstreamConnpoolServerMaxCache, &out.UpstreamConnpoolServerMaxCache
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnPoolPropertiesParameters.
func (in *ConnPoolPropertiesParameters) DeepCopy() *ConnPoolPropertiesParameters {
	if in == nil {
		return nil
	}
	out := new(ConnPoolPropertiesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoveredNetworksInitParameters) DeepCopyInto(out *DiscoveredNetworksInitParameters) {
	*out = *in
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]DiscoveredNetworksSubnetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnet6 != nil {
		in, out := &in.Subnet6, &out.Subnet6
		*out = make([]Subnet6InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoveredNetworksInitParameters.
func (in *DiscoveredNetworksInitParameters) DeepCopy() *DiscoveredNetworksInitParameters {
	if in == nil {
		return nil
	}
	out := new(DiscoveredNetworksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoveredNetworksObservation) DeepCopyInto(out *DiscoveredNetworksObservation) {
	*out = *in
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]DiscoveredNetworksSubnetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnet6 != nil {
		in, out := &in.Subnet6, &out.Subnet6
		*out = make([]Subnet6Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoveredNetworksObservation.
func (in *DiscoveredNetworksObservation) DeepCopy() *DiscoveredNetworksObservation {
	if in == nil {
		return nil
	}
	out := new(DiscoveredNetworksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoveredNetworksParameters) DeepCopyInto(out *DiscoveredNetworksParameters) {
	*out = *in
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]DiscoveredNetworksSubnetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnet6 != nil {
		in, out := &in.Subnet6, &out.Subnet6
		*out = make([]Subnet6Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoveredNetworksParameters.
func (in *DiscoveredNetworksParameters) DeepCopy() *DiscoveredNetworksParameters {
	if in == nil {
		return nil
	}
	out := new(DiscoveredNetworksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoveredNetworksSubnetInitParameters) DeepCopyInto(out *DiscoveredNetworksSubnetInitParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]SubnetIPAddrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoveredNetworksSubnetInitParameters.
func (in *DiscoveredNetworksSubnetInitParameters) DeepCopy() *DiscoveredNetworksSubnetInitParameters {
	if in == nil {
		return nil
	}
	out := new(DiscoveredNetworksSubnetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoveredNetworksSubnetObservation) DeepCopyInto(out *DiscoveredNetworksSubnetObservation) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]SubnetIPAddrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoveredNetworksSubnetObservation.
func (in *DiscoveredNetworksSubnetObservation) DeepCopy() *DiscoveredNetworksSubnetObservation {
	if in == nil {
		return nil
	}
	out := new(DiscoveredNetworksSubnetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoveredNetworksSubnetParameters) DeepCopyInto(out *DiscoveredNetworksSubnetParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]SubnetIPAddrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoveredNetworksSubnetParameters.
func (in *DiscoveredNetworksSubnetParameters) DeepCopy() *DiscoveredNetworksSubnetParameters {
	if in == nil {
		return nil
	}
	out := new(DiscoveredNetworksSubnetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FailActionInitParameters) DeepCopyInto(out *FailActionInitParameters) {
	*out = *in
	if in.LocalRsp != nil {
		in, out := &in.LocalRsp, &out.LocalRsp
		*out = make([]LocalRspInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Redirect != nil {
		in, out := &in.Redirect, &out.Redirect
		*out = make([]RedirectInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FailActionInitParameters.
func (in *FailActionInitParameters) DeepCopy() *FailActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(FailActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FailActionObservation) DeepCopyInto(out *FailActionObservation) {
	*out = *in
	if in.LocalRsp != nil {
		in, out := &in.LocalRsp, &out.LocalRsp
		*out = make([]LocalRspObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Redirect != nil {
		in, out := &in.Redirect, &out.Redirect
		*out = make([]RedirectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FailActionObservation.
func (in *FailActionObservation) DeepCopy() *FailActionObservation {
	if in == nil {
		return nil
	}
	out := new(FailActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FailActionParameters) DeepCopyInto(out *FailActionParameters) {
	*out = *in
	if in.LocalRsp != nil {
		in, out := &in.LocalRsp, &out.LocalRsp
		*out = make([]LocalRspParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Redirect != nil {
		in, out := &in.Redirect, &out.Redirect
		*out = make([]RedirectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FailActionParameters.
func (in *FailActionParameters) DeepCopy() *FailActionParameters {
	if in == nil {
		return nil
	}
	out := new(FailActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileInitParameters) DeepCopyInto(out *FileInitParameters) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.FileContent != nil {
		in, out := &in.FileContent, &out.FileContent
		*out = new(string)
		**out = **in
	}
	if in.FileLength != nil {
		in, out := &in.FileLength, &out.FileLength
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileInitParameters.
func (in *FileInitParameters) DeepCopy() *FileInitParameters {
	if in == nil {
		return nil
	}
	out := new(FileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileObservation) DeepCopyInto(out *FileObservation) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.FileContent != nil {
		in, out := &in.FileContent, &out.FileContent
		*out = new(string)
		**out = **in
	}
	if in.FileLength != nil {
		in, out := &in.FileLength, &out.FileLength
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileObservation.
func (in *FileObservation) DeepCopy() *FileObservation {
	if in == nil {
		return nil
	}
	out := new(FileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileParameters) DeepCopyInto(out *FileParameters) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.FileContent != nil {
		in, out := &in.FileContent, &out.FileContent
		*out = new(string)
		**out = **in
	}
	if in.FileLength != nil {
		in, out := &in.FileLength, &out.FileLength
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileParameters.
func (in *FileParameters) DeepCopy() *FileParameters {
	if in == nil {
		return nil
	}
	out := new(FileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HorizonProfileInitParameters) DeepCopyInto(out *HorizonProfileInitParameters) {
	*out = *in
	if in.BlastPort != nil {
		in, out := &in.BlastPort, &out.BlastPort
		*out = new(string)
		**out = **in
	}
	if in.PcoipPort != nil {
		in, out := &in.PcoipPort, &out.PcoipPort
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HorizonProfileInitParameters.
func (in *HorizonProfileInitParameters) DeepCopy() *HorizonProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(HorizonProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HorizonProfileObservation) DeepCopyInto(out *HorizonProfileObservation) {
	*out = *in
	if in.BlastPort != nil {
		in, out := &in.BlastPort, &out.BlastPort
		*out = new(string)
		**out = **in
	}
	if in.PcoipPort != nil {
		in, out := &in.PcoipPort, &out.PcoipPort
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HorizonProfileObservation.
func (in *HorizonProfileObservation) DeepCopy() *HorizonProfileObservation {
	if in == nil {
		return nil
	}
	out := new(HorizonProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HorizonProfileParameters) DeepCopyInto(out *HorizonProfileParameters) {
	*out = *in
	if in.BlastPort != nil {
		in, out := &in.BlastPort, &out.BlastPort
		*out = new(string)
		**out = **in
	}
	if in.PcoipPort != nil {
		in, out := &in.PcoipPort, &out.PcoipPort
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HorizonProfileParameters.
func (in *HorizonProfileParameters) DeepCopy() *HorizonProfileParameters {
	if in == nil {
		return nil
	}
	out := new(HorizonProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostInitParameters) DeepCopyInto(out *HostInitParameters) {
	*out = *in
	if in.Tokens != nil {
		in, out := &in.Tokens, &out.Tokens
		*out = make([]TokensInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostInitParameters.
func (in *HostInitParameters) DeepCopy() *HostInitParameters {
	if in == nil {
		return nil
	}
	out := new(HostInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostObservation) DeepCopyInto(out *HostObservation) {
	*out = *in
	if in.Tokens != nil {
		in, out := &in.Tokens, &out.Tokens
		*out = make([]TokensObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostObservation.
func (in *HostObservation) DeepCopy() *HostObservation {
	if in == nil {
		return nil
	}
	out := new(HostObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostParameters) DeepCopyInto(out *HostParameters) {
	*out = *in
	if in.Tokens != nil {
		in, out := &in.Tokens, &out.Tokens
		*out = make([]TokensParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostParameters.
func (in *HostParameters) DeepCopy() *HostParameters {
	if in == nil {
		return nil
	}
	out := new(HostParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Http2PropertiesInitParameters) DeepCopyInto(out *Http2PropertiesInitParameters) {
	*out = *in
	if in.MaxHttp2ControlFramesPerConnection != nil {
		in, out := &in.MaxHttp2ControlFramesPerConnection, &out.MaxHttp2ControlFramesPerConnection
		*out = new(string)
		**out = **in
	}
	if in.MaxHttp2HeaderFieldSize != nil {
		in, out := &in.MaxHttp2HeaderFieldSize, &out.MaxHttp2HeaderFieldSize
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Http2PropertiesInitParameters.
func (in *Http2PropertiesInitParameters) DeepCopy() *Http2PropertiesInitParameters {
	if in == nil {
		return nil
	}
	out := new(Http2PropertiesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Http2PropertiesObservation) DeepCopyInto(out *Http2PropertiesObservation) {
	*out = *in
	if in.MaxHttp2ControlFramesPerConnection != nil {
		in, out := &in.MaxHttp2ControlFramesPerConnection, &out.MaxHttp2ControlFramesPerConnection
		*out = new(string)
		**out = **in
	}
	if in.MaxHttp2HeaderFieldSize != nil {
		in, out := &in.MaxHttp2HeaderFieldSize, &out.MaxHttp2HeaderFieldSize
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Http2PropertiesObservation.
func (in *Http2PropertiesObservation) DeepCopy() *Http2PropertiesObservation {
	if in == nil {
		return nil
	}
	out := new(Http2PropertiesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Http2PropertiesParameters) DeepCopyInto(out *Http2PropertiesParameters) {
	*out = *in
	if in.MaxHttp2ControlFramesPerConnection != nil {
		in, out := &in.MaxHttp2ControlFramesPerConnection, &out.MaxHttp2ControlFramesPerConnection
		*out = new(string)
		**out = **in
	}
	if in.MaxHttp2HeaderFieldSize != nil {
		in, out := &in.MaxHttp2HeaderFieldSize, &out.MaxHttp2HeaderFieldSize
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Http2PropertiesParameters.
func (in *Http2PropertiesParameters) DeepCopy() *Http2PropertiesParameters {
	if in == nil {
		return nil
	}
	out := new(Http2PropertiesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAddrInitParameters) DeepCopyInto(out *IPAddrInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAddrInitParameters.
func (in *IPAddrInitParameters) DeepCopy() *IPAddrInitParameters {
	if in == nil {
		return nil
	}
	out := new(IPAddrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAddrObservation) DeepCopyInto(out *IPAddrObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAddrObservation.
func (in *IPAddrObservation) DeepCopy() *IPAddrObservation {
	if in == nil {
		return nil
	}
	out := new(IPAddrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAddrParameters) DeepCopyInto(out *IPAddrParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAddrParameters.
func (in *IPAddrParameters) DeepCopy() *IPAddrParameters {
	if in == nil {
		return nil
	}
	out := new(IPAddrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPInitParameters) DeepCopyInto(out *IPInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPInitParameters.
func (in *IPInitParameters) DeepCopy() *IPInitParameters {
	if in == nil {
		return nil
	}
	out := new(IPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPObservation) DeepCopyInto(out *IPObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPObservation.
func (in *IPObservation) DeepCopy() *IPObservation {
	if in == nil {
		return nil
	}
	out := new(IPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPParameters) DeepCopyInto(out *IPParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPParameters.
func (in *IPParameters) DeepCopy() *IPParameters {
	if in == nil {
		return nil
	}
	out := new(IPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalRspInitParameters) DeepCopyInto(out *LocalRspInitParameters) {
	*out = *in
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]FileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalRspInitParameters.
func (in *LocalRspInitParameters) DeepCopy() *LocalRspInitParameters {
	if in == nil {
		return nil
	}
	out := new(LocalRspInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalRspObservation) DeepCopyInto(out *LocalRspObservation) {
	*out = *in
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]FileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalRspObservation.
func (in *LocalRspObservation) DeepCopy() *LocalRspObservation {
	if in == nil {
		return nil
	}
	out := new(LocalRspObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalRspParameters) DeepCopyInto(out *LocalRspParameters) {
	*out = *in
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = make([]FileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalRspParameters.
func (in *LocalRspParameters) DeepCopy() *LocalRspParameters {
	if in == nil {
		return nil
	}
	out := new(LocalRspParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocationInitParameters) DeepCopyInto(out *LocationInitParameters) {
	*out = *in
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(string)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocationInitParameters.
func (in *LocationInitParameters) DeepCopy() *LocationInitParameters {
	if in == nil {
		return nil
	}
	out := new(LocationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocationObservation) DeepCopyInto(out *LocationObservation) {
	*out = *in
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(string)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocationObservation.
func (in *LocationObservation) DeepCopy() *LocationObservation {
	if in == nil {
		return nil
	}
	out := new(LocationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocationParameters) DeepCopyInto(out *LocationParameters) {
	*out = *in
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(string)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocationParameters.
func (in *LocationParameters) DeepCopy() *LocationParameters {
	if in == nil {
		return nil
	}
	out := new(LocationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MarkersInitParameters) DeepCopyInto(out *MarkersInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MarkersInitParameters.
func (in *MarkersInitParameters) DeepCopy() *MarkersInitParameters {
	if in == nil {
		return nil
	}
	out := new(MarkersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MarkersObservation) DeepCopyInto(out *MarkersObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MarkersObservation.
func (in *MarkersObservation) DeepCopy() *MarkersObservation {
	if in == nil {
		return nil
	}
	out := new(MarkersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MarkersParameters) DeepCopyInto(out *MarkersParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MarkersParameters.
func (in *MarkersParameters) DeepCopy() *MarkersParameters {
	if in == nil {
		return nil
	}
	out := new(MarkersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaxConnRatePerServerInitParameters) DeepCopyInto(out *MaxConnRatePerServerInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]ActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExplicitTracking != nil {
		in, out := &in.ExplicitTracking, &out.ExplicitTracking
		*out = new(string)
		**out = **in
	}
	if in.FineGrain != nil {
		in, out := &in.FineGrain, &out.FineGrain
		*out = new(string)
		**out = **in
	}
	if in.HTTPCookie != nil {
		in, out := &in.HTTPCookie, &out.HTTPCookie
		*out = new(string)
		**out = **in
	}
	if in.HTTPHeader != nil {
		in, out := &in.HTTPHeader, &out.HTTPHeader
		*out = new(string)
		**out = **in
	}
	if in.RateLimiter != nil {
		in, out := &in.RateLimiter, &out.RateLimiter
		*out = make([]RateLimiterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaxConnRatePerServerInitParameters.
func (in *MaxConnRatePerServerInitParameters) DeepCopy() *MaxConnRatePerServerInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaxConnRatePerServerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaxConnRatePerServerObservation) DeepCopyInto(out *MaxConnRatePerServerObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]ActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExplicitTracking != nil {
		in, out := &in.ExplicitTracking, &out.ExplicitTracking
		*out = new(string)
		**out = **in
	}
	if in.FineGrain != nil {
		in, out := &in.FineGrain, &out.FineGrain
		*out = new(string)
		**out = **in
	}
	if in.HTTPCookie != nil {
		in, out := &in.HTTPCookie, &out.HTTPCookie
		*out = new(string)
		**out = **in
	}
	if in.HTTPHeader != nil {
		in, out := &in.HTTPHeader, &out.HTTPHeader
		*out = new(string)
		**out = **in
	}
	if in.RateLimiter != nil {
		in, out := &in.RateLimiter, &out.RateLimiter
		*out = make([]RateLimiterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaxConnRatePerServerObservation.
func (in *MaxConnRatePerServerObservation) DeepCopy() *MaxConnRatePerServerObservation {
	if in == nil {
		return nil
	}
	out := new(MaxConnRatePerServerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaxConnRatePerServerParameters) DeepCopyInto(out *MaxConnRatePerServerParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]ActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExplicitTracking != nil {
		in, out := &in.ExplicitTracking, &out.ExplicitTracking
		*out = new(string)
		**out = **in
	}
	if in.FineGrain != nil {
		in, out := &in.FineGrain, &out.FineGrain
		*out = new(string)
		**out = **in
	}
	if in.HTTPCookie != nil {
		in, out := &in.HTTPCookie, &out.HTTPCookie
		*out = new(string)
		**out = **in
	}
	if in.HTTPHeader != nil {
		in, out := &in.HTTPHeader, &out.HTTPHeader
		*out = new(string)
		**out = **in
	}
	if in.RateLimiter != nil {
		in, out := &in.RateLimiter, &out.RateLimiter
		*out = make([]RateLimiterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaxConnRatePerServerParameters.
func (in *MaxConnRatePerServerParameters) DeepCopy() *MaxConnRatePerServerParameters {
	if in == nil {
		return nil
	}
	out := new(MaxConnRatePerServerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworksInitParameters) DeepCopyInto(out *NetworksInitParameters) {
	*out = *in
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.ServerFilter != nil {
		in, out := &in.ServerFilter, &out.ServerFilter
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworksInitParameters.
func (in *NetworksInitParameters) DeepCopy() *NetworksInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworksObservation) DeepCopyInto(out *NetworksObservation) {
	*out = *in
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.ServerFilter != nil {
		in, out := &in.ServerFilter, &out.ServerFilter
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworksObservation.
func (in *NetworksObservation) DeepCopy() *NetworksObservation {
	if in == nil {
		return nil
	}
	out := new(NetworksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworksParameters) DeepCopyInto(out *NetworksParameters) {
	*out = *in
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.ServerFilter != nil {
		in, out := &in.ServerFilter, &out.ServerFilter
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworksParameters.
func (in *NetworksParameters) DeepCopy() *NetworksParameters {
	if in == nil {
		return nil
	}
	out := new(NetworksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathInitParameters) DeepCopyInto(out *PathInitParameters) {
	*out = *in
	if in.Tokens != nil {
		in, out := &in.Tokens, &out.Tokens
		*out = make([]PathTokensInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathInitParameters.
func (in *PathInitParameters) DeepCopy() *PathInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathObservation) DeepCopyInto(out *PathObservation) {
	*out = *in
	if in.Tokens != nil {
		in, out := &in.Tokens, &out.Tokens
		*out = make([]PathTokensObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathObservation.
func (in *PathObservation) DeepCopy() *PathObservation {
	if in == nil {
		return nil
	}
	out := new(PathObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathParameters) DeepCopyInto(out *PathParameters) {
	*out = *in
	if in.Tokens != nil {
		in, out := &in.Tokens, &out.Tokens
		*out = make([]PathTokensParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathParameters.
func (in *PathParameters) DeepCopy() *PathParameters {
	if in == nil {
		return nil
	}
	out := new(PathParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathTokensInitParameters) DeepCopyInto(out *PathTokensInitParameters) {
	*out = *in
	if in.EndIndex != nil {
		in, out := &in.EndIndex, &out.EndIndex
		*out = new(string)
		**out = **in
	}
	if in.StartIndex != nil {
		in, out := &in.StartIndex, &out.StartIndex
		*out = new(string)
		**out = **in
	}
	if in.StrValue != nil {
		in, out := &in.StrValue, &out.StrValue
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathTokensInitParameters.
func (in *PathTokensInitParameters) DeepCopy() *PathTokensInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathTokensInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathTokensObservation) DeepCopyInto(out *PathTokensObservation) {
	*out = *in
	if in.EndIndex != nil {
		in, out := &in.EndIndex, &out.EndIndex
		*out = new(string)
		**out = **in
	}
	if in.StartIndex != nil {
		in, out := &in.StartIndex, &out.StartIndex
		*out = new(string)
		**out = **in
	}
	if in.StrValue != nil {
		in, out := &in.StrValue, &out.StrValue
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathTokensObservation.
func (in *PathTokensObservation) DeepCopy() *PathTokensObservation {
	if in == nil {
		return nil
	}
	out := new(PathTokensObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathTokensParameters) DeepCopyInto(out *PathTokensParameters) {
	*out = *in
	if in.EndIndex != nil {
		in, out := &in.EndIndex, &out.EndIndex
		*out = new(string)
		**out = **in
	}
	if in.StartIndex != nil {
		in, out := &in.StartIndex, &out.StartIndex
		*out = new(string)
		**out = **in
	}
	if in.StrValue != nil {
		in, out := &in.StrValue, &out.StrValue
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathTokensParameters.
func (in *PathTokensParameters) DeepCopy() *PathTokensParameters {
	if in == nil {
		return nil
	}
	out := new(PathTokensParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementNetworksInitParameters) DeepCopyInto(out *PlacementNetworksInitParameters) {
	*out = *in
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]SubnetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementNetworksInitParameters.
func (in *PlacementNetworksInitParameters) DeepCopy() *PlacementNetworksInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementNetworksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementNetworksObservation) DeepCopyInto(out *PlacementNetworksObservation) {
	*out = *in
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]SubnetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementNetworksObservation.
func (in *PlacementNetworksObservation) DeepCopy() *PlacementNetworksObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementNetworksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementNetworksParameters) DeepCopyInto(out *PlacementNetworksParameters) {
	*out = *in
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = make([]SubnetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementNetworksParameters.
func (in *PlacementNetworksParameters) DeepCopy() *PlacementNetworksParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementNetworksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Pool) DeepCopyInto(out *Pool) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Pool.
func (in *Pool) DeepCopy() *Pool {
	if in == nil {
		return nil
	}
	out := new(Pool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Pool) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoolInitParameters) DeepCopyInto(out *PoolInitParameters) {
	*out = *in
	if in.AnalyticsPolicy != nil {
		in, out := &in.AnalyticsPolicy, &out.AnalyticsPolicy
		*out = make([]AnalyticsPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AnalyticsProfileRef != nil {
		in, out := &in.AnalyticsProfileRef, &out.AnalyticsProfileRef
		*out = new(string)
		**out = **in
	}
	if in.AppendPort != nil {
		in, out := &in.AppendPort, &out.AppendPort
		*out = new(string)
		**out = **in
	}
	if in.ApplicationPersistenceProfileRef != nil {
		in, out := &in.ApplicationPersistenceProfileRef, &out.ApplicationPersistenceProfileRef
		*out = new(string)
		**out = **in
	}
	if in.AutoscaleLaunchConfigRef != nil {
		in, out := &in.AutoscaleLaunchConfigRef, &out.AutoscaleLaunchConfigRef
		*out = new(string)
		**out = **in
	}
	if in.AutoscaleNetworks != nil {
		in, out := &in.AutoscaleNetworks, &out.AutoscaleNetworks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AutoscalePolicyRef != nil {
		in, out := &in.AutoscalePolicyRef, &out.AutoscalePolicyRef
		*out = new(string)
		**out = **in
	}
	if in.CapacityEstimation != nil {
		in, out := &in.CapacityEstimation, &out.CapacityEstimation
		*out = new(string)
		**out = **in
	}
	if in.CapacityEstimationTtfbThresh != nil {
		in, out := &in.CapacityEstimationTtfbThresh, &out.CapacityEstimationTtfbThresh
		*out = new(string)
		**out = **in
	}
	if in.CloudConfigCksum != nil {
		in, out := &in.CloudConfigCksum, &out.CloudConfigCksum
		*out = new(string)
		**out = **in
	}
	if in.CloudRef != nil {
		in, out := &in.CloudRef, &out.CloudRef
		*out = new(string)
		**out = **in
	}
	if in.ConfigpbAttributes != nil {
		in, out := &in.ConfigpbAttributes, &out.ConfigpbAttributes
		*out = make([]ConfigpbAttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnPoolProperties != nil {
		in, out := &in.ConnPoolProperties, &out.ConnPoolProperties
		*out = make([]ConnPoolPropertiesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnectionRampDuration != nil {
		in, out := &in.ConnectionRampDuration, &out.ConnectionRampDuration
		*out = new(string)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.DefaultServerPort != nil {
		in, out := &in.DefaultServerPort, &out.DefaultServerPort
		*out = new(string)
		**out = **in
	}
	if in.DeleteServerOnDNSRefresh != nil {
		in, out := &in.DeleteServerOnDNSRefresh, &out.DeleteServerOnDNSRefresh
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EastWest != nil {
		in, out := &in.EastWest, &out.EastWest
		*out = new(string)
		**out = **in
	}
	if in.EnableHttp2 != nil {
		in, out := &in.EnableHttp2, &out.EnableHttp2
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.ExternalAutoscaleGroups != nil {
		in, out := &in.ExternalAutoscaleGroups, &out.ExternalAutoscaleGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FailAction != nil {
		in, out := &in.FailAction, &out.FailAction
		*out = make([]FailActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FewestTasksFeedbackDelay != nil {
		in, out := &in.FewestTasksFeedbackDelay, &out.FewestTasksFeedbackDelay
		*out = new(string)
		**out = **in
	}
	if in.GracefulDisableTimeout != nil {
		in, out := &in.GracefulDisableTimeout, &out.GracefulDisableTimeout
		*out = new(string)
		**out = **in
	}
	if in.GracefulHmDownDisableTimeout != nil {
		in, out := &in.GracefulHmDownDisableTimeout, &out.GracefulHmDownDisableTimeout
		*out = new(string)
		**out = **in
	}
	if in.GslbSpEnabled != nil {
		in, out := &in.GslbSpEnabled, &out.GslbSpEnabled
		*out = new(string)
		**out = **in
	}
	if in.HealthMonitorRefs != nil {
		in, out := &in.HealthMonitorRefs, &out.HealthMonitorRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HorizonProfile != nil {
		in, out := &in.HorizonProfile, &out.HorizonProfile
		*out = make([]HorizonProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HostCheckEnabled != nil {
		in, out := &in.HostCheckEnabled, &out.HostCheckEnabled
		*out = new(string)
		**out = **in
	}
	if in.Http2Properties != nil {
		in, out := &in.Http2Properties, &out.Http2Properties
		*out = make([]Http2PropertiesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IgnoreServerPort != nil {
		in, out := &in.IgnoreServerPort, &out.IgnoreServerPort
		*out = new(string)
		**out = **in
	}
	if in.IgnoreServers != nil {
		in, out := &in.IgnoreServers, &out.IgnoreServers
		*out = new(bool)
		**out = **in
	}
	if in.InlineHealthMonitor != nil {
		in, out := &in.InlineHealthMonitor, &out.InlineHealthMonitor
		*out = new(string)
		**out = **in
	}
	if in.IpaddrgroupRef != nil {
		in, out := &in.IpaddrgroupRef, &out.IpaddrgroupRef
		*out = new(string)
		**out = **in
	}
	if in.LBAlgoRrPerSe != nil {
		in, out := &in.LBAlgoRrPerSe, &out.LBAlgoRrPerSe
		*out = new(string)
		**out = **in
	}
	if in.LBAlgorithm != nil {
		in, out := &in.LBAlgorithm, &out.LBAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.LBAlgorithmConsistentHashHdr != nil {
		in, out := &in.LBAlgorithmConsistentHashHdr, &out.LBAlgorithmConsistentHashHdr
		*out = new(string)
		**out = **in
	}
	if in.LBAlgorithmCoreNonaffinity != nil {
		in, out := &in.LBAlgorithmCoreNonaffinity, &out.LBAlgorithmCoreNonaffinity
		*out = new(string)
		**out = **in
	}
	if in.LBAlgorithmHash != nil {
		in, out := &in.LBAlgorithmHash, &out.LBAlgorithmHash
		*out = new(string)
		**out = **in
	}
	if in.LookupServerByName != nil {
		in, out := &in.LookupServerByName, &out.LookupServerByName
		*out = new(string)
		**out = **in
	}
	if in.Markers != nil {
		in, out := &in.Markers, &out.Markers
		*out = make([]MarkersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxConcurrentConnectionsPerServer != nil {
		in, out := &in.MaxConcurrentConnectionsPerServer, &out.MaxConcurrentConnectionsPerServer
		*out = new(string)
		**out = **in
	}
	if in.MaxConnRatePerServer != nil {
		in, out := &in.MaxConnRatePerServer, &out.MaxConnRatePerServer
		*out = make([]MaxConnRatePerServerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinHealthMonitorsUp != nil {
		in, out := &in.MinHealthMonitorsUp, &out.MinHealthMonitorsUp
		*out = new(string)
		**out = **in
	}
	if in.MinServersUp != nil {
		in, out := &in.MinServersUp, &out.MinServersUp
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Networks != nil {
		in, out := &in.Networks, &out.Networks
		*out = make([]NetworksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsxSecuritygroup != nil {
		in, out := &in.NsxSecuritygroup, &out.NsxSecuritygroup
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PkiProfileRef != nil {
		in, out := &in.PkiProfileRef, &out.PkiProfileRef
		*out = new(string)
		**out = **in
	}
	if in.PlacementNetworks != nil {
		in, out := &in.PlacementNetworks, &out.PlacementNetworks
		*out = make([]PlacementNetworksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PoolType != nil {
		in, out := &in.PoolType, &out.PoolType
		*out = new(string)
		**out = **in
	}
	if in.RequestQueueDepth != nil {
		in, out := &in.RequestQueueDepth, &out.RequestQueueDepth
		*out = new(string)
		**out = **in
	}
	if in.RequestQueueEnabled != nil {
		in, out := &in.RequestQueueEnabled, &out.RequestQueueEnabled
		*out = new(string)
		**out = **in
	}
	if in.ResolvePoolByDNS != nil {
		in, out := &in.ResolvePoolByDNS, &out.ResolvePoolByDNS
		*out = new(string)
		**out = **in
	}
	if in.RewriteHostHeaderToServerName != nil {
		in, out := &in.RewriteHostHeaderToServerName, &out.RewriteHostHeaderToServerName
		*out = new(string)
		**out = **in
	}
	if in.RewriteHostHeaderToSni != nil {
		in, out := &in.RewriteHostHeaderToSni, &out.RewriteHostHeaderToSni
		*out = new(string)
		**out = **in
	}
	if in.RoutingPool != nil {
		in, out := &in.RoutingPool, &out.RoutingPool
		*out = new(string)
		**out = **in
	}
	if in.SSLKeyAndCertificateRef != nil {
		in, out := &in.SSLKeyAndCertificateRef, &out.SSLKeyAndCertificateRef
		*out = new(string)
		**out = **in
	}
	if in.SSLProfileRef != nil {
		in, out := &in.SSLProfileRef, &out.SSLProfileRef
		*out = new(string)
		**out = **in
	}
	if in.ServerDisableType != nil {
		in, out := &in.ServerDisableType, &out.ServerDisableType
		*out = new(string)
		**out = **in
	}
	if in.ServerName != nil {
		in, out := &in.ServerName, &out.ServerName
		*out = new(string)
		**out = **in
	}
	if in.ServerReselect != nil {
		in, out := &in.ServerReselect, &out.ServerReselect
		*out = make([]ServerReselectInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServerTimeout != nil {
		in, out := &in.ServerTimeout, &out.ServerTimeout
		*out = new(string)
		**out = **in
	}
	if in.Servers != nil {
		in, out := &in.Servers, &out.Servers
		*out = make([]ServersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceMetadata != nil {
		in, out := &in.ServiceMetadata, &out.ServiceMetadata
		*out = new(string)
		**out = **in
	}
	if in.SniEnabled != nil {
		in, out := &in.SniEnabled, &out.SniEnabled
		*out = new(string)
		**out = **in
	}
	if in.SpGsInfo != nil {
		in, out := &in.SpGsInfo, &out.SpGsInfo
		*out = make([]SpGsInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TenantRef != nil {
		in, out := &in.TenantRef, &out.TenantRef
		*out = new(string)
		**out = **in
	}
	if in.Tier1Lr != nil {
		in, out := &in.Tier1Lr, &out.Tier1Lr
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.UseServicePort != nil {
		in, out := &in.UseServicePort, &out.UseServicePort
		*out = new(string)
		**out = **in
	}
	if in.UseServiceSSLMode != nil {
		in, out := &in.UseServiceSSLMode, &out.UseServiceSSLMode
		*out = new(string)
		**out = **in
	}
	if in.VrfRef != nil {
		in, out := &in.VrfRef, &out.VrfRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoolInitParameters.
func (in *PoolInitParameters) DeepCopy() *PoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(PoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoolList) DeepCopyInto(out *PoolList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Pool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoolList.
func (in *PoolList) DeepCopy() *PoolList {
	if in == nil {
		return nil
	}
	out := new(PoolList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PoolList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoolObservation) DeepCopyInto(out *PoolObservation) {
	*out = *in
	if in.AnalyticsPolicy != nil {
		in, out := &in.AnalyticsPolicy, &out.AnalyticsPolicy
		*out = make([]AnalyticsPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AnalyticsProfileRef != nil {
		in, out := &in.AnalyticsProfileRef, &out.AnalyticsProfileRef
		*out = new(string)
		**out = **in
	}
	if in.AppendPort != nil {
		in, out := &in.AppendPort, &out.AppendPort
		*out = new(string)
		**out = **in
	}
	if in.ApplicationPersistenceProfileRef != nil {
		in, out := &in.ApplicationPersistenceProfileRef, &out.ApplicationPersistenceProfileRef
		*out = new(string)
		**out = **in
	}
	if in.AutoscaleLaunchConfigRef != nil {
		in, out := &in.AutoscaleLaunchConfigRef, &out.AutoscaleLaunchConfigRef
		*out = new(string)
		**out = **in
	}
	if in.AutoscaleNetworks != nil {
		in, out := &in.AutoscaleNetworks, &out.AutoscaleNetworks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AutoscalePolicyRef != nil {
		in, out := &in.AutoscalePolicyRef, &out.AutoscalePolicyRef
		*out = new(string)
		**out = **in
	}
	if in.CapacityEstimation != nil {
		in, out := &in.CapacityEstimation, &out.CapacityEstimation
		*out = new(string)
		**out = **in
	}
	if in.CapacityEstimationTtfbThresh != nil {
		in, out := &in.CapacityEstimationTtfbThresh, &out.CapacityEstimationTtfbThresh
		*out = new(string)
		**out = **in
	}
	if in.CloudConfigCksum != nil {
		in, out := &in.CloudConfigCksum, &out.CloudConfigCksum
		*out = new(string)
		**out = **in
	}
	if in.CloudRef != nil {
		in, out := &in.CloudRef, &out.CloudRef
		*out = new(string)
		**out = **in
	}
	if in.ConfigpbAttributes != nil {
		in, out := &in.ConfigpbAttributes, &out.ConfigpbAttributes
		*out = make([]ConfigpbAttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnPoolProperties != nil {
		in, out := &in.ConnPoolProperties, &out.ConnPoolProperties
		*out = make([]ConnPoolPropertiesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnectionRampDuration != nil {
		in, out := &in.ConnectionRampDuration, &out.ConnectionRampDuration
		*out = new(string)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.DefaultServerPort != nil {
		in, out := &in.DefaultServerPort, &out.DefaultServerPort
		*out = new(string)
		**out = **in
	}
	if in.DeleteServerOnDNSRefresh != nil {
		in, out := &in.DeleteServerOnDNSRefresh, &out.DeleteServerOnDNSRefresh
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EastWest != nil {
		in, out := &in.EastWest, &out.EastWest
		*out = new(string)
		**out = **in
	}
	if in.EnableHttp2 != nil {
		in, out := &in.EnableHttp2, &out.EnableHttp2
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.ExternalAutoscaleGroups != nil {
		in, out := &in.ExternalAutoscaleGroups, &out.ExternalAutoscaleGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FailAction != nil {
		in, out := &in.FailAction, &out.FailAction
		*out = make([]FailActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FewestTasksFeedbackDelay != nil {
		in, out := &in.FewestTasksFeedbackDelay, &out.FewestTasksFeedbackDelay
		*out = new(string)
		**out = **in
	}
	if in.GracefulDisableTimeout != nil {
		in, out := &in.GracefulDisableTimeout, &out.GracefulDisableTimeout
		*out = new(string)
		**out = **in
	}
	if in.GracefulHmDownDisableTimeout != nil {
		in, out := &in.GracefulHmDownDisableTimeout, &out.GracefulHmDownDisableTimeout
		*out = new(string)
		**out = **in
	}
	if in.GslbSpEnabled != nil {
		in, out := &in.GslbSpEnabled, &out.GslbSpEnabled
		*out = new(string)
		**out = **in
	}
	if in.HealthMonitorRefs != nil {
		in, out := &in.HealthMonitorRefs, &out.HealthMonitorRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HorizonProfile != nil {
		in, out := &in.HorizonProfile, &out.HorizonProfile
		*out = make([]HorizonProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HostCheckEnabled != nil {
		in, out := &in.HostCheckEnabled, &out.HostCheckEnabled
		*out = new(string)
		**out = **in
	}
	if in.Http2Properties != nil {
		in, out := &in.Http2Properties, &out.Http2Properties
		*out = make([]Http2PropertiesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IgnoreServerPort != nil {
		in, out := &in.IgnoreServerPort, &out.IgnoreServerPort
		*out = new(string)
		**out = **in
	}
	if in.IgnoreServers != nil {
		in, out := &in.IgnoreServers, &out.IgnoreServers
		*out = new(bool)
		**out = **in
	}
	if in.InlineHealthMonitor != nil {
		in, out := &in.InlineHealthMonitor, &out.InlineHealthMonitor
		*out = new(string)
		**out = **in
	}
	if in.IpaddrgroupRef != nil {
		in, out := &in.IpaddrgroupRef, &out.IpaddrgroupRef
		*out = new(string)
		**out = **in
	}
	if in.LBAlgoRrPerSe != nil {
		in, out := &in.LBAlgoRrPerSe, &out.LBAlgoRrPerSe
		*out = new(string)
		**out = **in
	}
	if in.LBAlgorithm != nil {
		in, out := &in.LBAlgorithm, &out.LBAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.LBAlgorithmConsistentHashHdr != nil {
		in, out := &in.LBAlgorithmConsistentHashHdr, &out.LBAlgorithmConsistentHashHdr
		*out = new(string)
		**out = **in
	}
	if in.LBAlgorithmCoreNonaffinity != nil {
		in, out := &in.LBAlgorithmCoreNonaffinity, &out.LBAlgorithmCoreNonaffinity
		*out = new(string)
		**out = **in
	}
	if in.LBAlgorithmHash != nil {
		in, out := &in.LBAlgorithmHash, &out.LBAlgorithmHash
		*out = new(string)
		**out = **in
	}
	if in.LookupServerByName != nil {
		in, out := &in.LookupServerByName, &out.LookupServerByName
		*out = new(string)
		**out = **in
	}
	if in.Markers != nil {
		in, out := &in.Markers, &out.Markers
		*out = make([]MarkersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxConcurrentConnectionsPerServer != nil {
		in, out := &in.MaxConcurrentConnectionsPerServer, &out.MaxConcurrentConnectionsPerServer
		*out = new(string)
		**out = **in
	}
	if in.MaxConnRatePerServer != nil {
		in, out := &in.MaxConnRatePerServer, &out.MaxConnRatePerServer
		*out = make([]MaxConnRatePerServerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinHealthMonitorsUp != nil {
		in, out := &in.MinHealthMonitorsUp, &out.MinHealthMonitorsUp
		*out = new(string)
		**out = **in
	}
	if in.MinServersUp != nil {
		in, out := &in.MinServersUp, &out.MinServersUp
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Networks != nil {
		in, out := &in.Networks, &out.Networks
		*out = make([]NetworksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsxSecuritygroup != nil {
		in, out := &in.NsxSecuritygroup, &out.NsxSecuritygroup
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PkiProfileRef != nil {
		in, out := &in.PkiProfileRef, &out.PkiProfileRef
		*out = new(string)
		**out = **in
	}
	if in.PlacementNetworks != nil {
		in, out := &in.PlacementNetworks, &out.PlacementNetworks
		*out = make([]PlacementNetworksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PoolType != nil {
		in, out := &in.PoolType, &out.PoolType
		*out = new(string)
		**out = **in
	}
	if in.RequestQueueDepth != nil {
		in, out := &in.RequestQueueDepth, &out.RequestQueueDepth
		*out = new(string)
		**out = **in
	}
	if in.RequestQueueEnabled != nil {
		in, out := &in.RequestQueueEnabled, &out.RequestQueueEnabled
		*out = new(string)
		**out = **in
	}
	if in.ResolvePoolByDNS != nil {
		in, out := &in.ResolvePoolByDNS, &out.ResolvePoolByDNS
		*out = new(string)
		**out = **in
	}
	if in.RewriteHostHeaderToServerName != nil {
		in, out := &in.RewriteHostHeaderToServerName, &out.RewriteHostHeaderToServerName
		*out = new(string)
		**out = **in
	}
	if in.RewriteHostHeaderToSni != nil {
		in, out := &in.RewriteHostHeaderToSni, &out.RewriteHostHeaderToSni
		*out = new(string)
		**out = **in
	}
	if in.RoutingPool != nil {
		in, out := &in.RoutingPool, &out.RoutingPool
		*out = new(string)
		**out = **in
	}
	if in.SSLKeyAndCertificateRef != nil {
		in, out := &in.SSLKeyAndCertificateRef, &out.SSLKeyAndCertificateRef
		*out = new(string)
		**out = **in
	}
	if in.SSLProfileRef != nil {
		in, out := &in.SSLProfileRef, &out.SSLProfileRef
		*out = new(string)
		**out = **in
	}
	if in.ServerDisableType != nil {
		in, out := &in.ServerDisableType, &out.ServerDisableType
		*out = new(string)
		**out = **in
	}
	if in.ServerName != nil {
		in, out := &in.ServerName, &out.ServerName
		*out = new(string)
		**out = **in
	}
	if in.ServerReselect != nil {
		in, out := &in.ServerReselect, &out.ServerReselect
		*out = make([]ServerReselectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServerTimeout != nil {
		in, out := &in.ServerTimeout, &out.ServerTimeout
		*out = new(string)
		**out = **in
	}
	if in.Servers != nil {
		in, out := &in.Servers, &out.Servers
		*out = make([]ServersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceMetadata != nil {
		in, out := &in.ServiceMetadata, &out.ServiceMetadata
		*out = new(string)
		**out = **in
	}
	if in.SniEnabled != nil {
		in, out := &in.SniEnabled, &out.SniEnabled
		*out = new(string)
		**out = **in
	}
	if in.SpGsInfo != nil {
		in, out := &in.SpGsInfo, &out.SpGsInfo
		*out = make([]SpGsInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TenantRef != nil {
		in, out := &in.TenantRef, &out.TenantRef
		*out = new(string)
		**out = **in
	}
	if in.Tier1Lr != nil {
		in, out := &in.Tier1Lr, &out.Tier1Lr
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.UseServicePort != nil {
		in, out := &in.UseServicePort, &out.UseServicePort
		*out = new(string)
		**out = **in
	}
	if in.UseServiceSSLMode != nil {
		in, out := &in.UseServiceSSLMode, &out.UseServiceSSLMode
		*out = new(string)
		**out = **in
	}
	if in.VrfRef != nil {
		in, out := &in.VrfRef, &out.VrfRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoolObservation.
func (in *PoolObservation) DeepCopy() *PoolObservation {
	if in == nil {
		return nil
	}
	out := new(PoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoolParameters) DeepCopyInto(out *PoolParameters) {
	*out = *in
	if in.AnalyticsPolicy != nil {
		in, out := &in.AnalyticsPolicy, &out.AnalyticsPolicy
		*out = make([]AnalyticsPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AnalyticsProfileRef != nil {
		in, out := &in.AnalyticsProfileRef, &out.AnalyticsProfileRef
		*out = new(string)
		**out = **in
	}
	if in.AppendPort != nil {
		in, out := &in.AppendPort, &out.AppendPort
		*out = new(string)
		**out = **in
	}
	if in.ApplicationPersistenceProfileRef != nil {
		in, out := &in.ApplicationPersistenceProfileRef, &out.ApplicationPersistenceProfileRef
		*out = new(string)
		**out = **in
	}
	if in.AutoscaleLaunchConfigRef != nil {
		in, out := &in.AutoscaleLaunchConfigRef, &out.AutoscaleLaunchConfigRef
		*out = new(string)
		**out = **in
	}
	if in.AutoscaleNetworks != nil {
		in, out := &in.AutoscaleNetworks, &out.AutoscaleNetworks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AutoscalePolicyRef != nil {
		in, out := &in.AutoscalePolicyRef, &out.AutoscalePolicyRef
		*out = new(string)
		**out = **in
	}
	if in.CapacityEstimation != nil {
		in, out := &in.CapacityEstimation, &out.CapacityEstimation
		*out = new(string)
		**out = **in
	}
	if in.CapacityEstimationTtfbThresh != nil {
		in, out := &in.CapacityEstimationTtfbThresh, &out.CapacityEstimationTtfbThresh
		*out = new(string)
		**out = **in
	}
	if in.CloudConfigCksum != nil {
		in, out := &in.CloudConfigCksum, &out.CloudConfigCksum
		*out = new(string)
		**out = **in
	}
	if in.CloudRef != nil {
		in, out := &in.CloudRef, &out.CloudRef
		*out = new(string)
		**out = **in
	}
	if in.ConfigpbAttributes != nil {
		in, out := &in.ConfigpbAttributes, &out.ConfigpbAttributes
		*out = make([]ConfigpbAttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnPoolProperties != nil {
		in, out := &in.ConnPoolProperties, &out.ConnPoolProperties
		*out = make([]ConnPoolPropertiesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnectionRampDuration != nil {
		in, out := &in.ConnectionRampDuration, &out.ConnectionRampDuration
		*out = new(string)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.DefaultServerPort != nil {
		in, out := &in.DefaultServerPort, &out.DefaultServerPort
		*out = new(string)
		**out = **in
	}
	if in.DeleteServerOnDNSRefresh != nil {
		in, out := &in.DeleteServerOnDNSRefresh, &out.DeleteServerOnDNSRefresh
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EastWest != nil {
		in, out := &in.EastWest, &out.EastWest
		*out = new(string)
		**out = **in
	}
	if in.EnableHttp2 != nil {
		in, out := &in.EnableHttp2, &out.EnableHttp2
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.ExternalAutoscaleGroups != nil {
		in, out := &in.ExternalAutoscaleGroups, &out.ExternalAutoscaleGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FailAction != nil {
		in, out := &in.FailAction, &out.FailAction
		*out = make([]FailActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FewestTasksFeedbackDelay != nil {
		in, out := &in.FewestTasksFeedbackDelay, &out.FewestTasksFeedbackDelay
		*out = new(string)
		**out = **in
	}
	if in.GracefulDisableTimeout != nil {
		in, out := &in.GracefulDisableTimeout, &out.GracefulDisableTimeout
		*out = new(string)
		**out = **in
	}
	if in.GracefulHmDownDisableTimeout != nil {
		in, out := &in.GracefulHmDownDisableTimeout, &out.GracefulHmDownDisableTimeout
		*out = new(string)
		**out = **in
	}
	if in.GslbSpEnabled != nil {
		in, out := &in.GslbSpEnabled, &out.GslbSpEnabled
		*out = new(string)
		**out = **in
	}
	if in.HealthMonitorRefs != nil {
		in, out := &in.HealthMonitorRefs, &out.HealthMonitorRefs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HorizonProfile != nil {
		in, out := &in.HorizonProfile, &out.HorizonProfile
		*out = make([]HorizonProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HostCheckEnabled != nil {
		in, out := &in.HostCheckEnabled, &out.HostCheckEnabled
		*out = new(string)
		**out = **in
	}
	if in.Http2Properties != nil {
		in, out := &in.Http2Properties, &out.Http2Properties
		*out = make([]Http2PropertiesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IgnoreServerPort != nil {
		in, out := &in.IgnoreServerPort, &out.IgnoreServerPort
		*out = new(string)
		**out = **in
	}
	if in.IgnoreServers != nil {
		in, out := &in.IgnoreServers, &out.IgnoreServers
		*out = new(bool)
		**out = **in
	}
	if in.InlineHealthMonitor != nil {
		in, out := &in.InlineHealthMonitor, &out.InlineHealthMonitor
		*out = new(string)
		**out = **in
	}
	if in.IpaddrgroupRef != nil {
		in, out := &in.IpaddrgroupRef, &out.IpaddrgroupRef
		*out = new(string)
		**out = **in
	}
	if in.LBAlgoRrPerSe != nil {
		in, out := &in.LBAlgoRrPerSe, &out.LBAlgoRrPerSe
		*out = new(string)
		**out = **in
	}
	if in.LBAlgorithm != nil {
		in, out := &in.LBAlgorithm, &out.LBAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.LBAlgorithmConsistentHashHdr != nil {
		in, out := &in.LBAlgorithmConsistentHashHdr, &out.LBAlgorithmConsistentHashHdr
		*out = new(string)
		**out = **in
	}
	if in.LBAlgorithmCoreNonaffinity != nil {
		in, out := &in.LBAlgorithmCoreNonaffinity, &out.LBAlgorithmCoreNonaffinity
		*out = new(string)
		**out = **in
	}
	if in.LBAlgorithmHash != nil {
		in, out := &in.LBAlgorithmHash, &out.LBAlgorithmHash
		*out = new(string)
		**out = **in
	}
	if in.LookupServerByName != nil {
		in, out := &in.LookupServerByName, &out.LookupServerByName
		*out = new(string)
		**out = **in
	}
	if in.Markers != nil {
		in, out := &in.Markers, &out.Markers
		*out = make([]MarkersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxConcurrentConnectionsPerServer != nil {
		in, out := &in.MaxConcurrentConnectionsPerServer, &out.MaxConcurrentConnectionsPerServer
		*out = new(string)
		**out = **in
	}
	if in.MaxConnRatePerServer != nil {
		in, out := &in.MaxConnRatePerServer, &out.MaxConnRatePerServer
		*out = make([]MaxConnRatePerServerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinHealthMonitorsUp != nil {
		in, out := &in.MinHealthMonitorsUp, &out.MinHealthMonitorsUp
		*out = new(string)
		**out = **in
	}
	if in.MinServersUp != nil {
		in, out := &in.MinServersUp, &out.MinServersUp
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Networks != nil {
		in, out := &in.Networks, &out.Networks
		*out = make([]NetworksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsxSecuritygroup != nil {
		in, out := &in.NsxSecuritygroup, &out.NsxSecuritygroup
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PkiProfileRef != nil {
		in, out := &in.PkiProfileRef, &out.PkiProfileRef
		*out = new(string)
		**out = **in
	}
	if in.PlacementNetworks != nil {
		in, out := &in.PlacementNetworks, &out.PlacementNetworks
		*out = make([]PlacementNetworksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PoolType != nil {
		in, out := &in.PoolType, &out.PoolType
		*out = new(string)
		**out = **in
	}
	if in.RequestQueueDepth != nil {
		in, out := &in.RequestQueueDepth, &out.RequestQueueDepth
		*out = new(string)
		**out = **in
	}
	if in.RequestQueueEnabled != nil {
		in, out := &in.RequestQueueEnabled, &out.RequestQueueEnabled
		*out = new(string)
		**out = **in
	}
	if in.ResolvePoolByDNS != nil {
		in, out := &in.ResolvePoolByDNS, &out.ResolvePoolByDNS
		*out = new(string)
		**out = **in
	}
	if in.RewriteHostHeaderToServerName != nil {
		in, out := &in.RewriteHostHeaderToServerName, &out.RewriteHostHeaderToServerName
		*out = new(string)
		**out = **in
	}
	if in.RewriteHostHeaderToSni != nil {
		in, out := &in.RewriteHostHeaderToSni, &out.RewriteHostHeaderToSni
		*out = new(string)
		**out = **in
	}
	if in.RoutingPool != nil {
		in, out := &in.RoutingPool, &out.RoutingPool
		*out = new(string)
		**out = **in
	}
	if in.SSLKeyAndCertificateRef != nil {
		in, out := &in.SSLKeyAndCertificateRef, &out.SSLKeyAndCertificateRef
		*out = new(string)
		**out = **in
	}
	if in.SSLProfileRef != nil {
		in, out := &in.SSLProfileRef, &out.SSLProfileRef
		*out = new(string)
		**out = **in
	}
	if in.ServerDisableType != nil {
		in, out := &in.ServerDisableType, &out.ServerDisableType
		*out = new(string)
		**out = **in
	}
	if in.ServerName != nil {
		in, out := &in.ServerName, &out.ServerName
		*out = new(string)
		**out = **in
	}
	if in.ServerReselect != nil {
		in, out := &in.ServerReselect, &out.ServerReselect
		*out = make([]ServerReselectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServerTimeout != nil {
		in, out := &in.ServerTimeout, &out.ServerTimeout
		*out = new(string)
		**out = **in
	}
	if in.Servers != nil {
		in, out := &in.Servers, &out.Servers
		*out = make([]ServersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceMetadata != nil {
		in, out := &in.ServiceMetadata, &out.ServiceMetadata
		*out = new(string)
		**out = **in
	}
	if in.SniEnabled != nil {
		in, out := &in.SniEnabled, &out.SniEnabled
		*out = new(string)
		**out = **in
	}
	if in.SpGsInfo != nil {
		in, out := &in.SpGsInfo, &out.SpGsInfo
		*out = make([]SpGsInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TenantRef != nil {
		in, out := &in.TenantRef, &out.TenantRef
		*out = new(string)
		**out = **in
	}
	if in.Tier1Lr != nil {
		in, out := &in.Tier1Lr, &out.Tier1Lr
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.UseServicePort != nil {
		in, out := &in.UseServicePort, &out.UseServicePort
		*out = new(string)
		**out = **in
	}
	if in.UseServiceSSLMode != nil {
		in, out := &in.UseServiceSSLMode, &out.UseServiceSSLMode
		*out = new(string)
		**out = **in
	}
	if in.VrfRef != nil {
		in, out := &in.VrfRef, &out.VrfRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoolParameters.
func (in *PoolParameters) DeepCopy() *PoolParameters {
	if in == nil {
		return nil
	}
	out := new(PoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoolSpec) DeepCopyInto(out *PoolSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoolSpec.
func (in *PoolSpec) DeepCopy() *PoolSpec {
	if in == nil {
		return nil
	}
	out := new(PoolSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoolStatus) DeepCopyInto(out *PoolStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoolStatus.
func (in *PoolStatus) DeepCopy() *PoolStatus {
	if in == nil {
		return nil
	}
	out := new(PoolStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangesInitParameters) DeepCopyInto(out *RangesInitParameters) {
	*out = *in
	if in.Begin != nil {
		in, out := &in.Begin, &out.Begin
		*out = new(string)
		**out = **in
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangesInitParameters.
func (in *RangesInitParameters) DeepCopy() *RangesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RangesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangesObservation) DeepCopyInto(out *RangesObservation) {
	*out = *in
	if in.Begin != nil {
		in, out := &in.Begin, &out.Begin
		*out = new(string)
		**out = **in
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangesObservation.
func (in *RangesObservation) DeepCopy() *RangesObservation {
	if in == nil {
		return nil
	}
	out := new(RangesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangesParameters) DeepCopyInto(out *RangesParameters) {
	*out = *in
	if in.Begin != nil {
		in, out := &in.Begin, &out.Begin
		*out = new(string)
		**out = **in
	}
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangesParameters.
func (in *RangesParameters) DeepCopy() *RangesParameters {
	if in == nil {
		return nil
	}
	out := new(RangesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RateLimiterInitParameters) DeepCopyInto(out *RateLimiterInitParameters) {
	*out = *in
	if in.BurstSz != nil {
		in, out := &in.BurstSz, &out.BurstSz
		*out = new(string)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimiterInitParameters.
func (in *RateLimiterInitParameters) DeepCopy() *RateLimiterInitParameters {
	if in == nil {
		return nil
	}
	out := new(RateLimiterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RateLimiterObservation) DeepCopyInto(out *RateLimiterObservation) {
	*out = *in
	if in.BurstSz != nil {
		in, out := &in.BurstSz, &out.BurstSz
		*out = new(string)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimiterObservation.
func (in *RateLimiterObservation) DeepCopy() *RateLimiterObservation {
	if in == nil {
		return nil
	}
	out := new(RateLimiterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RateLimiterParameters) DeepCopyInto(out *RateLimiterParameters) {
	*out = *in
	if in.BurstSz != nil {
		in, out := &in.BurstSz, &out.BurstSz
		*out = new(string)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimiterParameters.
func (in *RateLimiterParameters) DeepCopy() *RateLimiterParameters {
	if in == nil {
		return nil
	}
	out := new(RateLimiterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectInitParameters) DeepCopyInto(out *RedirectInitParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectInitParameters.
func (in *RedirectInitParameters) DeepCopy() *RedirectInitParameters {
	if in == nil {
		return nil
	}
	out := new(RedirectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectObservation) DeepCopyInto(out *RedirectObservation) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectObservation.
func (in *RedirectObservation) DeepCopy() *RedirectObservation {
	if in == nil {
		return nil
	}
	out := new(RedirectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedirectParameters) DeepCopyInto(out *RedirectParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedirectParameters.
func (in *RedirectParameters) DeepCopy() *RedirectParameters {
	if in == nil {
		return nil
	}
	out := new(RedirectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerReselectInitParameters) DeepCopyInto(out *ServerReselectInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(string)
		**out = **in
	}
	if in.RetryNonidempotent != nil {
		in, out := &in.RetryNonidempotent, &out.RetryNonidempotent
		*out = new(string)
		**out = **in
	}
	if in.RetryTimeout != nil {
		in, out := &in.RetryTimeout, &out.RetryTimeout
		*out = new(string)
		**out = **in
	}
	if in.SvrRespCode != nil {
		in, out := &in.SvrRespCode, &out.SvrRespCode
		*out = make([]SvrRespCodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerReselectInitParameters.
func (in *ServerReselectInitParameters) DeepCopy() *ServerReselectInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServerReselectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerReselectObservation) DeepCopyInto(out *ServerReselectObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(string)
		**out = **in
	}
	if in.RetryNonidempotent != nil {
		in, out := &in.RetryNonidempotent, &out.RetryNonidempotent
		*out = new(string)
		**out = **in
	}
	if in.RetryTimeout != nil {
		in, out := &in.RetryTimeout, &out.RetryTimeout
		*out = new(string)
		**out = **in
	}
	if in.SvrRespCode != nil {
		in, out := &in.SvrRespCode, &out.SvrRespCode
		*out = make([]SvrRespCodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerReselectObservation.
func (in *ServerReselectObservation) DeepCopy() *ServerReselectObservation {
	if in == nil {
		return nil
	}
	out := new(ServerReselectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerReselectParameters) DeepCopyInto(out *ServerReselectParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(string)
		**out = **in
	}
	if in.RetryNonidempotent != nil {
		in, out := &in.RetryNonidempotent, &out.RetryNonidempotent
		*out = new(string)
		**out = **in
	}
	if in.RetryTimeout != nil {
		in, out := &in.RetryTimeout, &out.RetryTimeout
		*out = new(string)
		**out = **in
	}
	if in.SvrRespCode != nil {
		in, out := &in.SvrRespCode, &out.SvrRespCode
		*out = make([]SvrRespCodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerReselectParameters.
func (in *ServerReselectParameters) DeepCopy() *ServerReselectParameters {
	if in == nil {
		return nil
	}
	out := new(ServerReselectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServersInitParameters) DeepCopyInto(out *ServersInitParameters) {
	*out = *in
	if in.AutoscalingGroupName != nil {
		in, out := &in.AutoscalingGroupName, &out.AutoscalingGroupName
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiscoveredNetworks != nil {
		in, out := &in.DiscoveredNetworks, &out.DiscoveredNetworks
		*out = make([]DiscoveredNetworksInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.ExternalOrchestrationID != nil {
		in, out := &in.ExternalOrchestrationID, &out.ExternalOrchestrationID
		*out = new(string)
		**out = **in
	}
	if in.ExternalUUID != nil {
		in, out := &in.ExternalUUID, &out.ExternalUUID
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = make([]IPInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = make([]LocationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MacAddress != nil {
		in, out := &in.MacAddress, &out.MacAddress
		*out = new(string)
		**out = **in
	}
	if in.NwRef != nil {
		in, out := &in.NwRef, &out.NwRef
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.PreferenceOrder != nil {
		in, out := &in.PreferenceOrder, &out.PreferenceOrder
		*out = new(string)
		**out = **in
	}
	if in.PrstHdrVal != nil {
		in, out := &in.PrstHdrVal, &out.PrstHdrVal
		*out = new(string)
		**out = **in
	}
	if in.Ratio != nil {
		in, out := &in.Ratio, &out.Ratio
		*out = new(string)
		**out = **in
	}
	if in.ResolveServerByDNS != nil {
		in, out := &in.ResolveServerByDNS, &out.ResolveServerByDNS
		*out = new(string)
		**out = **in
	}
	if in.RewriteHostHeader != nil {
		in, out := &in.RewriteHostHeader, &out.RewriteHostHeader
		*out = new(string)
		**out = **in
	}
	if in.ServerNode != nil {
		in, out := &in.ServerNode, &out.ServerNode
		*out = new(string)
		**out = **in
	}
	if in.Static != nil {
		in, out := &in.Static, &out.Static
		*out = new(string)
		**out = **in
	}
	if in.VMRef != nil {
		in, out := &in.VMRef, &out.VMRef
		*out = new(string)
		**out = **in
	}
	if in.VerifyNetwork != nil {
		in, out := &in.VerifyNetwork, &out.VerifyNetwork
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServersInitParameters.
func (in *ServersInitParameters) DeepCopy() *ServersInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServersObservation) DeepCopyInto(out *ServersObservation) {
	*out = *in
	if in.AutoscalingGroupName != nil {
		in, out := &in.AutoscalingGroupName, &out.AutoscalingGroupName
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiscoveredNetworks != nil {
		in, out := &in.DiscoveredNetworks, &out.DiscoveredNetworks
		*out = make([]DiscoveredNetworksObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.ExternalOrchestrationID != nil {
		in, out := &in.ExternalOrchestrationID, &out.ExternalOrchestrationID
		*out = new(string)
		**out = **in
	}
	if in.ExternalUUID != nil {
		in, out := &in.ExternalUUID, &out.ExternalUUID
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = make([]IPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = make([]LocationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MacAddress != nil {
		in, out := &in.MacAddress, &out.MacAddress
		*out = new(string)
		**out = **in
	}
	if in.NwRef != nil {
		in, out := &in.NwRef, &out.NwRef
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.PreferenceOrder != nil {
		in, out := &in.PreferenceOrder, &out.PreferenceOrder
		*out = new(string)
		**out = **in
	}
	if in.PrstHdrVal != nil {
		in, out := &in.PrstHdrVal, &out.PrstHdrVal
		*out = new(string)
		**out = **in
	}
	if in.Ratio != nil {
		in, out := &in.Ratio, &out.Ratio
		*out = new(string)
		**out = **in
	}
	if in.ResolveServerByDNS != nil {
		in, out := &in.ResolveServerByDNS, &out.ResolveServerByDNS
		*out = new(string)
		**out = **in
	}
	if in.RewriteHostHeader != nil {
		in, out := &in.RewriteHostHeader, &out.RewriteHostHeader
		*out = new(string)
		**out = **in
	}
	if in.ServerNode != nil {
		in, out := &in.ServerNode, &out.ServerNode
		*out = new(string)
		**out = **in
	}
	if in.Static != nil {
		in, out := &in.Static, &out.Static
		*out = new(string)
		**out = **in
	}
	if in.VMRef != nil {
		in, out := &in.VMRef, &out.VMRef
		*out = new(string)
		**out = **in
	}
	if in.VerifyNetwork != nil {
		in, out := &in.VerifyNetwork, &out.VerifyNetwork
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServersObservation.
func (in *ServersObservation) DeepCopy() *ServersObservation {
	if in == nil {
		return nil
	}
	out := new(ServersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServersParameters) DeepCopyInto(out *ServersParameters) {
	*out = *in
	if in.AutoscalingGroupName != nil {
		in, out := &in.AutoscalingGroupName, &out.AutoscalingGroupName
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiscoveredNetworks != nil {
		in, out := &in.DiscoveredNetworks, &out.DiscoveredNetworks
		*out = make([]DiscoveredNetworksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(string)
		**out = **in
	}
	if in.ExternalOrchestrationID != nil {
		in, out := &in.ExternalOrchestrationID, &out.ExternalOrchestrationID
		*out = new(string)
		**out = **in
	}
	if in.ExternalUUID != nil {
		in, out := &in.ExternalUUID, &out.ExternalUUID
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = make([]IPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = make([]LocationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MacAddress != nil {
		in, out := &in.MacAddress, &out.MacAddress
		*out = new(string)
		**out = **in
	}
	if in.NwRef != nil {
		in, out := &in.NwRef, &out.NwRef
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.PreferenceOrder != nil {
		in, out := &in.PreferenceOrder, &out.PreferenceOrder
		*out = new(string)
		**out = **in
	}
	if in.PrstHdrVal != nil {
		in, out := &in.PrstHdrVal, &out.PrstHdrVal
		*out = new(string)
		**out = **in
	}
	if in.Ratio != nil {
		in, out := &in.Ratio, &out.Ratio
		*out = new(string)
		**out = **in
	}
	if in.ResolveServerByDNS != nil {
		in, out := &in.ResolveServerByDNS, &out.ResolveServerByDNS
		*out = new(string)
		**out = **in
	}
	if in.RewriteHostHeader != nil {
		in, out := &in.RewriteHostHeader, &out.RewriteHostHeader
		*out = new(string)
		**out = **in
	}
	if in.ServerNode != nil {
		in, out := &in.ServerNode, &out.ServerNode
		*out = new(string)
		**out = **in
	}
	if in.Static != nil {
		in, out := &in.Static, &out.Static
		*out = new(string)
		**out = **in
	}
	if in.VMRef != nil {
		in, out := &in.VMRef, &out.VMRef
		*out = new(string)
		**out = **in
	}
	if in.VerifyNetwork != nil {
		in, out := &in.VerifyNetwork, &out.VerifyNetwork
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServersParameters.
func (in *ServersParameters) DeepCopy() *ServersParameters {
	if in == nil {
		return nil
	}
	out := new(ServersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpGsInfoInitParameters) DeepCopyInto(out *SpGsInfoInitParameters) {
	*out = *in
	if in.Fqdns != nil {
		in, out := &in.Fqdns, &out.Fqdns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.GsRef != nil {
		in, out := &in.GsRef, &out.GsRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpGsInfoInitParameters.
func (in *SpGsInfoInitParameters) DeepCopy() *SpGsInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpGsInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpGsInfoObservation) DeepCopyInto(out *SpGsInfoObservation) {
	*out = *in
	if in.Fqdns != nil {
		in, out := &in.Fqdns, &out.Fqdns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.GsRef != nil {
		in, out := &in.GsRef, &out.GsRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpGsInfoObservation.
func (in *SpGsInfoObservation) DeepCopy() *SpGsInfoObservation {
	if in == nil {
		return nil
	}
	out := new(SpGsInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpGsInfoParameters) DeepCopyInto(out *SpGsInfoParameters) {
	*out = *in
	if in.Fqdns != nil {
		in, out := &in.Fqdns, &out.Fqdns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.GsRef != nil {
		in, out := &in.GsRef, &out.GsRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpGsInfoParameters.
func (in *SpGsInfoParameters) DeepCopy() *SpGsInfoParameters {
	if in == nil {
		return nil
	}
	out := new(SpGsInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subnet6IPAddrInitParameters) DeepCopyInto(out *Subnet6IPAddrInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subnet6IPAddrInitParameters.
func (in *Subnet6IPAddrInitParameters) DeepCopy() *Subnet6IPAddrInitParameters {
	if in == nil {
		return nil
	}
	out := new(Subnet6IPAddrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subnet6IPAddrObservation) DeepCopyInto(out *Subnet6IPAddrObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subnet6IPAddrObservation.
func (in *Subnet6IPAddrObservation) DeepCopy() *Subnet6IPAddrObservation {
	if in == nil {
		return nil
	}
	out := new(Subnet6IPAddrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subnet6IPAddrParameters) DeepCopyInto(out *Subnet6IPAddrParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subnet6IPAddrParameters.
func (in *Subnet6IPAddrParameters) DeepCopy() *Subnet6IPAddrParameters {
	if in == nil {
		return nil
	}
	out := new(Subnet6IPAddrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subnet6InitParameters) DeepCopyInto(out *Subnet6InitParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]Subnet6IPAddrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subnet6InitParameters.
func (in *Subnet6InitParameters) DeepCopy() *Subnet6InitParameters {
	if in == nil {
		return nil
	}
	out := new(Subnet6InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subnet6Observation) DeepCopyInto(out *Subnet6Observation) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]Subnet6IPAddrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subnet6Observation.
func (in *Subnet6Observation) DeepCopy() *Subnet6Observation {
	if in == nil {
		return nil
	}
	out := new(Subnet6Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subnet6Parameters) DeepCopyInto(out *Subnet6Parameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]Subnet6IPAddrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subnet6Parameters.
func (in *Subnet6Parameters) DeepCopy() *Subnet6Parameters {
	if in == nil {
		return nil
	}
	out := new(Subnet6Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetIPAddrInitParameters) DeepCopyInto(out *SubnetIPAddrInitParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetIPAddrInitParameters.
func (in *SubnetIPAddrInitParameters) DeepCopy() *SubnetIPAddrInitParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetIPAddrInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetIPAddrObservation) DeepCopyInto(out *SubnetIPAddrObservation) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetIPAddrObservation.
func (in *SubnetIPAddrObservation) DeepCopy() *SubnetIPAddrObservation {
	if in == nil {
		return nil
	}
	out := new(SubnetIPAddrObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetIPAddrParameters) DeepCopyInto(out *SubnetIPAddrParameters) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetIPAddrParameters.
func (in *SubnetIPAddrParameters) DeepCopy() *SubnetIPAddrParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetIPAddrParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetInitParameters) DeepCopyInto(out *SubnetInitParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]IPAddrInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetInitParameters.
func (in *SubnetInitParameters) DeepCopy() *SubnetInitParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetObservation) DeepCopyInto(out *SubnetObservation) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]IPAddrObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetObservation.
func (in *SubnetObservation) DeepCopy() *SubnetObservation {
	if in == nil {
		return nil
	}
	out := new(SubnetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetParameters) DeepCopyInto(out *SubnetParameters) {
	*out = *in
	if in.IPAddr != nil {
		in, out := &in.IPAddr, &out.IPAddr
		*out = make([]IPAddrParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetParameters.
func (in *SubnetParameters) DeepCopy() *SubnetParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SvrRespCodeInitParameters) DeepCopyInto(out *SvrRespCodeInitParameters) {
	*out = *in
	if in.Codes != nil {
		in, out := &in.Codes, &out.Codes
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]RangesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RespCodeBlock != nil {
		in, out := &in.RespCodeBlock, &out.RespCodeBlock
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SvrRespCodeInitParameters.
func (in *SvrRespCodeInitParameters) DeepCopy() *SvrRespCodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(SvrRespCodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SvrRespCodeObservation) DeepCopyInto(out *SvrRespCodeObservation) {
	*out = *in
	if in.Codes != nil {
		in, out := &in.Codes, &out.Codes
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]RangesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RespCodeBlock != nil {
		in, out := &in.RespCodeBlock, &out.RespCodeBlock
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SvrRespCodeObservation.
func (in *SvrRespCodeObservation) DeepCopy() *SvrRespCodeObservation {
	if in == nil {
		return nil
	}
	out := new(SvrRespCodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SvrRespCodeParameters) DeepCopyInto(out *SvrRespCodeParameters) {
	*out = *in
	if in.Codes != nil {
		in, out := &in.Codes, &out.Codes
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]RangesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RespCodeBlock != nil {
		in, out := &in.RespCodeBlock, &out.RespCodeBlock
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SvrRespCodeParameters.
func (in *SvrRespCodeParameters) DeepCopy() *SvrRespCodeParameters {
	if in == nil {
		return nil
	}
	out := new(SvrRespCodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokensInitParameters) DeepCopyInto(out *TokensInitParameters) {
	*out = *in
	if in.EndIndex != nil {
		in, out := &in.EndIndex, &out.EndIndex
		*out = new(string)
		**out = **in
	}
	if in.StartIndex != nil {
		in, out := &in.StartIndex, &out.StartIndex
		*out = new(string)
		**out = **in
	}
	if in.StrValue != nil {
		in, out := &in.StrValue, &out.StrValue
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokensInitParameters.
func (in *TokensInitParameters) DeepCopy() *TokensInitParameters {
	if in == nil {
		return nil
	}
	out := new(TokensInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokensObservation) DeepCopyInto(out *TokensObservation) {
	*out = *in
	if in.EndIndex != nil {
		in, out := &in.EndIndex, &out.EndIndex
		*out = new(string)
		**out = **in
	}
	if in.StartIndex != nil {
		in, out := &in.StartIndex, &out.StartIndex
		*out = new(string)
		**out = **in
	}
	if in.StrValue != nil {
		in, out := &in.StrValue, &out.StrValue
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokensObservation.
func (in *TokensObservation) DeepCopy() *TokensObservation {
	if in == nil {
		return nil
	}
	out := new(TokensObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokensParameters) DeepCopyInto(out *TokensParameters) {
	*out = *in
	if in.EndIndex != nil {
		in, out := &in.EndIndex, &out.EndIndex
		*out = new(string)
		**out = **in
	}
	if in.StartIndex != nil {
		in, out := &in.StartIndex, &out.StartIndex
		*out = new(string)
		**out = **in
	}
	if in.StrValue != nil {
		in, out := &in.StrValue, &out.StrValue
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokensParameters.
func (in *TokensParameters) DeepCopy() *TokensParameters {
	if in == nil {
		return nil
	}
	out := new(TokensParameters)
	in.DeepCopyInto(out)
	return out
}
