/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ActionRedirectHostInitParameters struct {
	Tokens []RedirectHostTokensInitParameters `json:"tokens,omitempty" tf:"tokens,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ActionRedirectHostObservation struct {
	Tokens []RedirectHostTokensObservation `json:"tokens,omitempty" tf:"tokens,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ActionRedirectHostParameters struct {

	// +kubebuilder:validation:Optional
	Tokens []RedirectHostTokensParameters `json:"tokens" tf:"tokens,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type ActionRedirectPathInitParameters struct {
	Tokens []ActionRedirectPathTokensInitParameters `json:"tokens,omitempty" tf:"tokens,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ActionRedirectPathObservation struct {
	Tokens []ActionRedirectPathTokensObservation `json:"tokens,omitempty" tf:"tokens,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ActionRedirectPathParameters struct {

	// +kubebuilder:validation:Optional
	Tokens []ActionRedirectPathTokensParameters `json:"tokens" tf:"tokens,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type ActionRedirectPathTokensInitParameters struct {
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ActionRedirectPathTokensObservation struct {
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ActionRedirectPathTokensParameters struct {

	// +kubebuilder:validation:Optional
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	// +kubebuilder:validation:Optional
	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	// +kubebuilder:validation:Optional
	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type AppSettingsInitParameters struct {
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	ClientSecretSecretRef *v1.SecretKeySelector `json:"clientSecretSecretRef,omitempty" tf:"-"`

	OidcConfig []OidcConfigInitParameters `json:"oidcConfig,omitempty" tf:"oidc_config,omitempty"`

	Scopes []*string `json:"scopes,omitempty" tf:"scopes,omitempty"`
}

type AppSettingsObservation struct {
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	OidcConfig []OidcConfigObservation `json:"oidcConfig,omitempty" tf:"oidc_config,omitempty"`

	Scopes []*string `json:"scopes,omitempty" tf:"scopes,omitempty"`
}

type AppSettingsParameters struct {

	// +kubebuilder:validation:Optional
	ClientID *string `json:"clientId" tf:"client_id,omitempty"`

	// +kubebuilder:validation:Optional
	ClientSecretSecretRef *v1.SecretKeySelector `json:"clientSecretSecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	OidcConfig []OidcConfigParameters `json:"oidcConfig,omitempty" tf:"oidc_config,omitempty"`

	// +kubebuilder:validation:Optional
	Scopes []*string `json:"scopes,omitempty" tf:"scopes,omitempty"`
}

type BotDetectionResultInitParameters struct {
	Classifications []ClassificationsInitParameters `json:"classifications,omitempty" tf:"classifications,omitempty"`

	MatchOperation *string `json:"matchOperation,omitempty" tf:"match_operation,omitempty"`
}

type BotDetectionResultObservation struct {
	Classifications []ClassificationsObservation `json:"classifications,omitempty" tf:"classifications,omitempty"`

	MatchOperation *string `json:"matchOperation,omitempty" tf:"match_operation,omitempty"`
}

type BotDetectionResultParameters struct {

	// +kubebuilder:validation:Optional
	Classifications []ClassificationsParameters `json:"classifications,omitempty" tf:"classifications,omitempty"`

	// +kubebuilder:validation:Optional
	MatchOperation *string `json:"matchOperation" tf:"match_operation,omitempty"`
}

type ClassificationsInitParameters struct {

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	UserDefinedType *string `json:"userDefinedType,omitempty" tf:"user_defined_type,omitempty"`
}

type ClassificationsObservation struct {

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	UserDefinedType *string `json:"userDefinedType,omitempty" tf:"user_defined_type,omitempty"`
}

type ClassificationsParameters struct {

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	UserDefinedType *string `json:"userDefinedType,omitempty" tf:"user_defined_type,omitempty"`
}

type ClientIPAddrsInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPAddrsObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPAddrsParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type ClientIPInitParameters struct {
	Addrs []ClientIPAddrsInitParameters `json:"addrs,omitempty" tf:"addrs,omitempty"`

	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Prefixes []ClientIPPrefixesInitParameters `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	Ranges []ClientIPRangesInitParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type ClientIPListAddrsInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPListAddrsObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPListAddrsParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type ClientIPListInitParameters struct {
	Addrs []ClientIPListAddrsInitParameters `json:"addrs,omitempty" tf:"addrs,omitempty"`

	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Prefixes []ClientIPListPrefixesInitParameters `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	Ranges []ClientIPListRangesInitParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type ClientIPListObservation struct {
	Addrs []ClientIPListAddrsObservation `json:"addrs,omitempty" tf:"addrs,omitempty"`

	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Prefixes []ClientIPListPrefixesObservation `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	Ranges []ClientIPListRangesObservation `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type ClientIPListParameters struct {

	// +kubebuilder:validation:Optional
	Addrs []ClientIPListAddrsParameters `json:"addrs,omitempty" tf:"addrs,omitempty"`

	// +kubebuilder:validation:Optional
	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Prefixes []ClientIPListPrefixesParameters `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	// +kubebuilder:validation:Optional
	Ranges []ClientIPListRangesParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type ClientIPListPrefixesIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPListPrefixesIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPListPrefixesIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type ClientIPListPrefixesInitParameters struct {
	IPAddr []ClientIPListPrefixesIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type ClientIPListPrefixesObservation struct {
	IPAddr []ClientIPListPrefixesIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type ClientIPListPrefixesParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []ClientIPListPrefixesIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type ClientIPListRangesBeginInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPListRangesBeginObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPListRangesBeginParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type ClientIPListRangesEndInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPListRangesEndObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPListRangesEndParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type ClientIPListRangesInitParameters struct {
	Begin []ClientIPListRangesBeginInitParameters `json:"begin,omitempty" tf:"begin,omitempty"`

	End []ClientIPListRangesEndInitParameters `json:"end,omitempty" tf:"end,omitempty"`
}

type ClientIPListRangesObservation struct {
	Begin []ClientIPListRangesBeginObservation `json:"begin,omitempty" tf:"begin,omitempty"`

	End []ClientIPListRangesEndObservation `json:"end,omitempty" tf:"end,omitempty"`
}

type ClientIPListRangesParameters struct {

	// +kubebuilder:validation:Optional
	Begin []ClientIPListRangesBeginParameters `json:"begin" tf:"begin,omitempty"`

	// +kubebuilder:validation:Optional
	End []ClientIPListRangesEndParameters `json:"end" tf:"end,omitempty"`
}

type ClientIPObservation struct {
	Addrs []ClientIPAddrsObservation `json:"addrs,omitempty" tf:"addrs,omitempty"`

	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Prefixes []ClientIPPrefixesObservation `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	Ranges []ClientIPRangesObservation `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type ClientIPParameters struct {

	// +kubebuilder:validation:Optional
	Addrs []ClientIPAddrsParameters `json:"addrs,omitempty" tf:"addrs,omitempty"`

	// +kubebuilder:validation:Optional
	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Prefixes []ClientIPPrefixesParameters `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	// +kubebuilder:validation:Optional
	Ranges []ClientIPRangesParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type ClientIPPrefixesIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPPrefixesIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPPrefixesIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type ClientIPPrefixesInitParameters struct {
	IPAddr []PrefixesIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type ClientIPPrefixesObservation struct {
	IPAddr []PrefixesIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type ClientIPPrefixesParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []PrefixesIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type ClientIPRangesBeginInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPRangesBeginObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPRangesBeginParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type ClientIPRangesEndInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPRangesEndObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientIPRangesEndParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type ClientIPRangesInitParameters struct {
	Begin []RangesBeginInitParameters `json:"begin,omitempty" tf:"begin,omitempty"`

	End []RangesEndInitParameters `json:"end,omitempty" tf:"end,omitempty"`
}

type ClientIPRangesObservation struct {
	Begin []RangesBeginObservation `json:"begin,omitempty" tf:"begin,omitempty"`

	End []RangesEndObservation `json:"end,omitempty" tf:"end,omitempty"`
}

type ClientIPRangesParameters struct {

	// +kubebuilder:validation:Optional
	Begin []RangesBeginParameters `json:"begin" tf:"begin,omitempty"`

	// +kubebuilder:validation:Optional
	End []RangesEndParameters `json:"end" tf:"end,omitempty"`
}

type ClientInsightsSamplingInitParameters struct {
	ClientIP []ClientIPInitParameters `json:"clientIp,omitempty" tf:"client_ip,omitempty"`

	SampleUris []SampleUrisInitParameters `json:"sampleUris,omitempty" tf:"sample_uris,omitempty"`

	SkipUris []SkipUrisInitParameters `json:"skipUris,omitempty" tf:"skip_uris,omitempty"`
}

type ClientInsightsSamplingObservation struct {
	ClientIP []ClientIPObservation `json:"clientIp,omitempty" tf:"client_ip,omitempty"`

	SampleUris []SampleUrisObservation `json:"sampleUris,omitempty" tf:"sample_uris,omitempty"`

	SkipUris []SkipUrisObservation `json:"skipUris,omitempty" tf:"skip_uris,omitempty"`
}

type ClientInsightsSamplingParameters struct {

	// +kubebuilder:validation:Optional
	ClientIP []ClientIPParameters `json:"clientIp,omitempty" tf:"client_ip,omitempty"`

	// +kubebuilder:validation:Optional
	SampleUris []SampleUrisParameters `json:"sampleUris,omitempty" tf:"sample_uris,omitempty"`

	// +kubebuilder:validation:Optional
	SkipUris []SkipUrisParameters `json:"skipUris,omitempty" tf:"skip_uris,omitempty"`
}

type ClientLogFiltersClientIPAddrsInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientLogFiltersClientIPAddrsObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ClientLogFiltersClientIPAddrsParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type ClientLogFiltersClientIPInitParameters struct {
	Addrs []ClientLogFiltersClientIPAddrsInitParameters `json:"addrs,omitempty" tf:"addrs,omitempty"`

	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Prefixes []ClientLogFiltersClientIPPrefixesInitParameters `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	Ranges []ClientLogFiltersClientIPRangesInitParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type ClientLogFiltersClientIPObservation struct {
	Addrs []ClientLogFiltersClientIPAddrsObservation `json:"addrs,omitempty" tf:"addrs,omitempty"`

	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Prefixes []ClientLogFiltersClientIPPrefixesObservation `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	Ranges []ClientLogFiltersClientIPRangesObservation `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type ClientLogFiltersClientIPParameters struct {

	// +kubebuilder:validation:Optional
	Addrs []ClientLogFiltersClientIPAddrsParameters `json:"addrs,omitempty" tf:"addrs,omitempty"`

	// +kubebuilder:validation:Optional
	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Prefixes []ClientLogFiltersClientIPPrefixesParameters `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	// +kubebuilder:validation:Optional
	Ranges []ClientLogFiltersClientIPRangesParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type ClientLogFiltersClientIPPrefixesInitParameters struct {
	IPAddr []ClientIPPrefixesIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type ClientLogFiltersClientIPPrefixesObservation struct {
	IPAddr []ClientIPPrefixesIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type ClientLogFiltersClientIPPrefixesParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []ClientIPPrefixesIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type ClientLogFiltersClientIPRangesInitParameters struct {
	Begin []ClientIPRangesBeginInitParameters `json:"begin,omitempty" tf:"begin,omitempty"`

	End []ClientIPRangesEndInitParameters `json:"end,omitempty" tf:"end,omitempty"`
}

type ClientLogFiltersClientIPRangesObservation struct {
	Begin []ClientIPRangesBeginObservation `json:"begin,omitempty" tf:"begin,omitempty"`

	End []ClientIPRangesEndObservation `json:"end,omitempty" tf:"end,omitempty"`
}

type ClientLogFiltersClientIPRangesParameters struct {

	// +kubebuilder:validation:Optional
	Begin []ClientIPRangesBeginParameters `json:"begin" tf:"begin,omitempty"`

	// +kubebuilder:validation:Optional
	End []ClientIPRangesEndParameters `json:"end" tf:"end,omitempty"`
}

type ClientLogFiltersInitParameters struct {
	AllHeaders *string `json:"allHeaders,omitempty" tf:"all_headers,omitempty"`

	ClientIP []ClientLogFiltersClientIPInitParameters `json:"clientIp,omitempty" tf:"client_ip,omitempty"`

	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	// Enable or disable the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	URI []URIInitParameters `json:"uri,omitempty" tf:"uri,omitempty"`
}

type ClientLogFiltersObservation struct {
	AllHeaders *string `json:"allHeaders,omitempty" tf:"all_headers,omitempty"`

	ClientIP []ClientLogFiltersClientIPObservation `json:"clientIp,omitempty" tf:"client_ip,omitempty"`

	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	// Enable or disable the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	URI []URIObservation `json:"uri,omitempty" tf:"uri,omitempty"`
}

type ClientLogFiltersParameters struct {

	// +kubebuilder:validation:Optional
	AllHeaders *string `json:"allHeaders,omitempty" tf:"all_headers,omitempty"`

	// +kubebuilder:validation:Optional
	ClientIP []ClientLogFiltersClientIPParameters `json:"clientIp,omitempty" tf:"client_ip,omitempty"`

	// +kubebuilder:validation:Optional
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	// Enable or disable the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Enabled *string `json:"enabled" tf:"enabled,omitempty"`

	// +kubebuilder:validation:Optional
	Index *string `json:"index" tf:"index,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	URI []URIParameters `json:"uri,omitempty" tf:"uri,omitempty"`
}

type CnameInitParameters struct {

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Cname *string `json:"cname,omitempty" tf:"cname,omitempty"`
}

type CnameObservation struct {

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Cname *string `json:"cname,omitempty" tf:"cname,omitempty"`
}

type CnameParameters struct {

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Cname *string `json:"cname" tf:"cname,omitempty"`
}

type ConnectionsRateLimitActionFileInitParameters struct {

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	ContentType *string `json:"contentType,omitempty" tf:"content_type,omitempty"`

	FileContent *string `json:"fileContent,omitempty" tf:"file_content,omitempty"`

	FileLength *string `json:"fileLength,omitempty" tf:"file_length,omitempty"`
}

type ConnectionsRateLimitActionFileObservation struct {

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	ContentType *string `json:"contentType,omitempty" tf:"content_type,omitempty"`

	FileContent *string `json:"fileContent,omitempty" tf:"file_content,omitempty"`

	FileLength *string `json:"fileLength,omitempty" tf:"file_length,omitempty"`
}

type ConnectionsRateLimitActionFileParameters struct {

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ContentType *string `json:"contentType" tf:"content_type,omitempty"`

	// +kubebuilder:validation:Optional
	FileContent *string `json:"fileContent" tf:"file_content,omitempty"`

	// +kubebuilder:validation:Optional
	FileLength *string `json:"fileLength,omitempty" tf:"file_length,omitempty"`
}

type ConnectionsRateLimitActionInitParameters struct {
	File []ConnectionsRateLimitActionFileInitParameters `json:"file,omitempty" tf:"file,omitempty"`

	Redirect []ConnectionsRateLimitActionRedirectInitParameters `json:"redirect,omitempty" tf:"redirect,omitempty"`

	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ConnectionsRateLimitActionObservation struct {
	File []ConnectionsRateLimitActionFileObservation `json:"file,omitempty" tf:"file,omitempty"`

	Redirect []ConnectionsRateLimitActionRedirectObservation `json:"redirect,omitempty" tf:"redirect,omitempty"`

	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ConnectionsRateLimitActionParameters struct {

	// +kubebuilder:validation:Optional
	File []ConnectionsRateLimitActionFileParameters `json:"file,omitempty" tf:"file,omitempty"`

	// +kubebuilder:validation:Optional
	Redirect []ConnectionsRateLimitActionRedirectParameters `json:"redirect,omitempty" tf:"redirect,omitempty"`

	// +kubebuilder:validation:Optional
	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ConnectionsRateLimitActionRedirectInitParameters struct {
	AddString *string `json:"addString,omitempty" tf:"add_string,omitempty"`

	Host []RedirectHostInitParameters `json:"host,omitempty" tf:"host,omitempty"`

	KeepQuery *string `json:"keepQuery,omitempty" tf:"keep_query,omitempty"`

	Path []RedirectPathInitParameters `json:"path,omitempty" tf:"path,omitempty"`

	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type ConnectionsRateLimitActionRedirectObservation struct {
	AddString *string `json:"addString,omitempty" tf:"add_string,omitempty"`

	Host []RedirectHostObservation `json:"host,omitempty" tf:"host,omitempty"`

	KeepQuery *string `json:"keepQuery,omitempty" tf:"keep_query,omitempty"`

	Path []RedirectPathObservation `json:"path,omitempty" tf:"path,omitempty"`

	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type ConnectionsRateLimitActionRedirectParameters struct {

	// +kubebuilder:validation:Optional
	AddString *string `json:"addString,omitempty" tf:"add_string,omitempty"`

	// +kubebuilder:validation:Optional
	Host []RedirectHostParameters `json:"host,omitempty" tf:"host,omitempty"`

	// +kubebuilder:validation:Optional
	KeepQuery *string `json:"keepQuery,omitempty" tf:"keep_query,omitempty"`

	// +kubebuilder:validation:Optional
	Path []RedirectPathParameters `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	// +kubebuilder:validation:Optional
	Protocol *string `json:"protocol" tf:"protocol,omitempty"`

	// +kubebuilder:validation:Optional
	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type ConnectionsRateLimitInitParameters struct {
	Action []ConnectionsRateLimitActionInitParameters `json:"action,omitempty" tf:"action,omitempty"`

	ExplicitTracking *string `json:"explicitTracking,omitempty" tf:"explicit_tracking,omitempty"`

	FineGrain *string `json:"fineGrain,omitempty" tf:"fine_grain,omitempty"`

	HTTPCookie *string `json:"httpCookie,omitempty" tf:"http_cookie,omitempty"`

	HTTPHeader *string `json:"httpHeader,omitempty" tf:"http_header,omitempty"`

	RateLimiter []ConnectionsRateLimitRateLimiterInitParameters `json:"rateLimiter,omitempty" tf:"rate_limiter,omitempty"`
}

type ConnectionsRateLimitObservation struct {
	Action []ConnectionsRateLimitActionObservation `json:"action,omitempty" tf:"action,omitempty"`

	ExplicitTracking *string `json:"explicitTracking,omitempty" tf:"explicit_tracking,omitempty"`

	FineGrain *string `json:"fineGrain,omitempty" tf:"fine_grain,omitempty"`

	HTTPCookie *string `json:"httpCookie,omitempty" tf:"http_cookie,omitempty"`

	HTTPHeader *string `json:"httpHeader,omitempty" tf:"http_header,omitempty"`

	RateLimiter []ConnectionsRateLimitRateLimiterObservation `json:"rateLimiter,omitempty" tf:"rate_limiter,omitempty"`
}

type ConnectionsRateLimitParameters struct {

	// +kubebuilder:validation:Optional
	Action []ConnectionsRateLimitActionParameters `json:"action" tf:"action,omitempty"`

	// +kubebuilder:validation:Optional
	ExplicitTracking *string `json:"explicitTracking,omitempty" tf:"explicit_tracking,omitempty"`

	// +kubebuilder:validation:Optional
	FineGrain *string `json:"fineGrain,omitempty" tf:"fine_grain,omitempty"`

	// +kubebuilder:validation:Optional
	HTTPCookie *string `json:"httpCookie,omitempty" tf:"http_cookie,omitempty"`

	// +kubebuilder:validation:Optional
	HTTPHeader *string `json:"httpHeader,omitempty" tf:"http_header,omitempty"`

	// +kubebuilder:validation:Optional
	RateLimiter []ConnectionsRateLimitRateLimiterParameters `json:"rateLimiter,omitempty" tf:"rate_limiter,omitempty"`
}

type ConnectionsRateLimitRateLimiterInitParameters struct {
	BurstSz *string `json:"burstSz,omitempty" tf:"burst_sz,omitempty"`

	Count *string `json:"count,omitempty" tf:"count,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Period *string `json:"period,omitempty" tf:"period,omitempty"`
}

type ConnectionsRateLimitRateLimiterObservation struct {
	BurstSz *string `json:"burstSz,omitempty" tf:"burst_sz,omitempty"`

	Count *string `json:"count,omitempty" tf:"count,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Period *string `json:"period,omitempty" tf:"period,omitempty"`
}

type ConnectionsRateLimitRateLimiterParameters struct {

	// +kubebuilder:validation:Optional
	BurstSz *string `json:"burstSz,omitempty" tf:"burst_sz,omitempty"`

	// +kubebuilder:validation:Optional
	Count *string `json:"count,omitempty" tf:"count,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Period *string `json:"period,omitempty" tf:"period,omitempty"`
}

type ContentRewriteInitParameters struct {
	RewritableContentRef *string `json:"rewritableContentRef,omitempty" tf:"rewritable_content_ref,omitempty"`

	RspRewriteRules []RspRewriteRulesInitParameters `json:"rspRewriteRules,omitempty" tf:"rsp_rewrite_rules,omitempty"`
}

type ContentRewriteObservation struct {
	RewritableContentRef *string `json:"rewritableContentRef,omitempty" tf:"rewritable_content_ref,omitempty"`

	RspRewriteRules []RspRewriteRulesObservation `json:"rspRewriteRules,omitempty" tf:"rsp_rewrite_rules,omitempty"`
}

type ContentRewriteParameters struct {

	// +kubebuilder:validation:Optional
	RewritableContentRef *string `json:"rewritableContentRef,omitempty" tf:"rewritable_content_ref,omitempty"`

	// +kubebuilder:validation:Optional
	RspRewriteRules []RspRewriteRulesParameters `json:"rspRewriteRules,omitempty" tf:"rsp_rewrite_rules,omitempty"`
}

type CookieInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type CookieObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type CookieParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type DNSInfoInitParameters struct {
	Algorithm *string `json:"algorithm,omitempty" tf:"algorithm,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Cname []CnameInitParameters `json:"cname,omitempty" tf:"cname,omitempty"`

	// Dns resolvable, fully qualified domain name of the virtualservice. Only one of 'fqdn' and 'dns_info' configuration is allowed. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	Fqdn *string `json:"fqdn,omitempty" tf:"fqdn,omitempty"`

	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`

	NumRecordsInResponse *string `json:"numRecordsInResponse,omitempty" tf:"num_records_in_response,omitempty"`

	TTL *string `json:"ttl,omitempty" tf:"ttl,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type DNSInfoObservation struct {
	Algorithm *string `json:"algorithm,omitempty" tf:"algorithm,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Cname []CnameObservation `json:"cname,omitempty" tf:"cname,omitempty"`

	// Dns resolvable, fully qualified domain name of the virtualservice. Only one of 'fqdn' and 'dns_info' configuration is allowed. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	Fqdn *string `json:"fqdn,omitempty" tf:"fqdn,omitempty"`

	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`

	NumRecordsInResponse *string `json:"numRecordsInResponse,omitempty" tf:"num_records_in_response,omitempty"`

	TTL *string `json:"ttl,omitempty" tf:"ttl,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type DNSInfoParameters struct {

	// +kubebuilder:validation:Optional
	Algorithm *string `json:"algorithm,omitempty" tf:"algorithm,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Cname []CnameParameters `json:"cname,omitempty" tf:"cname,omitempty"`

	// Dns resolvable, fully qualified domain name of the virtualservice. Only one of 'fqdn' and 'dns_info' configuration is allowed. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Fqdn *string `json:"fqdn,omitempty" tf:"fqdn,omitempty"`

	// +kubebuilder:validation:Optional
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// +kubebuilder:validation:Optional
	NumRecordsInResponse *string `json:"numRecordsInResponse,omitempty" tf:"num_records_in_response,omitempty"`

	// +kubebuilder:validation:Optional
	TTL *string `json:"ttl,omitempty" tf:"ttl,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type DNSPoliciesInitParameters struct {
	DNSPolicyRef *string `json:"dnsPolicyRef,omitempty" tf:"dns_policy_ref,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`
}

type DNSPoliciesObservation struct {
	DNSPolicyRef *string `json:"dnsPolicyRef,omitempty" tf:"dns_policy_ref,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`
}

type DNSPoliciesParameters struct {

	// +kubebuilder:validation:Optional
	DNSPolicyRef *string `json:"dnsPolicyRef" tf:"dns_policy_ref,omitempty"`

	// +kubebuilder:validation:Optional
	Index *string `json:"index" tf:"index,omitempty"`
}

type DiscoveredNetworksSubnet6IPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type DiscoveredNetworksSubnet6IPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type DiscoveredNetworksSubnet6IPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type DiscoveredNetworksSubnet6InitParameters struct {
	IPAddr []DiscoveredNetworksSubnet6IPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type DiscoveredNetworksSubnet6Observation struct {
	IPAddr []DiscoveredNetworksSubnet6IPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type DiscoveredNetworksSubnet6Parameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []DiscoveredNetworksSubnet6IPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type FloatingIPInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type FloatingIPObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type FloatingIPParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type FloatingIp6InitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type FloatingIp6Observation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type FloatingIp6Parameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type FullClientLogsInitParameters struct {
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	// Enable or disable the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	Throttle *string `json:"throttle,omitempty" tf:"throttle,omitempty"`
}

type FullClientLogsObservation struct {
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	// Enable or disable the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	Throttle *string `json:"throttle,omitempty" tf:"throttle,omitempty"`
}

type FullClientLogsParameters struct {

	// +kubebuilder:validation:Optional
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	// Enable or disable the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Enabled *string `json:"enabled" tf:"enabled,omitempty"`

	// +kubebuilder:validation:Optional
	Throttle *string `json:"throttle,omitempty" tf:"throttle,omitempty"`
}

type GeoMatchesInitParameters struct {
	Attribute *string `json:"attribute,omitempty" tf:"attribute,omitempty"`

	MatchOperation *string `json:"matchOperation,omitempty" tf:"match_operation,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type GeoMatchesObservation struct {
	Attribute *string `json:"attribute,omitempty" tf:"attribute,omitempty"`

	MatchOperation *string `json:"matchOperation,omitempty" tf:"match_operation,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type GeoMatchesParameters struct {

	// +kubebuilder:validation:Optional
	Attribute *string `json:"attribute" tf:"attribute,omitempty"`

	// +kubebuilder:validation:Optional
	MatchOperation *string `json:"matchOperation" tf:"match_operation,omitempty"`

	// +kubebuilder:validation:Optional
	Values []*string `json:"values" tf:"values,omitempty"`
}

type HTTPPoliciesInitParameters struct {
	HTTPPolicySetRef *string `json:"httpPolicySetRef,omitempty" tf:"http_policy_set_ref,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`
}

type HTTPPoliciesObservation struct {
	HTTPPolicySetRef *string `json:"httpPolicySetRef,omitempty" tf:"http_policy_set_ref,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`
}

type HTTPPoliciesParameters struct {

	// +kubebuilder:validation:Optional
	HTTPPolicySetRef *string `json:"httpPolicySetRef" tf:"http_policy_set_ref,omitempty"`

	// +kubebuilder:validation:Optional
	Index *string `json:"index" tf:"index,omitempty"`
}

type HdrsInitParameters struct {
	Hdr *string `json:"hdr,omitempty" tf:"hdr,omitempty"`

	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type HdrsObservation struct {
	Hdr *string `json:"hdr,omitempty" tf:"hdr,omitempty"`

	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type HdrsParameters struct {

	// +kubebuilder:validation:Optional
	Hdr *string `json:"hdr" tf:"hdr,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type HostHdrInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type HostHdrObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type HostHdrParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type HostTokensInitParameters struct {
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type HostTokensObservation struct {
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type HostTokensParameters struct {

	// +kubebuilder:validation:Optional
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	// +kubebuilder:validation:Optional
	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	// +kubebuilder:validation:Optional
	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type IPAddressIPAddressInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type IPAddressIPAddressObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type IPAddressIPAddressParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type IPAddressInitParameters struct {
	IPAddress []IPAddressIPAddressInitParameters `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`
}

type IPAddressObservation struct {
	IPAddress []IPAddressIPAddressObservation `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`
}

type IPAddressParameters struct {

	// +kubebuilder:validation:Optional
	IPAddress []IPAddressIPAddressParameters `json:"ipAddress" tf:"ip_address,omitempty"`
}

type IPReputationTypeInitParameters struct {
	MatchOperation *string `json:"matchOperation,omitempty" tf:"match_operation,omitempty"`

	ReputationTypes []*string `json:"reputationTypes,omitempty" tf:"reputation_types,omitempty"`
}

type IPReputationTypeObservation struct {
	MatchOperation *string `json:"matchOperation,omitempty" tf:"match_operation,omitempty"`

	ReputationTypes []*string `json:"reputationTypes,omitempty" tf:"reputation_types,omitempty"`
}

type IPReputationTypeParameters struct {

	// +kubebuilder:validation:Optional
	MatchOperation *string `json:"matchOperation" tf:"match_operation,omitempty"`

	// +kubebuilder:validation:Optional
	ReputationTypes []*string `json:"reputationTypes" tf:"reputation_types,omitempty"`
}

type Ip6AddressInitParameters struct {
	Ip6Address []Ip6AddressIp6AddressInitParameters `json:"ip6Address,omitempty" tf:"ip6_address,omitempty"`
}

type Ip6AddressIp6AddressInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type Ip6AddressIp6AddressObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type Ip6AddressIp6AddressParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type Ip6AddressObservation struct {
	Ip6Address []Ip6AddressIp6AddressObservation `json:"ip6Address,omitempty" tf:"ip6_address,omitempty"`
}

type Ip6AddressParameters struct {

	// +kubebuilder:validation:Optional
	Ip6Address []Ip6AddressIp6AddressParameters `json:"ip6Address" tf:"ip6_address,omitempty"`
}

type IpamNetworkSubnetInitParameters struct {
	NetworkRef *string `json:"networkRef,omitempty" tf:"network_ref,omitempty"`

	Subnet []IpamNetworkSubnetSubnetInitParameters `json:"subnet,omitempty" tf:"subnet,omitempty"`

	Subnet6 []IpamNetworkSubnetSubnet6InitParameters `json:"subnet6,omitempty" tf:"subnet6,omitempty"`

	// Uuid of the virtualservice. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Subnet6UUID *string `json:"subnet6Uuid,omitempty" tf:"subnet6_uuid,omitempty"`

	// Uuid of the virtualservice. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	SubnetUUID *string `json:"subnetUuid,omitempty" tf:"subnet_uuid,omitempty"`
}

type IpamNetworkSubnetObservation struct {
	NetworkRef *string `json:"networkRef,omitempty" tf:"network_ref,omitempty"`

	Subnet []IpamNetworkSubnetSubnetObservation `json:"subnet,omitempty" tf:"subnet,omitempty"`

	Subnet6 []IpamNetworkSubnetSubnet6Observation `json:"subnet6,omitempty" tf:"subnet6,omitempty"`

	// Uuid of the virtualservice. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Subnet6UUID *string `json:"subnet6Uuid,omitempty" tf:"subnet6_uuid,omitempty"`

	// Uuid of the virtualservice. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	SubnetUUID *string `json:"subnetUuid,omitempty" tf:"subnet_uuid,omitempty"`
}

type IpamNetworkSubnetParameters struct {

	// +kubebuilder:validation:Optional
	NetworkRef *string `json:"networkRef,omitempty" tf:"network_ref,omitempty"`

	// +kubebuilder:validation:Optional
	Subnet []IpamNetworkSubnetSubnetParameters `json:"subnet,omitempty" tf:"subnet,omitempty"`

	// +kubebuilder:validation:Optional
	Subnet6 []IpamNetworkSubnetSubnet6Parameters `json:"subnet6,omitempty" tf:"subnet6,omitempty"`

	// Uuid of the virtualservice. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Subnet6UUID *string `json:"subnet6Uuid,omitempty" tf:"subnet6_uuid,omitempty"`

	// Uuid of the virtualservice. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	SubnetUUID *string `json:"subnetUuid,omitempty" tf:"subnet_uuid,omitempty"`
}

type IpamNetworkSubnetSubnet6IPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type IpamNetworkSubnetSubnet6IPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type IpamNetworkSubnetSubnet6IPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type IpamNetworkSubnetSubnet6InitParameters struct {
	IPAddr []IpamNetworkSubnetSubnet6IPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type IpamNetworkSubnetSubnet6Observation struct {
	IPAddr []IpamNetworkSubnetSubnet6IPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type IpamNetworkSubnetSubnet6Parameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []IpamNetworkSubnetSubnet6IPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type IpamNetworkSubnetSubnetIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type IpamNetworkSubnetSubnetIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type IpamNetworkSubnetSubnetIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type IpamNetworkSubnetSubnetInitParameters struct {
	IPAddr []IpamNetworkSubnetSubnetIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type IpamNetworkSubnetSubnetObservation struct {
	IPAddr []IpamNetworkSubnetSubnetIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type IpamNetworkSubnetSubnetParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []IpamNetworkSubnetSubnetIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type JwtConfigInitParameters struct {
	Audience *string `json:"audience,omitempty" tf:"audience,omitempty"`

	JwtLocation *string `json:"jwtLocation,omitempty" tf:"jwt_location,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	JwtName *string `json:"jwtName,omitempty" tf:"jwt_name,omitempty"`
}

type JwtConfigObservation struct {
	Audience *string `json:"audience,omitempty" tf:"audience,omitempty"`

	JwtLocation *string `json:"jwtLocation,omitempty" tf:"jwt_location,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	JwtName *string `json:"jwtName,omitempty" tf:"jwt_name,omitempty"`
}

type JwtConfigParameters struct {

	// +kubebuilder:validation:Optional
	Audience *string `json:"audience" tf:"audience,omitempty"`

	// +kubebuilder:validation:Optional
	JwtLocation *string `json:"jwtLocation,omitempty" tf:"jwt_location,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	JwtName *string `json:"jwtName,omitempty" tf:"jwt_name,omitempty"`
}

type JwtParamsInitParameters struct {
	Audience *string `json:"audience,omitempty" tf:"audience,omitempty"`
}

type JwtParamsObservation struct {
	Audience *string `json:"audience,omitempty" tf:"audience,omitempty"`
}

type JwtParamsParameters struct {

	// +kubebuilder:validation:Optional
	Audience *string `json:"audience" tf:"audience,omitempty"`
}

type KeyInitParameters struct {
	AesKey *string `json:"aesKey,omitempty" tf:"aes_key,omitempty"`

	HMACKey *string `json:"hmacKey,omitempty" tf:"hmac_key,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type KeyObservation struct {
	AesKey *string `json:"aesKey,omitempty" tf:"aes_key,omitempty"`

	HMACKey *string `json:"hmacKey,omitempty" tf:"hmac_key,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type KeyParameters struct {

	// +kubebuilder:validation:Optional
	AesKey *string `json:"aesKey,omitempty" tf:"aes_key,omitempty"`

	// +kubebuilder:validation:Optional
	HMACKey *string `json:"hmacKey,omitempty" tf:"hmac_key,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type L4PoliciesInitParameters struct {
	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	L4PolicySetRef *string `json:"l4PolicySetRef,omitempty" tf:"l4_policy_set_ref,omitempty"`
}

type L4PoliciesObservation struct {
	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	L4PolicySetRef *string `json:"l4PolicySetRef,omitempty" tf:"l4_policy_set_ref,omitempty"`
}

type L4PoliciesParameters struct {

	// +kubebuilder:validation:Optional
	Index *string `json:"index" tf:"index,omitempty"`

	// +kubebuilder:validation:Optional
	L4PolicySetRef *string `json:"l4PolicySetRef" tf:"l4_policy_set_ref,omitempty"`
}

type LdapVsConfigInitParameters struct {
	Realm *string `json:"realm,omitempty" tf:"realm,omitempty"`

	SeAuthLdapBindTimeout *string `json:"seAuthLdapBindTimeout,omitempty" tf:"se_auth_ldap_bind_timeout,omitempty"`

	SeAuthLdapCacheSize *string `json:"seAuthLdapCacheSize,omitempty" tf:"se_auth_ldap_cache_size,omitempty"`

	SeAuthLdapConnectTimeout *string `json:"seAuthLdapConnectTimeout,omitempty" tf:"se_auth_ldap_connect_timeout,omitempty"`

	SeAuthLdapConnsPerServer *string `json:"seAuthLdapConnsPerServer,omitempty" tf:"se_auth_ldap_conns_per_server,omitempty"`

	SeAuthLdapReconnectTimeout *string `json:"seAuthLdapReconnectTimeout,omitempty" tf:"se_auth_ldap_reconnect_timeout,omitempty"`

	SeAuthLdapRequestTimeout *string `json:"seAuthLdapRequestTimeout,omitempty" tf:"se_auth_ldap_request_timeout,omitempty"`

	SeAuthLdapServersFailoverOnly *string `json:"seAuthLdapServersFailoverOnly,omitempty" tf:"se_auth_ldap_servers_failover_only,omitempty"`
}

type LdapVsConfigObservation struct {
	Realm *string `json:"realm,omitempty" tf:"realm,omitempty"`

	SeAuthLdapBindTimeout *string `json:"seAuthLdapBindTimeout,omitempty" tf:"se_auth_ldap_bind_timeout,omitempty"`

	SeAuthLdapCacheSize *string `json:"seAuthLdapCacheSize,omitempty" tf:"se_auth_ldap_cache_size,omitempty"`

	SeAuthLdapConnectTimeout *string `json:"seAuthLdapConnectTimeout,omitempty" tf:"se_auth_ldap_connect_timeout,omitempty"`

	SeAuthLdapConnsPerServer *string `json:"seAuthLdapConnsPerServer,omitempty" tf:"se_auth_ldap_conns_per_server,omitempty"`

	SeAuthLdapReconnectTimeout *string `json:"seAuthLdapReconnectTimeout,omitempty" tf:"se_auth_ldap_reconnect_timeout,omitempty"`

	SeAuthLdapRequestTimeout *string `json:"seAuthLdapRequestTimeout,omitempty" tf:"se_auth_ldap_request_timeout,omitempty"`

	SeAuthLdapServersFailoverOnly *string `json:"seAuthLdapServersFailoverOnly,omitempty" tf:"se_auth_ldap_servers_failover_only,omitempty"`
}

type LdapVsConfigParameters struct {

	// +kubebuilder:validation:Optional
	Realm *string `json:"realm,omitempty" tf:"realm,omitempty"`

	// +kubebuilder:validation:Optional
	SeAuthLdapBindTimeout *string `json:"seAuthLdapBindTimeout,omitempty" tf:"se_auth_ldap_bind_timeout,omitempty"`

	// +kubebuilder:validation:Optional
	SeAuthLdapCacheSize *string `json:"seAuthLdapCacheSize,omitempty" tf:"se_auth_ldap_cache_size,omitempty"`

	// +kubebuilder:validation:Optional
	SeAuthLdapConnectTimeout *string `json:"seAuthLdapConnectTimeout,omitempty" tf:"se_auth_ldap_connect_timeout,omitempty"`

	// +kubebuilder:validation:Optional
	SeAuthLdapConnsPerServer *string `json:"seAuthLdapConnsPerServer,omitempty" tf:"se_auth_ldap_conns_per_server,omitempty"`

	// +kubebuilder:validation:Optional
	SeAuthLdapReconnectTimeout *string `json:"seAuthLdapReconnectTimeout,omitempty" tf:"se_auth_ldap_reconnect_timeout,omitempty"`

	// +kubebuilder:validation:Optional
	SeAuthLdapRequestTimeout *string `json:"seAuthLdapRequestTimeout,omitempty" tf:"se_auth_ldap_request_timeout,omitempty"`

	// +kubebuilder:validation:Optional
	SeAuthLdapServersFailoverOnly *string `json:"seAuthLdapServersFailoverOnly,omitempty" tf:"se_auth_ldap_servers_failover_only,omitempty"`
}

type LearningLogPolicyInitParameters struct {

	// Enable or disable the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	Port *string `json:"port,omitempty" tf:"port,omitempty"`
}

type LearningLogPolicyObservation struct {

	// Enable or disable the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	Port *string `json:"port,omitempty" tf:"port,omitempty"`
}

type LearningLogPolicyParameters struct {

	// Enable or disable the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// +kubebuilder:validation:Optional
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	// +kubebuilder:validation:Optional
	Port *string `json:"port,omitempty" tf:"port,omitempty"`
}

type MatchesClientIPAddrsInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MatchesClientIPAddrsObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MatchesClientIPAddrsParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type MatchesClientIPInitParameters struct {
	Addrs []MatchesClientIPAddrsInitParameters `json:"addrs,omitempty" tf:"addrs,omitempty"`

	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Prefixes []MatchesClientIPPrefixesInitParameters `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	Ranges []MatchesClientIPRangesInitParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type MatchesClientIPObservation struct {
	Addrs []MatchesClientIPAddrsObservation `json:"addrs,omitempty" tf:"addrs,omitempty"`

	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Prefixes []MatchesClientIPPrefixesObservation `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	Ranges []MatchesClientIPRangesObservation `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type MatchesClientIPParameters struct {

	// +kubebuilder:validation:Optional
	Addrs []MatchesClientIPAddrsParameters `json:"addrs,omitempty" tf:"addrs,omitempty"`

	// +kubebuilder:validation:Optional
	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Prefixes []MatchesClientIPPrefixesParameters `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	// +kubebuilder:validation:Optional
	Ranges []MatchesClientIPRangesParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type MatchesClientIPPrefixesIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MatchesClientIPPrefixesIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MatchesClientIPPrefixesIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type MatchesClientIPPrefixesInitParameters struct {
	IPAddr []MatchesClientIPPrefixesIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type MatchesClientIPPrefixesObservation struct {
	IPAddr []MatchesClientIPPrefixesIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type MatchesClientIPPrefixesParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []MatchesClientIPPrefixesIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type MatchesClientIPRangesBeginInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MatchesClientIPRangesBeginObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MatchesClientIPRangesBeginParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type MatchesClientIPRangesEndInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MatchesClientIPRangesEndObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MatchesClientIPRangesEndParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type MatchesClientIPRangesInitParameters struct {
	Begin []MatchesClientIPRangesBeginInitParameters `json:"begin,omitempty" tf:"begin,omitempty"`

	End []MatchesClientIPRangesEndInitParameters `json:"end,omitempty" tf:"end,omitempty"`
}

type MatchesClientIPRangesObservation struct {
	Begin []MatchesClientIPRangesBeginObservation `json:"begin,omitempty" tf:"begin,omitempty"`

	End []MatchesClientIPRangesEndObservation `json:"end,omitempty" tf:"end,omitempty"`
}

type MatchesClientIPRangesParameters struct {

	// +kubebuilder:validation:Optional
	Begin []MatchesClientIPRangesBeginParameters `json:"begin" tf:"begin,omitempty"`

	// +kubebuilder:validation:Optional
	End []MatchesClientIPRangesEndParameters `json:"end" tf:"end,omitempty"`
}

type MatchesInitParameters struct {
	BotDetectionResult []BotDetectionResultInitParameters `json:"botDetectionResult,omitempty" tf:"bot_detection_result,omitempty"`

	ClientIP []MatchesClientIPInitParameters `json:"clientIp,omitempty" tf:"client_ip,omitempty"`

	Cookie []CookieInitParameters `json:"cookie,omitempty" tf:"cookie,omitempty"`

	GeoMatches []GeoMatchesInitParameters `json:"geoMatches,omitempty" tf:"geo_matches,omitempty"`

	Hdrs []HdrsInitParameters `json:"hdrs,omitempty" tf:"hdrs,omitempty"`

	HostHdr []HostHdrInitParameters `json:"hostHdr,omitempty" tf:"host_hdr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	IPReputationType []IPReputationTypeInitParameters `json:"ipReputationType,omitempty" tf:"ip_reputation_type,omitempty"`

	Method []MethodInitParameters `json:"method,omitempty" tf:"method,omitempty"`

	Path []MatchesPathInitParameters `json:"path,omitempty" tf:"path,omitempty"`

	Protocol []ProtocolInitParameters `json:"protocol,omitempty" tf:"protocol,omitempty"`

	Query []QueryInitParameters `json:"query,omitempty" tf:"query,omitempty"`

	SourceIP []SourceIPInitParameters `json:"sourceIp,omitempty" tf:"source_ip,omitempty"`

	TLSFingerprintMatch []TLSFingerprintMatchInitParameters `json:"tlsFingerprintMatch,omitempty" tf:"tls_fingerprint_match,omitempty"`

	Version []VersionInitParameters `json:"version,omitempty" tf:"version,omitempty"`

	VsPort []VsPortInitParameters `json:"vsPort,omitempty" tf:"vs_port,omitempty"`
}

type MatchesObservation struct {
	BotDetectionResult []BotDetectionResultObservation `json:"botDetectionResult,omitempty" tf:"bot_detection_result,omitempty"`

	ClientIP []MatchesClientIPObservation `json:"clientIp,omitempty" tf:"client_ip,omitempty"`

	Cookie []CookieObservation `json:"cookie,omitempty" tf:"cookie,omitempty"`

	GeoMatches []GeoMatchesObservation `json:"geoMatches,omitempty" tf:"geo_matches,omitempty"`

	Hdrs []HdrsObservation `json:"hdrs,omitempty" tf:"hdrs,omitempty"`

	HostHdr []HostHdrObservation `json:"hostHdr,omitempty" tf:"host_hdr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	IPReputationType []IPReputationTypeObservation `json:"ipReputationType,omitempty" tf:"ip_reputation_type,omitempty"`

	Method []MethodObservation `json:"method,omitempty" tf:"method,omitempty"`

	Path []MatchesPathObservation `json:"path,omitempty" tf:"path,omitempty"`

	Protocol []ProtocolObservation `json:"protocol,omitempty" tf:"protocol,omitempty"`

	Query []QueryObservation `json:"query,omitempty" tf:"query,omitempty"`

	SourceIP []SourceIPObservation `json:"sourceIp,omitempty" tf:"source_ip,omitempty"`

	TLSFingerprintMatch []TLSFingerprintMatchObservation `json:"tlsFingerprintMatch,omitempty" tf:"tls_fingerprint_match,omitempty"`

	Version []VersionObservation `json:"version,omitempty" tf:"version,omitempty"`

	VsPort []VsPortObservation `json:"vsPort,omitempty" tf:"vs_port,omitempty"`
}

type MatchesParameters struct {

	// +kubebuilder:validation:Optional
	BotDetectionResult []BotDetectionResultParameters `json:"botDetectionResult,omitempty" tf:"bot_detection_result,omitempty"`

	// +kubebuilder:validation:Optional
	ClientIP []MatchesClientIPParameters `json:"clientIp,omitempty" tf:"client_ip,omitempty"`

	// +kubebuilder:validation:Optional
	Cookie []CookieParameters `json:"cookie,omitempty" tf:"cookie,omitempty"`

	// +kubebuilder:validation:Optional
	GeoMatches []GeoMatchesParameters `json:"geoMatches,omitempty" tf:"geo_matches,omitempty"`

	// +kubebuilder:validation:Optional
	Hdrs []HdrsParameters `json:"hdrs,omitempty" tf:"hdrs,omitempty"`

	// +kubebuilder:validation:Optional
	HostHdr []HostHdrParameters `json:"hostHdr,omitempty" tf:"host_hdr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	IPReputationType []IPReputationTypeParameters `json:"ipReputationType,omitempty" tf:"ip_reputation_type,omitempty"`

	// +kubebuilder:validation:Optional
	Method []MethodParameters `json:"method,omitempty" tf:"method,omitempty"`

	// +kubebuilder:validation:Optional
	Path []MatchesPathParameters `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	Protocol []ProtocolParameters `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// +kubebuilder:validation:Optional
	Query []QueryParameters `json:"query,omitempty" tf:"query,omitempty"`

	// +kubebuilder:validation:Optional
	SourceIP []SourceIPParameters `json:"sourceIp,omitempty" tf:"source_ip,omitempty"`

	// +kubebuilder:validation:Optional
	TLSFingerprintMatch []TLSFingerprintMatchParameters `json:"tlsFingerprintMatch,omitempty" tf:"tls_fingerprint_match,omitempty"`

	// +kubebuilder:validation:Optional
	Version []VersionParameters `json:"version,omitempty" tf:"version,omitempty"`

	// +kubebuilder:validation:Optional
	VsPort []VsPortParameters `json:"vsPort,omitempty" tf:"vs_port,omitempty"`
}

type MatchesPathInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type MatchesPathObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type MatchesPathParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	// +kubebuilder:validation:Optional
	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	// +kubebuilder:validation:Optional
	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type MethodInitParameters struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Methods []*string `json:"methods,omitempty" tf:"methods,omitempty"`
}

type MethodObservation struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Methods []*string `json:"methods,omitempty" tf:"methods,omitempty"`
}

type MethodParameters struct {

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Methods []*string `json:"methods" tf:"methods,omitempty"`
}

type MetricsRealtimeUpdateInitParameters struct {
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	// Enable or disable the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type MetricsRealtimeUpdateObservation struct {
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	// Enable or disable the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type MetricsRealtimeUpdateParameters struct {

	// +kubebuilder:validation:Optional
	Duration *string `json:"duration,omitempty" tf:"duration,omitempty"`

	// Enable or disable the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Enabled *string `json:"enabled" tf:"enabled,omitempty"`
}

type MxRecordsInitParameters struct {
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	Priority *string `json:"priority,omitempty" tf:"priority,omitempty"`
}

type MxRecordsObservation struct {
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	Priority *string `json:"priority,omitempty" tf:"priority,omitempty"`
}

type MxRecordsParameters struct {

	// +kubebuilder:validation:Optional
	Host *string `json:"host" tf:"host,omitempty"`

	// +kubebuilder:validation:Optional
	Priority *string `json:"priority" tf:"priority,omitempty"`
}

type NsIPAddressInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type NsIPAddressObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type NsIPAddressParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type NsInitParameters struct {
	IPAddress []NsIPAddressInitParameters `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	Ip6Address []NsIp6AddressInitParameters `json:"ip6Address,omitempty" tf:"ip6_address,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Nsname *string `json:"nsname,omitempty" tf:"nsname,omitempty"`
}

type NsIp6AddressInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type NsIp6AddressObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type NsIp6AddressParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type NsObservation struct {
	IPAddress []NsIPAddressObservation `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	Ip6Address []NsIp6AddressObservation `json:"ip6Address,omitempty" tf:"ip6_address,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Nsname *string `json:"nsname,omitempty" tf:"nsname,omitempty"`
}

type NsParameters struct {

	// +kubebuilder:validation:Optional
	IPAddress []NsIPAddressParameters `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// +kubebuilder:validation:Optional
	Ip6Address []NsIp6AddressParameters `json:"ip6Address,omitempty" tf:"ip6_address,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Nsname *string `json:"nsname" tf:"nsname,omitempty"`
}

type OauthSettingsInitParameters struct {
	AppSettings []AppSettingsInitParameters `json:"appSettings,omitempty" tf:"app_settings,omitempty"`

	AuthProfileRef *string `json:"authProfileRef,omitempty" tf:"auth_profile_ref,omitempty"`

	ResourceServer []ResourceServerInitParameters `json:"resourceServer,omitempty" tf:"resource_server,omitempty"`
}

type OauthSettingsObservation struct {
	AppSettings []AppSettingsObservation `json:"appSettings,omitempty" tf:"app_settings,omitempty"`

	AuthProfileRef *string `json:"authProfileRef,omitempty" tf:"auth_profile_ref,omitempty"`

	ResourceServer []ResourceServerObservation `json:"resourceServer,omitempty" tf:"resource_server,omitempty"`
}

type OauthSettingsParameters struct {

	// +kubebuilder:validation:Optional
	AppSettings []AppSettingsParameters `json:"appSettings,omitempty" tf:"app_settings,omitempty"`

	// +kubebuilder:validation:Optional
	AuthProfileRef *string `json:"authProfileRef" tf:"auth_profile_ref,omitempty"`

	// +kubebuilder:validation:Optional
	ResourceServer []ResourceServerParameters `json:"resourceServer,omitempty" tf:"resource_server,omitempty"`
}

type OauthVsConfigInitParameters struct {

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	CookieName *string `json:"cookieName,omitempty" tf:"cookie_name,omitempty"`

	CookieTimeout *string `json:"cookieTimeout,omitempty" tf:"cookie_timeout,omitempty"`

	Key []KeyInitParameters `json:"key,omitempty" tf:"key,omitempty"`

	LogoutURI *string `json:"logoutUri,omitempty" tf:"logout_uri,omitempty"`

	OauthSettings []OauthSettingsInitParameters `json:"oauthSettings,omitempty" tf:"oauth_settings,omitempty"`

	PostLogoutRedirectURI *string `json:"postLogoutRedirectUri,omitempty" tf:"post_logout_redirect_uri,omitempty"`

	RedirectURI *string `json:"redirectUri,omitempty" tf:"redirect_uri,omitempty"`
}

type OauthVsConfigObservation struct {

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	CookieName *string `json:"cookieName,omitempty" tf:"cookie_name,omitempty"`

	CookieTimeout *string `json:"cookieTimeout,omitempty" tf:"cookie_timeout,omitempty"`

	Key []KeyObservation `json:"key,omitempty" tf:"key,omitempty"`

	LogoutURI *string `json:"logoutUri,omitempty" tf:"logout_uri,omitempty"`

	OauthSettings []OauthSettingsObservation `json:"oauthSettings,omitempty" tf:"oauth_settings,omitempty"`

	PostLogoutRedirectURI *string `json:"postLogoutRedirectUri,omitempty" tf:"post_logout_redirect_uri,omitempty"`

	RedirectURI *string `json:"redirectUri,omitempty" tf:"redirect_uri,omitempty"`
}

type OauthVsConfigParameters struct {

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	CookieName *string `json:"cookieName,omitempty" tf:"cookie_name,omitempty"`

	// +kubebuilder:validation:Optional
	CookieTimeout *string `json:"cookieTimeout,omitempty" tf:"cookie_timeout,omitempty"`

	// +kubebuilder:validation:Optional
	Key []KeyParameters `json:"key,omitempty" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	LogoutURI *string `json:"logoutUri,omitempty" tf:"logout_uri,omitempty"`

	// +kubebuilder:validation:Optional
	OauthSettings []OauthSettingsParameters `json:"oauthSettings,omitempty" tf:"oauth_settings,omitempty"`

	// +kubebuilder:validation:Optional
	PostLogoutRedirectURI *string `json:"postLogoutRedirectUri,omitempty" tf:"post_logout_redirect_uri,omitempty"`

	// +kubebuilder:validation:Optional
	RedirectURI *string `json:"redirectUri,omitempty" tf:"redirect_uri,omitempty"`
}

type OidcConfigInitParameters struct {
	OidcEnable *string `json:"oidcEnable,omitempty" tf:"oidc_enable,omitempty"`

	Profile *string `json:"profile,omitempty" tf:"profile,omitempty"`

	Userinfo *string `json:"userinfo,omitempty" tf:"userinfo,omitempty"`
}

type OidcConfigObservation struct {
	OidcEnable *string `json:"oidcEnable,omitempty" tf:"oidc_enable,omitempty"`

	Profile *string `json:"profile,omitempty" tf:"profile,omitempty"`

	Userinfo *string `json:"userinfo,omitempty" tf:"userinfo,omitempty"`
}

type OidcConfigParameters struct {

	// +kubebuilder:validation:Optional
	OidcEnable *string `json:"oidcEnable,omitempty" tf:"oidc_enable,omitempty"`

	// +kubebuilder:validation:Optional
	Profile *string `json:"profile,omitempty" tf:"profile,omitempty"`

	// +kubebuilder:validation:Optional
	Userinfo *string `json:"userinfo,omitempty" tf:"userinfo,omitempty"`
}

type OpaqueTokenParamsInitParameters struct {
	ServerID *string `json:"serverId,omitempty" tf:"server_id,omitempty"`

	ServerSecretSecretRef v1.SecretKeySelector `json:"serverSecretSecretRef" tf:"-"`
}

type OpaqueTokenParamsObservation struct {
	ServerID *string `json:"serverId,omitempty" tf:"server_id,omitempty"`
}

type OpaqueTokenParamsParameters struct {

	// +kubebuilder:validation:Optional
	ServerID *string `json:"serverId" tf:"server_id,omitempty"`

	// +kubebuilder:validation:Optional
	ServerSecretSecretRef v1.SecretKeySelector `json:"serverSecretSecretRef" tf:"-"`
}

type PairsInitParameters struct {
	ReplacementString []ReplacementStringInitParameters `json:"replacementString,omitempty" tf:"replacement_string,omitempty"`

	SearchString []SearchStringInitParameters `json:"searchString,omitempty" tf:"search_string,omitempty"`
}

type PairsObservation struct {
	ReplacementString []ReplacementStringObservation `json:"replacementString,omitempty" tf:"replacement_string,omitempty"`

	SearchString []SearchStringObservation `json:"searchString,omitempty" tf:"search_string,omitempty"`
}

type PairsParameters struct {

	// +kubebuilder:validation:Optional
	ReplacementString []ReplacementStringParameters `json:"replacementString,omitempty" tf:"replacement_string,omitempty"`

	// +kubebuilder:validation:Optional
	SearchString []SearchStringParameters `json:"searchString" tf:"search_string,omitempty"`
}

type PerformanceLimitsInitParameters struct {
	MaxConcurrentConnections *string `json:"maxConcurrentConnections,omitempty" tf:"max_concurrent_connections,omitempty"`

	MaxThroughput *string `json:"maxThroughput,omitempty" tf:"max_throughput,omitempty"`
}

type PerformanceLimitsObservation struct {
	MaxConcurrentConnections *string `json:"maxConcurrentConnections,omitempty" tf:"max_concurrent_connections,omitempty"`

	MaxThroughput *string `json:"maxThroughput,omitempty" tf:"max_throughput,omitempty"`
}

type PerformanceLimitsParameters struct {

	// +kubebuilder:validation:Optional
	MaxConcurrentConnections *string `json:"maxConcurrentConnections,omitempty" tf:"max_concurrent_connections,omitempty"`

	// +kubebuilder:validation:Optional
	MaxThroughput *string `json:"maxThroughput,omitempty" tf:"max_throughput,omitempty"`
}

type PlacementNetworksSubnet6IPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type PlacementNetworksSubnet6IPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type PlacementNetworksSubnet6IPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type PlacementNetworksSubnet6InitParameters struct {
	IPAddr []PlacementNetworksSubnet6IPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type PlacementNetworksSubnet6Observation struct {
	IPAddr []PlacementNetworksSubnet6IPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type PlacementNetworksSubnet6Parameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []PlacementNetworksSubnet6IPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type PlacementNetworksSubnetIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type PlacementNetworksSubnetIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type PlacementNetworksSubnetIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type PlacementNetworksSubnetInitParameters struct {
	IPAddr []PlacementNetworksSubnetIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type PlacementNetworksSubnetObservation struct {
	IPAddr []PlacementNetworksSubnetIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type PlacementNetworksSubnetParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []PlacementNetworksSubnetIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type PrefixesIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type PrefixesIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type PrefixesIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type ProtocolInitParameters struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Protocols *string `json:"protocols,omitempty" tf:"protocols,omitempty"`
}

type ProtocolObservation struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Protocols *string `json:"protocols,omitempty" tf:"protocols,omitempty"`
}

type ProtocolParameters struct {

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Protocols *string `json:"protocols" tf:"protocols,omitempty"`
}

type QueryInitParameters struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type QueryObservation struct {
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type QueryParameters struct {

	// +kubebuilder:validation:Optional
	MatchCase *string `json:"matchCase,omitempty" tf:"match_case,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	MatchDecodedString *string `json:"matchDecodedString,omitempty" tf:"match_decoded_string,omitempty"`

	// +kubebuilder:validation:Optional
	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	// +kubebuilder:validation:Optional
	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type RangesBeginInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RangesBeginObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RangesBeginParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type RangesEndInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RangesEndObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RangesEndParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type RedirectHostInitParameters struct {
	Tokens []HostTokensInitParameters `json:"tokens,omitempty" tf:"tokens,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RedirectHostObservation struct {
	Tokens []HostTokensObservation `json:"tokens,omitempty" tf:"tokens,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RedirectHostParameters struct {

	// +kubebuilder:validation:Optional
	Tokens []HostTokensParameters `json:"tokens" tf:"tokens,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type RedirectHostTokensInitParameters struct {
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RedirectHostTokensObservation struct {
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RedirectHostTokensParameters struct {

	// +kubebuilder:validation:Optional
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	// +kubebuilder:validation:Optional
	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	// +kubebuilder:validation:Optional
	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type RedirectPathInitParameters struct {
	Tokens []RedirectPathTokensInitParameters `json:"tokens,omitempty" tf:"tokens,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RedirectPathObservation struct {
	Tokens []RedirectPathTokensObservation `json:"tokens,omitempty" tf:"tokens,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RedirectPathParameters struct {

	// +kubebuilder:validation:Optional
	Tokens []RedirectPathTokensParameters `json:"tokens" tf:"tokens,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type RedirectPathTokensInitParameters struct {
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RedirectPathTokensObservation struct {
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RedirectPathTokensParameters struct {

	// +kubebuilder:validation:Optional
	EndIndex *string `json:"endIndex,omitempty" tf:"end_index,omitempty"`

	// +kubebuilder:validation:Optional
	StartIndex *string `json:"startIndex,omitempty" tf:"start_index,omitempty"`

	// +kubebuilder:validation:Optional
	StrValue *string `json:"strValue,omitempty" tf:"str_value,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type ReplacementStringInitParameters struct {

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	Val *string `json:"val,omitempty" tf:"val,omitempty"`
}

type ReplacementStringObservation struct {

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	Val *string `json:"val,omitempty" tf:"val,omitempty"`
}

type ReplacementStringParameters struct {

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// +kubebuilder:validation:Optional
	Val *string `json:"val,omitempty" tf:"val,omitempty"`
}

type RequestsRateLimitActionFileInitParameters struct {

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	ContentType *string `json:"contentType,omitempty" tf:"content_type,omitempty"`

	FileContent *string `json:"fileContent,omitempty" tf:"file_content,omitempty"`

	FileLength *string `json:"fileLength,omitempty" tf:"file_length,omitempty"`
}

type RequestsRateLimitActionFileObservation struct {

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	ContentType *string `json:"contentType,omitempty" tf:"content_type,omitempty"`

	FileContent *string `json:"fileContent,omitempty" tf:"file_content,omitempty"`

	FileLength *string `json:"fileLength,omitempty" tf:"file_length,omitempty"`
}

type RequestsRateLimitActionFileParameters struct {

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ContentType *string `json:"contentType" tf:"content_type,omitempty"`

	// +kubebuilder:validation:Optional
	FileContent *string `json:"fileContent" tf:"file_content,omitempty"`

	// +kubebuilder:validation:Optional
	FileLength *string `json:"fileLength,omitempty" tf:"file_length,omitempty"`
}

type RequestsRateLimitActionInitParameters struct {
	File []RequestsRateLimitActionFileInitParameters `json:"file,omitempty" tf:"file,omitempty"`

	Redirect []RequestsRateLimitActionRedirectInitParameters `json:"redirect,omitempty" tf:"redirect,omitempty"`

	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RequestsRateLimitActionObservation struct {
	File []RequestsRateLimitActionFileObservation `json:"file,omitempty" tf:"file,omitempty"`

	Redirect []RequestsRateLimitActionRedirectObservation `json:"redirect,omitempty" tf:"redirect,omitempty"`

	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RequestsRateLimitActionParameters struct {

	// +kubebuilder:validation:Optional
	File []RequestsRateLimitActionFileParameters `json:"file,omitempty" tf:"file,omitempty"`

	// +kubebuilder:validation:Optional
	Redirect []RequestsRateLimitActionRedirectParameters `json:"redirect,omitempty" tf:"redirect,omitempty"`

	// +kubebuilder:validation:Optional
	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RequestsRateLimitActionRedirectInitParameters struct {
	AddString *string `json:"addString,omitempty" tf:"add_string,omitempty"`

	Host []ActionRedirectHostInitParameters `json:"host,omitempty" tf:"host,omitempty"`

	KeepQuery *string `json:"keepQuery,omitempty" tf:"keep_query,omitempty"`

	Path []ActionRedirectPathInitParameters `json:"path,omitempty" tf:"path,omitempty"`

	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type RequestsRateLimitActionRedirectObservation struct {
	AddString *string `json:"addString,omitempty" tf:"add_string,omitempty"`

	Host []ActionRedirectHostObservation `json:"host,omitempty" tf:"host,omitempty"`

	KeepQuery *string `json:"keepQuery,omitempty" tf:"keep_query,omitempty"`

	Path []ActionRedirectPathObservation `json:"path,omitempty" tf:"path,omitempty"`

	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type RequestsRateLimitActionRedirectParameters struct {

	// +kubebuilder:validation:Optional
	AddString *string `json:"addString,omitempty" tf:"add_string,omitempty"`

	// +kubebuilder:validation:Optional
	Host []ActionRedirectHostParameters `json:"host,omitempty" tf:"host,omitempty"`

	// +kubebuilder:validation:Optional
	KeepQuery *string `json:"keepQuery,omitempty" tf:"keep_query,omitempty"`

	// +kubebuilder:validation:Optional
	Path []ActionRedirectPathParameters `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	// +kubebuilder:validation:Optional
	Protocol *string `json:"protocol" tf:"protocol,omitempty"`

	// +kubebuilder:validation:Optional
	StatusCode *string `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

type RequestsRateLimitInitParameters struct {
	Action []RequestsRateLimitActionInitParameters `json:"action,omitempty" tf:"action,omitempty"`

	ExplicitTracking *string `json:"explicitTracking,omitempty" tf:"explicit_tracking,omitempty"`

	FineGrain *string `json:"fineGrain,omitempty" tf:"fine_grain,omitempty"`

	HTTPCookie *string `json:"httpCookie,omitempty" tf:"http_cookie,omitempty"`

	HTTPHeader *string `json:"httpHeader,omitempty" tf:"http_header,omitempty"`

	RateLimiter []RequestsRateLimitRateLimiterInitParameters `json:"rateLimiter,omitempty" tf:"rate_limiter,omitempty"`
}

type RequestsRateLimitObservation struct {
	Action []RequestsRateLimitActionObservation `json:"action,omitempty" tf:"action,omitempty"`

	ExplicitTracking *string `json:"explicitTracking,omitempty" tf:"explicit_tracking,omitempty"`

	FineGrain *string `json:"fineGrain,omitempty" tf:"fine_grain,omitempty"`

	HTTPCookie *string `json:"httpCookie,omitempty" tf:"http_cookie,omitempty"`

	HTTPHeader *string `json:"httpHeader,omitempty" tf:"http_header,omitempty"`

	RateLimiter []RequestsRateLimitRateLimiterObservation `json:"rateLimiter,omitempty" tf:"rate_limiter,omitempty"`
}

type RequestsRateLimitParameters struct {

	// +kubebuilder:validation:Optional
	Action []RequestsRateLimitActionParameters `json:"action" tf:"action,omitempty"`

	// +kubebuilder:validation:Optional
	ExplicitTracking *string `json:"explicitTracking,omitempty" tf:"explicit_tracking,omitempty"`

	// +kubebuilder:validation:Optional
	FineGrain *string `json:"fineGrain,omitempty" tf:"fine_grain,omitempty"`

	// +kubebuilder:validation:Optional
	HTTPCookie *string `json:"httpCookie,omitempty" tf:"http_cookie,omitempty"`

	// +kubebuilder:validation:Optional
	HTTPHeader *string `json:"httpHeader,omitempty" tf:"http_header,omitempty"`

	// +kubebuilder:validation:Optional
	RateLimiter []RequestsRateLimitRateLimiterParameters `json:"rateLimiter,omitempty" tf:"rate_limiter,omitempty"`
}

type RequestsRateLimitRateLimiterInitParameters struct {
	BurstSz *string `json:"burstSz,omitempty" tf:"burst_sz,omitempty"`

	Count *string `json:"count,omitempty" tf:"count,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Period *string `json:"period,omitempty" tf:"period,omitempty"`
}

type RequestsRateLimitRateLimiterObservation struct {
	BurstSz *string `json:"burstSz,omitempty" tf:"burst_sz,omitempty"`

	Count *string `json:"count,omitempty" tf:"count,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Period *string `json:"period,omitempty" tf:"period,omitempty"`
}

type RequestsRateLimitRateLimiterParameters struct {

	// +kubebuilder:validation:Optional
	BurstSz *string `json:"burstSz,omitempty" tf:"burst_sz,omitempty"`

	// +kubebuilder:validation:Optional
	Count *string `json:"count,omitempty" tf:"count,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Period *string `json:"period,omitempty" tf:"period,omitempty"`
}

type ResourceServerInitParameters struct {

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	AccessType *string `json:"accessType,omitempty" tf:"access_type,omitempty"`

	IntrospectionDataTimeout *string `json:"introspectionDataTimeout,omitempty" tf:"introspection_data_timeout,omitempty"`

	JwtParams []JwtParamsInitParameters `json:"jwtParams,omitempty" tf:"jwt_params,omitempty"`

	OpaqueTokenParams []OpaqueTokenParamsInitParameters `json:"opaqueTokenParams,omitempty" tf:"opaque_token_params,omitempty"`
}

type ResourceServerObservation struct {

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	AccessType *string `json:"accessType,omitempty" tf:"access_type,omitempty"`

	IntrospectionDataTimeout *string `json:"introspectionDataTimeout,omitempty" tf:"introspection_data_timeout,omitempty"`

	JwtParams []JwtParamsObservation `json:"jwtParams,omitempty" tf:"jwt_params,omitempty"`

	OpaqueTokenParams []OpaqueTokenParamsObservation `json:"opaqueTokenParams,omitempty" tf:"opaque_token_params,omitempty"`
}

type ResourceServerParameters struct {

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	AccessType *string `json:"accessType,omitempty" tf:"access_type,omitempty"`

	// +kubebuilder:validation:Optional
	IntrospectionDataTimeout *string `json:"introspectionDataTimeout,omitempty" tf:"introspection_data_timeout,omitempty"`

	// +kubebuilder:validation:Optional
	JwtParams []JwtParamsParameters `json:"jwtParams,omitempty" tf:"jwt_params,omitempty"`

	// +kubebuilder:validation:Optional
	OpaqueTokenParams []OpaqueTokenParamsParameters `json:"opaqueTokenParams,omitempty" tf:"opaque_token_params,omitempty"`
}

type RspRewriteRulesInitParameters struct {
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Pairs []PairsInitParameters `json:"pairs,omitempty" tf:"pairs,omitempty"`
}

type RspRewriteRulesObservation struct {
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Pairs []PairsObservation `json:"pairs,omitempty" tf:"pairs,omitempty"`
}

type RspRewriteRulesParameters struct {

	// +kubebuilder:validation:Optional
	Enable *string `json:"enable,omitempty" tf:"enable,omitempty"`

	// +kubebuilder:validation:Optional
	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Pairs []PairsParameters `json:"pairs,omitempty" tf:"pairs,omitempty"`
}

type SAMLSpConfigInitParameters struct {
	AcsIndex *string `json:"acsIndex,omitempty" tf:"acs_index,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	AuthnReqAcsType *string `json:"authnReqAcsType,omitempty" tf:"authn_req_acs_type,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	CookieName *string `json:"cookieName,omitempty" tf:"cookie_name,omitempty"`

	CookieTimeout *string `json:"cookieTimeout,omitempty" tf:"cookie_timeout,omitempty"`

	EntityID *string `json:"entityId,omitempty" tf:"entity_id,omitempty"`

	Key []SAMLSpConfigKeyInitParameters `json:"key,omitempty" tf:"key,omitempty"`

	SigningSSLKeyAndCertificateRef *string `json:"signingSslKeyAndCertificateRef,omitempty" tf:"signing_ssl_key_and_certificate_ref,omitempty"`

	SingleSignonURL *string `json:"singleSignonUrl,omitempty" tf:"single_signon_url,omitempty"`

	SpMetadata *string `json:"spMetadata,omitempty" tf:"sp_metadata,omitempty"`

	UseIdpSessionTimeout *string `json:"useIdpSessionTimeout,omitempty" tf:"use_idp_session_timeout,omitempty"`
}

type SAMLSpConfigKeyInitParameters struct {
	AesKey *string `json:"aesKey,omitempty" tf:"aes_key,omitempty"`

	HMACKey *string `json:"hmacKey,omitempty" tf:"hmac_key,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type SAMLSpConfigKeyObservation struct {
	AesKey *string `json:"aesKey,omitempty" tf:"aes_key,omitempty"`

	HMACKey *string `json:"hmacKey,omitempty" tf:"hmac_key,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type SAMLSpConfigKeyParameters struct {

	// +kubebuilder:validation:Optional
	AesKey *string `json:"aesKey,omitempty" tf:"aes_key,omitempty"`

	// +kubebuilder:validation:Optional
	HMACKey *string `json:"hmacKey,omitempty" tf:"hmac_key,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type SAMLSpConfigObservation struct {
	AcsIndex *string `json:"acsIndex,omitempty" tf:"acs_index,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	AuthnReqAcsType *string `json:"authnReqAcsType,omitempty" tf:"authn_req_acs_type,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	CookieName *string `json:"cookieName,omitempty" tf:"cookie_name,omitempty"`

	CookieTimeout *string `json:"cookieTimeout,omitempty" tf:"cookie_timeout,omitempty"`

	EntityID *string `json:"entityId,omitempty" tf:"entity_id,omitempty"`

	Key []SAMLSpConfigKeyObservation `json:"key,omitempty" tf:"key,omitempty"`

	SigningSSLKeyAndCertificateRef *string `json:"signingSslKeyAndCertificateRef,omitempty" tf:"signing_ssl_key_and_certificate_ref,omitempty"`

	SingleSignonURL *string `json:"singleSignonUrl,omitempty" tf:"single_signon_url,omitempty"`

	SpMetadata *string `json:"spMetadata,omitempty" tf:"sp_metadata,omitempty"`

	UseIdpSessionTimeout *string `json:"useIdpSessionTimeout,omitempty" tf:"use_idp_session_timeout,omitempty"`
}

type SAMLSpConfigParameters struct {

	// +kubebuilder:validation:Optional
	AcsIndex *string `json:"acsIndex,omitempty" tf:"acs_index,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	AuthnReqAcsType *string `json:"authnReqAcsType,omitempty" tf:"authn_req_acs_type,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	CookieName *string `json:"cookieName,omitempty" tf:"cookie_name,omitempty"`

	// +kubebuilder:validation:Optional
	CookieTimeout *string `json:"cookieTimeout,omitempty" tf:"cookie_timeout,omitempty"`

	// +kubebuilder:validation:Optional
	EntityID *string `json:"entityId" tf:"entity_id,omitempty"`

	// +kubebuilder:validation:Optional
	Key []SAMLSpConfigKeyParameters `json:"key,omitempty" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	SigningSSLKeyAndCertificateRef *string `json:"signingSslKeyAndCertificateRef,omitempty" tf:"signing_ssl_key_and_certificate_ref,omitempty"`

	// +kubebuilder:validation:Optional
	SingleSignonURL *string `json:"singleSignonUrl" tf:"single_signon_url,omitempty"`

	// +kubebuilder:validation:Optional
	SpMetadata *string `json:"spMetadata,omitempty" tf:"sp_metadata,omitempty"`

	// +kubebuilder:validation:Optional
	UseIdpSessionTimeout *string `json:"useIdpSessionTimeout,omitempty" tf:"use_idp_session_timeout,omitempty"`
}

type SSLProfileSelectorsInitParameters struct {
	ClientIPList []ClientIPListInitParameters `json:"clientIpList,omitempty" tf:"client_ip_list,omitempty"`

	// Determines the set of ssl versions and ciphers to accept for ssl/tls terminated connections. It is a reference to an object of type sslprofile. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	SSLProfileRef *string `json:"sslProfileRef,omitempty" tf:"ssl_profile_ref,omitempty"`
}

type SSLProfileSelectorsObservation struct {
	ClientIPList []ClientIPListObservation `json:"clientIpList,omitempty" tf:"client_ip_list,omitempty"`

	// Determines the set of ssl versions and ciphers to accept for ssl/tls terminated connections. It is a reference to an object of type sslprofile. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	SSLProfileRef *string `json:"sslProfileRef,omitempty" tf:"ssl_profile_ref,omitempty"`
}

type SSLProfileSelectorsParameters struct {

	// +kubebuilder:validation:Optional
	ClientIPList []ClientIPListParameters `json:"clientIpList" tf:"client_ip_list,omitempty"`

	// Determines the set of ssl versions and ciphers to accept for ssl/tls terminated connections. It is a reference to an object of type sslprofile. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	SSLProfileRef *string `json:"sslProfileRef" tf:"ssl_profile_ref,omitempty"`
}

type SampleUrisInitParameters struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type SampleUrisObservation struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type SampleUrisParameters struct {

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	// +kubebuilder:validation:Optional
	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type SearchStringInitParameters struct {

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	Val *string `json:"val,omitempty" tf:"val,omitempty"`
}

type SearchStringObservation struct {

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	Val *string `json:"val,omitempty" tf:"val,omitempty"`
}

type SearchStringParameters struct {

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// +kubebuilder:validation:Optional
	Val *string `json:"val" tf:"val,omitempty"`
}

type ServiceLocatorInitParameters struct {
	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	Priority *string `json:"priority,omitempty" tf:"priority,omitempty"`

	Target *string `json:"target,omitempty" tf:"target,omitempty"`

	// The quality of service weight to assign to traffic transmitted from this virtual service. A higher weight will prioritize traffic versus other virtual services sharing the same service engines. Allowed values are 1-128. Allowed in enterprise edition with any value, essentials edition(allowed values- 1), basic edition(allowed values- 1), enterprise with cloud services edition.
	Weight *string `json:"weight,omitempty" tf:"weight,omitempty"`
}

type ServiceLocatorObservation struct {
	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	Priority *string `json:"priority,omitempty" tf:"priority,omitempty"`

	Target *string `json:"target,omitempty" tf:"target,omitempty"`

	// The quality of service weight to assign to traffic transmitted from this virtual service. A higher weight will prioritize traffic versus other virtual services sharing the same service engines. Allowed values are 1-128. Allowed in enterprise edition with any value, essentials edition(allowed values- 1), basic edition(allowed values- 1), enterprise with cloud services edition.
	Weight *string `json:"weight,omitempty" tf:"weight,omitempty"`
}

type ServiceLocatorParameters struct {

	// +kubebuilder:validation:Optional
	Port *string `json:"port" tf:"port,omitempty"`

	// +kubebuilder:validation:Optional
	Priority *string `json:"priority,omitempty" tf:"priority,omitempty"`

	// +kubebuilder:validation:Optional
	Target *string `json:"target,omitempty" tf:"target,omitempty"`

	// The quality of service weight to assign to traffic transmitted from this virtual service. A higher weight will prioritize traffic versus other virtual services sharing the same service engines. Allowed values are 1-128. Allowed in enterprise edition with any value, essentials edition(allowed values- 1), basic edition(allowed values- 1), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Weight *string `json:"weight,omitempty" tf:"weight,omitempty"`
}

type ServicePoolSelectInitParameters struct {

	// The pool group is an object that contains pools. It is a reference to an object of type poolgroup. Allowed in enterprise edition with any value, basic, enterprise with cloud services edition.
	ServicePoolGroupRef *string `json:"servicePoolGroupRef,omitempty" tf:"service_pool_group_ref,omitempty"`

	// The pool is an object that contains destination servers and related attributes such as load-balancing and persistence. It is a reference to an object of type pool. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ServicePoolRef *string `json:"servicePoolRef,omitempty" tf:"service_pool_ref,omitempty"`

	ServicePort *string `json:"servicePort,omitempty" tf:"service_port,omitempty"`

	ServicePortRangeEnd *string `json:"servicePortRangeEnd,omitempty" tf:"service_port_range_end,omitempty"`

	ServiceProtocol *string `json:"serviceProtocol,omitempty" tf:"service_protocol,omitempty"`
}

type ServicePoolSelectObservation struct {

	// The pool group is an object that contains pools. It is a reference to an object of type poolgroup. Allowed in enterprise edition with any value, basic, enterprise with cloud services edition.
	ServicePoolGroupRef *string `json:"servicePoolGroupRef,omitempty" tf:"service_pool_group_ref,omitempty"`

	// The pool is an object that contains destination servers and related attributes such as load-balancing and persistence. It is a reference to an object of type pool. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ServicePoolRef *string `json:"servicePoolRef,omitempty" tf:"service_pool_ref,omitempty"`

	ServicePort *string `json:"servicePort,omitempty" tf:"service_port,omitempty"`

	ServicePortRangeEnd *string `json:"servicePortRangeEnd,omitempty" tf:"service_port_range_end,omitempty"`

	ServiceProtocol *string `json:"serviceProtocol,omitempty" tf:"service_protocol,omitempty"`
}

type ServicePoolSelectParameters struct {

	// The pool group is an object that contains pools. It is a reference to an object of type poolgroup. Allowed in enterprise edition with any value, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ServicePoolGroupRef *string `json:"servicePoolGroupRef,omitempty" tf:"service_pool_group_ref,omitempty"`

	// The pool is an object that contains destination servers and related attributes such as load-balancing and persistence. It is a reference to an object of type pool. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ServicePoolRef *string `json:"servicePoolRef,omitempty" tf:"service_pool_ref,omitempty"`

	// +kubebuilder:validation:Optional
	ServicePort *string `json:"servicePort" tf:"service_port,omitempty"`

	// +kubebuilder:validation:Optional
	ServicePortRangeEnd *string `json:"servicePortRangeEnd,omitempty" tf:"service_port_range_end,omitempty"`

	// +kubebuilder:validation:Optional
	ServiceProtocol *string `json:"serviceProtocol,omitempty" tf:"service_protocol,omitempty"`
}

type ServicesInitParameters struct {
	EnableHttp2 *string `json:"enableHttp2,omitempty" tf:"enable_http2,omitempty"`

	EnableSSL *string `json:"enableSsl,omitempty" tf:"enable_ssl,omitempty"`

	HorizonInternalPorts *string `json:"horizonInternalPorts,omitempty" tf:"horizon_internal_ports,omitempty"`

	IsActiveFtpDataPort *string `json:"isActiveFtpDataPort,omitempty" tf:"is_active_ftp_data_port,omitempty"`

	// Enable application layer specific features for the virtual service. It is a reference to an object of type applicationprofile. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition. Special default for essentials edition is system-l4-application.
	OverrideApplicationProfileRef *string `json:"overrideApplicationProfileRef,omitempty" tf:"override_application_profile_ref,omitempty"`

	// Determines network settings such as protocol, tcp or udp, and related options for the protocol. It is a reference to an object of type networkprofile. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition. Special default for essentials edition is system-tcp-fast-path.
	OverrideNetworkProfileRef *string `json:"overrideNetworkProfileRef,omitempty" tf:"override_network_profile_ref,omitempty"`

	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	PortRangeEnd *string `json:"portRangeEnd,omitempty" tf:"port_range_end,omitempty"`
}

type ServicesObservation struct {
	EnableHttp2 *string `json:"enableHttp2,omitempty" tf:"enable_http2,omitempty"`

	EnableSSL *string `json:"enableSsl,omitempty" tf:"enable_ssl,omitempty"`

	HorizonInternalPorts *string `json:"horizonInternalPorts,omitempty" tf:"horizon_internal_ports,omitempty"`

	IsActiveFtpDataPort *string `json:"isActiveFtpDataPort,omitempty" tf:"is_active_ftp_data_port,omitempty"`

	// Enable application layer specific features for the virtual service. It is a reference to an object of type applicationprofile. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition. Special default for essentials edition is system-l4-application.
	OverrideApplicationProfileRef *string `json:"overrideApplicationProfileRef,omitempty" tf:"override_application_profile_ref,omitempty"`

	// Determines network settings such as protocol, tcp or udp, and related options for the protocol. It is a reference to an object of type networkprofile. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition. Special default for essentials edition is system-tcp-fast-path.
	OverrideNetworkProfileRef *string `json:"overrideNetworkProfileRef,omitempty" tf:"override_network_profile_ref,omitempty"`

	Port *string `json:"port,omitempty" tf:"port,omitempty"`

	PortRangeEnd *string `json:"portRangeEnd,omitempty" tf:"port_range_end,omitempty"`
}

type ServicesParameters struct {

	// +kubebuilder:validation:Optional
	EnableHttp2 *string `json:"enableHttp2,omitempty" tf:"enable_http2,omitempty"`

	// +kubebuilder:validation:Optional
	EnableSSL *string `json:"enableSsl,omitempty" tf:"enable_ssl,omitempty"`

	// +kubebuilder:validation:Optional
	HorizonInternalPorts *string `json:"horizonInternalPorts,omitempty" tf:"horizon_internal_ports,omitempty"`

	// +kubebuilder:validation:Optional
	IsActiveFtpDataPort *string `json:"isActiveFtpDataPort,omitempty" tf:"is_active_ftp_data_port,omitempty"`

	// Enable application layer specific features for the virtual service. It is a reference to an object of type applicationprofile. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition. Special default for essentials edition is system-l4-application.
	// +kubebuilder:validation:Optional
	OverrideApplicationProfileRef *string `json:"overrideApplicationProfileRef,omitempty" tf:"override_application_profile_ref,omitempty"`

	// Determines network settings such as protocol, tcp or udp, and related options for the protocol. It is a reference to an object of type networkprofile. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition. Special default for essentials edition is system-tcp-fast-path.
	// +kubebuilder:validation:Optional
	OverrideNetworkProfileRef *string `json:"overrideNetworkProfileRef,omitempty" tf:"override_network_profile_ref,omitempty"`

	// +kubebuilder:validation:Optional
	Port *string `json:"port" tf:"port,omitempty"`

	// +kubebuilder:validation:Optional
	PortRangeEnd *string `json:"portRangeEnd,omitempty" tf:"port_range_end,omitempty"`
}

type SidebandProfileIPInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type SidebandProfileIPObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type SidebandProfileIPParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type SidebandProfileInitParameters struct {
	IP []SidebandProfileIPInitParameters `json:"ip,omitempty" tf:"ip,omitempty"`

	SidebandMaxRequestBodySize *string `json:"sidebandMaxRequestBodySize,omitempty" tf:"sideband_max_request_body_size,omitempty"`
}

type SidebandProfileObservation struct {
	IP []SidebandProfileIPObservation `json:"ip,omitempty" tf:"ip,omitempty"`

	SidebandMaxRequestBodySize *string `json:"sidebandMaxRequestBodySize,omitempty" tf:"sideband_max_request_body_size,omitempty"`
}

type SidebandProfileParameters struct {

	// +kubebuilder:validation:Optional
	IP []SidebandProfileIPParameters `json:"ip,omitempty" tf:"ip,omitempty"`

	// +kubebuilder:validation:Optional
	SidebandMaxRequestBodySize *string `json:"sidebandMaxRequestBodySize,omitempty" tf:"sideband_max_request_body_size,omitempty"`
}

type SkipUrisInitParameters struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type SkipUrisObservation struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type SkipUrisParameters struct {

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	// +kubebuilder:validation:Optional
	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type SnatIPInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type SnatIPObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type SnatIPParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type SnatIp6AddressesInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type SnatIp6AddressesObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type SnatIp6AddressesParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type SourceIPAddrsInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type SourceIPAddrsObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type SourceIPAddrsParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type SourceIPInitParameters struct {
	Addrs []SourceIPAddrsInitParameters `json:"addrs,omitempty" tf:"addrs,omitempty"`

	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Prefixes []SourceIPPrefixesInitParameters `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	Ranges []SourceIPRangesInitParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type SourceIPObservation struct {
	Addrs []SourceIPAddrsObservation `json:"addrs,omitempty" tf:"addrs,omitempty"`

	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Prefixes []SourceIPPrefixesObservation `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	Ranges []SourceIPRangesObservation `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type SourceIPParameters struct {

	// +kubebuilder:validation:Optional
	Addrs []SourceIPAddrsParameters `json:"addrs,omitempty" tf:"addrs,omitempty"`

	// +kubebuilder:validation:Optional
	GroupRefs []*string `json:"groupRefs,omitempty" tf:"group_refs,omitempty"`

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Prefixes []SourceIPPrefixesParameters `json:"prefixes,omitempty" tf:"prefixes,omitempty"`

	// +kubebuilder:validation:Optional
	Ranges []SourceIPRangesParameters `json:"ranges,omitempty" tf:"ranges,omitempty"`
}

type SourceIPPrefixesIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type SourceIPPrefixesIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type SourceIPPrefixesIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type SourceIPPrefixesInitParameters struct {
	IPAddr []SourceIPPrefixesIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type SourceIPPrefixesObservation struct {
	IPAddr []SourceIPPrefixesIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type SourceIPPrefixesParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []SourceIPPrefixesIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type SourceIPRangesBeginInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type SourceIPRangesBeginObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type SourceIPRangesBeginParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type SourceIPRangesEndInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type SourceIPRangesEndObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type SourceIPRangesEndParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type SourceIPRangesInitParameters struct {
	Begin []SourceIPRangesBeginInitParameters `json:"begin,omitempty" tf:"begin,omitempty"`

	End []SourceIPRangesEndInitParameters `json:"end,omitempty" tf:"end,omitempty"`
}

type SourceIPRangesObservation struct {
	Begin []SourceIPRangesBeginObservation `json:"begin,omitempty" tf:"begin,omitempty"`

	End []SourceIPRangesEndObservation `json:"end,omitempty" tf:"end,omitempty"`
}

type SourceIPRangesParameters struct {

	// +kubebuilder:validation:Optional
	Begin []SourceIPRangesBeginParameters `json:"begin" tf:"begin,omitempty"`

	// +kubebuilder:validation:Optional
	End []SourceIPRangesEndParameters `json:"end" tf:"end,omitempty"`
}

type StaticDNSRecordsCnameInitParameters struct {

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Cname *string `json:"cname,omitempty" tf:"cname,omitempty"`
}

type StaticDNSRecordsCnameObservation struct {

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Cname *string `json:"cname,omitempty" tf:"cname,omitempty"`
}

type StaticDNSRecordsCnameParameters struct {

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Cname *string `json:"cname" tf:"cname,omitempty"`
}

type StaticDNSRecordsInitParameters struct {
	Algorithm *string `json:"algorithm,omitempty" tf:"algorithm,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Cname []StaticDNSRecordsCnameInitParameters `json:"cname,omitempty" tf:"cname,omitempty"`

	Delegated *string `json:"delegated,omitempty" tf:"delegated,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Dns resolvable, fully qualified domain name of the virtualservice. Only one of 'fqdn' and 'dns_info' configuration is allowed. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	Fqdn []*string `json:"fqdn,omitempty" tf:"fqdn,omitempty"`

	IPAddress []IPAddressInitParameters `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	Ip6Address []Ip6AddressInitParameters `json:"ip6Address,omitempty" tf:"ip6_address,omitempty"`

	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`

	MxRecords []MxRecordsInitParameters `json:"mxRecords,omitempty" tf:"mx_records,omitempty"`

	Ns []NsInitParameters `json:"ns,omitempty" tf:"ns,omitempty"`

	NumRecordsInResponse *string `json:"numRecordsInResponse,omitempty" tf:"num_records_in_response,omitempty"`

	ServiceLocator []ServiceLocatorInitParameters `json:"serviceLocator,omitempty" tf:"service_locator,omitempty"`

	TTL *string `json:"ttl,omitempty" tf:"ttl,omitempty"`

	TxtRecords []TxtRecordsInitParameters `json:"txtRecords,omitempty" tf:"txt_records,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	WildcardMatch *string `json:"wildcardMatch,omitempty" tf:"wildcard_match,omitempty"`
}

type StaticDNSRecordsObservation struct {
	Algorithm *string `json:"algorithm,omitempty" tf:"algorithm,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Cname []StaticDNSRecordsCnameObservation `json:"cname,omitempty" tf:"cname,omitempty"`

	Delegated *string `json:"delegated,omitempty" tf:"delegated,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Dns resolvable, fully qualified domain name of the virtualservice. Only one of 'fqdn' and 'dns_info' configuration is allowed. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	Fqdn []*string `json:"fqdn,omitempty" tf:"fqdn,omitempty"`

	IPAddress []IPAddressObservation `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	Ip6Address []Ip6AddressObservation `json:"ip6Address,omitempty" tf:"ip6_address,omitempty"`

	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`

	MxRecords []MxRecordsObservation `json:"mxRecords,omitempty" tf:"mx_records,omitempty"`

	Ns []NsObservation `json:"ns,omitempty" tf:"ns,omitempty"`

	NumRecordsInResponse *string `json:"numRecordsInResponse,omitempty" tf:"num_records_in_response,omitempty"`

	ServiceLocator []ServiceLocatorObservation `json:"serviceLocator,omitempty" tf:"service_locator,omitempty"`

	TTL *string `json:"ttl,omitempty" tf:"ttl,omitempty"`

	TxtRecords []TxtRecordsObservation `json:"txtRecords,omitempty" tf:"txt_records,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	WildcardMatch *string `json:"wildcardMatch,omitempty" tf:"wildcard_match,omitempty"`
}

type StaticDNSRecordsParameters struct {

	// +kubebuilder:validation:Optional
	Algorithm *string `json:"algorithm,omitempty" tf:"algorithm,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Cname []StaticDNSRecordsCnameParameters `json:"cname,omitempty" tf:"cname,omitempty"`

	// +kubebuilder:validation:Optional
	Delegated *string `json:"delegated,omitempty" tf:"delegated,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Dns resolvable, fully qualified domain name of the virtualservice. Only one of 'fqdn' and 'dns_info' configuration is allowed. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Fqdn []*string `json:"fqdn" tf:"fqdn,omitempty"`

	// +kubebuilder:validation:Optional
	IPAddress []IPAddressParameters `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// +kubebuilder:validation:Optional
	Ip6Address []Ip6AddressParameters `json:"ip6Address,omitempty" tf:"ip6_address,omitempty"`

	// +kubebuilder:validation:Optional
	Metadata *string `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// +kubebuilder:validation:Optional
	MxRecords []MxRecordsParameters `json:"mxRecords,omitempty" tf:"mx_records,omitempty"`

	// +kubebuilder:validation:Optional
	Ns []NsParameters `json:"ns,omitempty" tf:"ns,omitempty"`

	// +kubebuilder:validation:Optional
	NumRecordsInResponse *string `json:"numRecordsInResponse,omitempty" tf:"num_records_in_response,omitempty"`

	// +kubebuilder:validation:Optional
	ServiceLocator []ServiceLocatorParameters `json:"serviceLocator,omitempty" tf:"service_locator,omitempty"`

	// +kubebuilder:validation:Optional
	TTL *string `json:"ttl,omitempty" tf:"ttl,omitempty"`

	// +kubebuilder:validation:Optional
	TxtRecords []TxtRecordsParameters `json:"txtRecords,omitempty" tf:"txt_records,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// +kubebuilder:validation:Optional
	WildcardMatch *string `json:"wildcardMatch,omitempty" tf:"wildcard_match,omitempty"`
}

type TLSFingerprintMatchInitParameters struct {
	Fingerprints []*string `json:"fingerprints,omitempty" tf:"fingerprints,omitempty"`

	MatchOperation *string `json:"matchOperation,omitempty" tf:"match_operation,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type TLSFingerprintMatchObservation struct {
	Fingerprints []*string `json:"fingerprints,omitempty" tf:"fingerprints,omitempty"`

	MatchOperation *string `json:"matchOperation,omitempty" tf:"match_operation,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type TLSFingerprintMatchParameters struct {

	// +kubebuilder:validation:Optional
	Fingerprints []*string `json:"fingerprints,omitempty" tf:"fingerprints,omitempty"`

	// +kubebuilder:validation:Optional
	MatchOperation *string `json:"matchOperation" tf:"match_operation,omitempty"`

	// +kubebuilder:validation:Optional
	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type TopologyPoliciesInitParameters struct {
	DNSPolicyRef *string `json:"dnsPolicyRef,omitempty" tf:"dns_policy_ref,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`
}

type TopologyPoliciesObservation struct {
	DNSPolicyRef *string `json:"dnsPolicyRef,omitempty" tf:"dns_policy_ref,omitempty"`

	Index *string `json:"index,omitempty" tf:"index,omitempty"`
}

type TopologyPoliciesParameters struct {

	// +kubebuilder:validation:Optional
	DNSPolicyRef *string `json:"dnsPolicyRef" tf:"dns_policy_ref,omitempty"`

	// +kubebuilder:validation:Optional
	Index *string `json:"index" tf:"index,omitempty"`
}

type TxtRecordsInitParameters struct {
	TextStr *string `json:"textStr,omitempty" tf:"text_str,omitempty"`
}

type TxtRecordsObservation struct {
	TextStr *string `json:"textStr,omitempty" tf:"text_str,omitempty"`
}

type TxtRecordsParameters struct {

	// +kubebuilder:validation:Optional
	TextStr *string `json:"textStr" tf:"text_str,omitempty"`
}

type URIInitParameters struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type URIObservation struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type URIParameters struct {

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	MatchStr []*string `json:"matchStr,omitempty" tf:"match_str,omitempty"`

	// +kubebuilder:validation:Optional
	StringGroupRefs []*string `json:"stringGroupRefs,omitempty" tf:"string_group_refs,omitempty"`
}

type VersionInitParameters struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Versions []*string `json:"versions,omitempty" tf:"versions,omitempty"`
}

type VersionObservation struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Versions []*string `json:"versions,omitempty" tf:"versions,omitempty"`
}

type VersionParameters struct {

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Versions []*string `json:"versions" tf:"versions,omitempty"`
}

type VhMatchesInitParameters struct {
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	Rules []VhMatchesRulesInitParameters `json:"rules,omitempty" tf:"rules,omitempty"`
}

type VhMatchesObservation struct {
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	Rules []VhMatchesRulesObservation `json:"rules,omitempty" tf:"rules,omitempty"`
}

type VhMatchesParameters struct {

	// +kubebuilder:validation:Optional
	Host *string `json:"host" tf:"host,omitempty"`

	// +kubebuilder:validation:Optional
	Rules []VhMatchesRulesParameters `json:"rules" tf:"rules,omitempty"`
}

type VhMatchesRulesInitParameters struct {
	Matches []MatchesInitParameters `json:"matches,omitempty" tf:"matches,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type VhMatchesRulesObservation struct {
	Matches []MatchesObservation `json:"matches,omitempty" tf:"matches,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type VhMatchesRulesParameters struct {

	// +kubebuilder:validation:Optional
	Matches []MatchesParameters `json:"matches" tf:"matches,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

type VipDiscoveredNetworksInitParameters struct {
	NetworkRef *string `json:"networkRef,omitempty" tf:"network_ref,omitempty"`

	Subnet []VipDiscoveredNetworksSubnetInitParameters `json:"subnet,omitempty" tf:"subnet,omitempty"`

	Subnet6 []DiscoveredNetworksSubnet6InitParameters `json:"subnet6,omitempty" tf:"subnet6,omitempty"`
}

type VipDiscoveredNetworksObservation struct {
	NetworkRef *string `json:"networkRef,omitempty" tf:"network_ref,omitempty"`

	Subnet []VipDiscoveredNetworksSubnetObservation `json:"subnet,omitempty" tf:"subnet,omitempty"`

	Subnet6 []DiscoveredNetworksSubnet6Observation `json:"subnet6,omitempty" tf:"subnet6,omitempty"`
}

type VipDiscoveredNetworksParameters struct {

	// +kubebuilder:validation:Optional
	NetworkRef *string `json:"networkRef" tf:"network_ref,omitempty"`

	// +kubebuilder:validation:Optional
	Subnet []VipDiscoveredNetworksSubnetParameters `json:"subnet,omitempty" tf:"subnet,omitempty"`

	// +kubebuilder:validation:Optional
	Subnet6 []DiscoveredNetworksSubnet6Parameters `json:"subnet6,omitempty" tf:"subnet6,omitempty"`
}

type VipDiscoveredNetworksSubnetIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type VipDiscoveredNetworksSubnetIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type VipDiscoveredNetworksSubnetIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type VipDiscoveredNetworksSubnetInitParameters struct {
	IPAddr []VipDiscoveredNetworksSubnetIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type VipDiscoveredNetworksSubnetObservation struct {
	IPAddr []VipDiscoveredNetworksSubnetIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type VipDiscoveredNetworksSubnetParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []VipDiscoveredNetworksSubnetIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type VipIPAddressInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type VipIPAddressObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type VipIPAddressParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type VipInitParameters struct {
	AutoAllocateFloatingIP *string `json:"autoAllocateFloatingIp,omitempty" tf:"auto_allocate_floating_ip,omitempty"`

	AutoAllocateIP *string `json:"autoAllocateIp,omitempty" tf:"auto_allocate_ip,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	AutoAllocateIPType *string `json:"autoAllocateIpType,omitempty" tf:"auto_allocate_ip_type,omitempty"`

	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	AviAllocatedFip *string `json:"aviAllocatedFip,omitempty" tf:"avi_allocated_fip,omitempty"`

	// List of virtual service ips. While creating a 'shared vs',please use vsvip_ref to point to the shared entities. Field introduced in 17.1.1. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	AviAllocatedVip *string `json:"aviAllocatedVip,omitempty" tf:"avi_allocated_vip,omitempty"`

	DiscoveredNetworks []VipDiscoveredNetworksInitParameters `json:"discoveredNetworks,omitempty" tf:"discovered_networks,omitempty"`

	// Enable or disable the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	FloatingIP []FloatingIPInitParameters `json:"floatingIp,omitempty" tf:"floating_ip,omitempty"`

	FloatingIp6 []FloatingIp6InitParameters `json:"floatingIp6,omitempty" tf:"floating_ip6,omitempty"`

	// Uuid of the virtualservice. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	FloatingSubnet6UUID *string `json:"floatingSubnet6Uuid,omitempty" tf:"floating_subnet6_uuid,omitempty"`

	// Uuid of the virtualservice. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	FloatingSubnetUUID *string `json:"floatingSubnetUuid,omitempty" tf:"floating_subnet_uuid,omitempty"`

	IPAddress []VipIPAddressInitParameters `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	Ip6Address []VipIp6AddressInitParameters `json:"ip6Address,omitempty" tf:"ip6_address,omitempty"`

	IpamNetworkSubnet []IpamNetworkSubnetInitParameters `json:"ipamNetworkSubnet,omitempty" tf:"ipam_network_subnet,omitempty"`

	NetworkRef *string `json:"networkRef,omitempty" tf:"network_ref,omitempty"`

	PlacementNetworks []VipPlacementNetworksInitParameters `json:"placementNetworks,omitempty" tf:"placement_networks,omitempty"`

	// Uuid of the virtualservice. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	PortUUID *string `json:"portUuid,omitempty" tf:"port_uuid,omitempty"`

	PrefixLength *string `json:"prefixLength,omitempty" tf:"prefix_length,omitempty"`

	Subnet []VipSubnetInitParameters `json:"subnet,omitempty" tf:"subnet,omitempty"`

	Subnet6 []VipSubnet6InitParameters `json:"subnet6,omitempty" tf:"subnet6,omitempty"`

	// Uuid of the virtualservice. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Subnet6UUID *string `json:"subnet6Uuid,omitempty" tf:"subnet6_uuid,omitempty"`

	// Uuid of the virtualservice. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	SubnetUUID *string `json:"subnetUuid,omitempty" tf:"subnet_uuid,omitempty"`

	VipID *string `json:"vipId,omitempty" tf:"vip_id,omitempty"`
}

type VipIp6AddressInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type VipIp6AddressObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type VipIp6AddressParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type VipObservation struct {
	AutoAllocateFloatingIP *string `json:"autoAllocateFloatingIp,omitempty" tf:"auto_allocate_floating_ip,omitempty"`

	AutoAllocateIP *string `json:"autoAllocateIp,omitempty" tf:"auto_allocate_ip,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	AutoAllocateIPType *string `json:"autoAllocateIpType,omitempty" tf:"auto_allocate_ip_type,omitempty"`

	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	AviAllocatedFip *string `json:"aviAllocatedFip,omitempty" tf:"avi_allocated_fip,omitempty"`

	// List of virtual service ips. While creating a 'shared vs',please use vsvip_ref to point to the shared entities. Field introduced in 17.1.1. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	AviAllocatedVip *string `json:"aviAllocatedVip,omitempty" tf:"avi_allocated_vip,omitempty"`

	DiscoveredNetworks []VipDiscoveredNetworksObservation `json:"discoveredNetworks,omitempty" tf:"discovered_networks,omitempty"`

	// Enable or disable the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	FloatingIP []FloatingIPObservation `json:"floatingIp,omitempty" tf:"floating_ip,omitempty"`

	FloatingIp6 []FloatingIp6Observation `json:"floatingIp6,omitempty" tf:"floating_ip6,omitempty"`

	// Uuid of the virtualservice. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	FloatingSubnet6UUID *string `json:"floatingSubnet6Uuid,omitempty" tf:"floating_subnet6_uuid,omitempty"`

	// Uuid of the virtualservice. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	FloatingSubnetUUID *string `json:"floatingSubnetUuid,omitempty" tf:"floating_subnet_uuid,omitempty"`

	IPAddress []VipIPAddressObservation `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	Ip6Address []VipIp6AddressObservation `json:"ip6Address,omitempty" tf:"ip6_address,omitempty"`

	IpamNetworkSubnet []IpamNetworkSubnetObservation `json:"ipamNetworkSubnet,omitempty" tf:"ipam_network_subnet,omitempty"`

	NetworkRef *string `json:"networkRef,omitempty" tf:"network_ref,omitempty"`

	PlacementNetworks []VipPlacementNetworksObservation `json:"placementNetworks,omitempty" tf:"placement_networks,omitempty"`

	// Uuid of the virtualservice. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	PortUUID *string `json:"portUuid,omitempty" tf:"port_uuid,omitempty"`

	PrefixLength *string `json:"prefixLength,omitempty" tf:"prefix_length,omitempty"`

	Subnet []VipSubnetObservation `json:"subnet,omitempty" tf:"subnet,omitempty"`

	Subnet6 []VipSubnet6Observation `json:"subnet6,omitempty" tf:"subnet6,omitempty"`

	// Uuid of the virtualservice. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Subnet6UUID *string `json:"subnet6Uuid,omitempty" tf:"subnet6_uuid,omitempty"`

	// Uuid of the virtualservice. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	SubnetUUID *string `json:"subnetUuid,omitempty" tf:"subnet_uuid,omitempty"`

	VipID *string `json:"vipId,omitempty" tf:"vip_id,omitempty"`
}

type VipParameters struct {

	// +kubebuilder:validation:Optional
	AutoAllocateFloatingIP *string `json:"autoAllocateFloatingIp,omitempty" tf:"auto_allocate_floating_ip,omitempty"`

	// +kubebuilder:validation:Optional
	AutoAllocateIP *string `json:"autoAllocateIp,omitempty" tf:"auto_allocate_ip,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	AutoAllocateIPType *string `json:"autoAllocateIpType,omitempty" tf:"auto_allocate_ip_type,omitempty"`

	// +kubebuilder:validation:Optional
	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	// +kubebuilder:validation:Optional
	AviAllocatedFip *string `json:"aviAllocatedFip,omitempty" tf:"avi_allocated_fip,omitempty"`

	// List of virtual service ips. While creating a 'shared vs',please use vsvip_ref to point to the shared entities. Field introduced in 17.1.1. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	AviAllocatedVip *string `json:"aviAllocatedVip,omitempty" tf:"avi_allocated_vip,omitempty"`

	// +kubebuilder:validation:Optional
	DiscoveredNetworks []VipDiscoveredNetworksParameters `json:"discoveredNetworks,omitempty" tf:"discovered_networks,omitempty"`

	// Enable or disable the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// +kubebuilder:validation:Optional
	FloatingIP []FloatingIPParameters `json:"floatingIp,omitempty" tf:"floating_ip,omitempty"`

	// +kubebuilder:validation:Optional
	FloatingIp6 []FloatingIp6Parameters `json:"floatingIp6,omitempty" tf:"floating_ip6,omitempty"`

	// Uuid of the virtualservice. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	FloatingSubnet6UUID *string `json:"floatingSubnet6Uuid,omitempty" tf:"floating_subnet6_uuid,omitempty"`

	// Uuid of the virtualservice. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	FloatingSubnetUUID *string `json:"floatingSubnetUuid,omitempty" tf:"floating_subnet_uuid,omitempty"`

	// +kubebuilder:validation:Optional
	IPAddress []VipIPAddressParameters `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// +kubebuilder:validation:Optional
	Ip6Address []VipIp6AddressParameters `json:"ip6Address,omitempty" tf:"ip6_address,omitempty"`

	// +kubebuilder:validation:Optional
	IpamNetworkSubnet []IpamNetworkSubnetParameters `json:"ipamNetworkSubnet,omitempty" tf:"ipam_network_subnet,omitempty"`

	// +kubebuilder:validation:Optional
	NetworkRef *string `json:"networkRef,omitempty" tf:"network_ref,omitempty"`

	// +kubebuilder:validation:Optional
	PlacementNetworks []VipPlacementNetworksParameters `json:"placementNetworks,omitempty" tf:"placement_networks,omitempty"`

	// Uuid of the virtualservice. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	PortUUID *string `json:"portUuid,omitempty" tf:"port_uuid,omitempty"`

	// +kubebuilder:validation:Optional
	PrefixLength *string `json:"prefixLength,omitempty" tf:"prefix_length,omitempty"`

	// +kubebuilder:validation:Optional
	Subnet []VipSubnetParameters `json:"subnet,omitempty" tf:"subnet,omitempty"`

	// +kubebuilder:validation:Optional
	Subnet6 []VipSubnet6Parameters `json:"subnet6,omitempty" tf:"subnet6,omitempty"`

	// Uuid of the virtualservice. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Subnet6UUID *string `json:"subnet6Uuid,omitempty" tf:"subnet6_uuid,omitempty"`

	// Uuid of the virtualservice. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	SubnetUUID *string `json:"subnetUuid,omitempty" tf:"subnet_uuid,omitempty"`

	// +kubebuilder:validation:Optional
	VipID *string `json:"vipId" tf:"vip_id,omitempty"`
}

type VipPlacementNetworksInitParameters struct {
	NetworkRef *string `json:"networkRef,omitempty" tf:"network_ref,omitempty"`

	Subnet []PlacementNetworksSubnetInitParameters `json:"subnet,omitempty" tf:"subnet,omitempty"`

	Subnet6 []PlacementNetworksSubnet6InitParameters `json:"subnet6,omitempty" tf:"subnet6,omitempty"`
}

type VipPlacementNetworksObservation struct {
	NetworkRef *string `json:"networkRef,omitempty" tf:"network_ref,omitempty"`

	Subnet []PlacementNetworksSubnetObservation `json:"subnet,omitempty" tf:"subnet,omitempty"`

	Subnet6 []PlacementNetworksSubnet6Observation `json:"subnet6,omitempty" tf:"subnet6,omitempty"`
}

type VipPlacementNetworksParameters struct {

	// +kubebuilder:validation:Optional
	NetworkRef *string `json:"networkRef,omitempty" tf:"network_ref,omitempty"`

	// +kubebuilder:validation:Optional
	Subnet []PlacementNetworksSubnetParameters `json:"subnet,omitempty" tf:"subnet,omitempty"`

	// +kubebuilder:validation:Optional
	Subnet6 []PlacementNetworksSubnet6Parameters `json:"subnet6,omitempty" tf:"subnet6,omitempty"`
}

type VipSubnet6IPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type VipSubnet6IPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type VipSubnet6IPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type VipSubnet6InitParameters struct {
	IPAddr []VipSubnet6IPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type VipSubnet6Observation struct {
	IPAddr []VipSubnet6IPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type VipSubnet6Parameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []VipSubnet6IPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type VipSubnetIPAddrInitParameters struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type VipSubnetIPAddrObservation struct {
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type VipSubnetIPAddrParameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr" tf:"addr,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type VipSubnetInitParameters struct {
	IPAddr []VipSubnetIPAddrInitParameters `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type VipSubnetObservation struct {
	IPAddr []VipSubnetIPAddrObservation `json:"ipAddr,omitempty" tf:"ip_addr,omitempty"`

	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`
}

type VipSubnetParameters struct {

	// +kubebuilder:validation:Optional
	IPAddr []VipSubnetIPAddrParameters `json:"ipAddr" tf:"ip_addr,omitempty"`

	// +kubebuilder:validation:Optional
	Mask *string `json:"mask" tf:"mask,omitempty"`
}

type VirtualServiceAnalyticsPolicyInitParameters struct {
	AllHeaders *string `json:"allHeaders,omitempty" tf:"all_headers,omitempty"`

	ClientInsights *string `json:"clientInsights,omitempty" tf:"client_insights,omitempty"`

	ClientInsightsSampling []ClientInsightsSamplingInitParameters `json:"clientInsightsSampling,omitempty" tf:"client_insights_sampling,omitempty"`

	ClientLogFilters []ClientLogFiltersInitParameters `json:"clientLogFilters,omitempty" tf:"client_log_filters,omitempty"`

	FullClientLogs []FullClientLogsInitParameters `json:"fullClientLogs,omitempty" tf:"full_client_logs,omitempty"`

	LearningLogPolicy []LearningLogPolicyInitParameters `json:"learningLogPolicy,omitempty" tf:"learning_log_policy,omitempty"`

	MetricsRealtimeUpdate []MetricsRealtimeUpdateInitParameters `json:"metricsRealtimeUpdate,omitempty" tf:"metrics_realtime_update,omitempty"`

	SignificantLogThrottle *string `json:"significantLogThrottle,omitempty" tf:"significant_log_throttle,omitempty"`

	UdfLogThrottle *string `json:"udfLogThrottle,omitempty" tf:"udf_log_throttle,omitempty"`
}

type VirtualServiceAnalyticsPolicyObservation struct {
	AllHeaders *string `json:"allHeaders,omitempty" tf:"all_headers,omitempty"`

	ClientInsights *string `json:"clientInsights,omitempty" tf:"client_insights,omitempty"`

	ClientInsightsSampling []ClientInsightsSamplingObservation `json:"clientInsightsSampling,omitempty" tf:"client_insights_sampling,omitempty"`

	ClientLogFilters []ClientLogFiltersObservation `json:"clientLogFilters,omitempty" tf:"client_log_filters,omitempty"`

	FullClientLogs []FullClientLogsObservation `json:"fullClientLogs,omitempty" tf:"full_client_logs,omitempty"`

	LearningLogPolicy []LearningLogPolicyObservation `json:"learningLogPolicy,omitempty" tf:"learning_log_policy,omitempty"`

	MetricsRealtimeUpdate []MetricsRealtimeUpdateObservation `json:"metricsRealtimeUpdate,omitempty" tf:"metrics_realtime_update,omitempty"`

	SignificantLogThrottle *string `json:"significantLogThrottle,omitempty" tf:"significant_log_throttle,omitempty"`

	UdfLogThrottle *string `json:"udfLogThrottle,omitempty" tf:"udf_log_throttle,omitempty"`
}

type VirtualServiceAnalyticsPolicyParameters struct {

	// +kubebuilder:validation:Optional
	AllHeaders *string `json:"allHeaders,omitempty" tf:"all_headers,omitempty"`

	// +kubebuilder:validation:Optional
	ClientInsights *string `json:"clientInsights,omitempty" tf:"client_insights,omitempty"`

	// +kubebuilder:validation:Optional
	ClientInsightsSampling []ClientInsightsSamplingParameters `json:"clientInsightsSampling,omitempty" tf:"client_insights_sampling,omitempty"`

	// +kubebuilder:validation:Optional
	ClientLogFilters []ClientLogFiltersParameters `json:"clientLogFilters,omitempty" tf:"client_log_filters,omitempty"`

	// +kubebuilder:validation:Optional
	FullClientLogs []FullClientLogsParameters `json:"fullClientLogs,omitempty" tf:"full_client_logs,omitempty"`

	// +kubebuilder:validation:Optional
	LearningLogPolicy []LearningLogPolicyParameters `json:"learningLogPolicy,omitempty" tf:"learning_log_policy,omitempty"`

	// +kubebuilder:validation:Optional
	MetricsRealtimeUpdate []MetricsRealtimeUpdateParameters `json:"metricsRealtimeUpdate,omitempty" tf:"metrics_realtime_update,omitempty"`

	// +kubebuilder:validation:Optional
	SignificantLogThrottle *string `json:"significantLogThrottle,omitempty" tf:"significant_log_throttle,omitempty"`

	// +kubebuilder:validation:Optional
	UdfLogThrottle *string `json:"udfLogThrottle,omitempty" tf:"udf_log_throttle,omitempty"`
}

type VirtualServiceConfigpbAttributesInitParameters struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type VirtualServiceConfigpbAttributesObservation struct {
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type VirtualServiceConfigpbAttributesParameters struct {

	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type VirtualServiceInitParameters struct {

	// This configuration only applies if the virtualservice is in legacy active standby ha mode and load distribution among active standby is enabled. This field is used to tag the virtualservice so that virtualservices with the same tag will share the same active serviceengine. Virtualservices with different tags will have different active serviceengines. If one of the serviceengine's in the serviceenginegroup fails, all virtualservices will end up using the same active serviceengine. Redistribution of the virtualservices can be either manual or automated when the failed serviceengine recovers. Redistribution is based on the auto redistribute property of the serviceenginegroup. Enum options - ACTIVE_STANDBY_SE_1, ACTIVE_STANDBY_SE_2. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ActiveStandbySeTag *string `json:"activeStandbySeTag,omitempty" tf:"active_standby_se_tag,omitempty"`

	// Keep advertising virtual service via bgp even if it is marked down by health monitor. This setting takes effect for future virtual service flaps. To advertise current vses that are down, please disable and re-enable the virtual service. Field introduced in 20.1.1. Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic edition(allowed values- false), enterprise with cloud services edition.
	AdvertiseDownVs *string `json:"advertiseDownVs,omitempty" tf:"advertise_down_vs,omitempty"`

	// Process request even if invalid client certificate is presented. Datascript apis need to be used for processing of such requests. Field introduced in 18.2.3. Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic edition(allowed values- false), enterprise with cloud services edition.
	AllowInvalidClientCert *string `json:"allowInvalidClientCert,omitempty" tf:"allow_invalid_client_cert,omitempty"`

	// Determines analytics settings for the application. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	AnalyticsPolicy []VirtualServiceAnalyticsPolicyInitParameters `json:"analyticsPolicy,omitempty" tf:"analytics_policy,omitempty"`

	// Specifies settings related to analytics. It is a reference to an object of type analyticsprofile. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	AnalyticsProfileRef *string `json:"analyticsProfileRef,omitempty" tf:"analytics_profile_ref,omitempty"`

	// Enable application layer specific features for the virtual service. It is a reference to an object of type applicationprofile. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition. Special default for essentials edition is system-l4-application.
	ApplicationProfileRef *string `json:"applicationProfileRef,omitempty" tf:"application_profile_ref,omitempty"`

	// (internal-use)applicable for azure only. Azure availability set to which this vs is associated. Internally set by the cloud connector. Field introduced in 17.2.12, 18.1.2. Allowed in enterprise edition with any value, essentials edition with any value, basic edition with any value, enterprise with cloud services edition.
	AzureAvailabilitySet *string `json:"azureAvailabilitySet,omitempty" tf:"azure_availability_set,omitempty"`

	// Local_pref to be used for vsvip advertised. Applicable only over ibgp. Field introduced in 30.2.1. Allowed in enterprise edition with any value, essentials edition with any value, basic edition with any value, enterprise with cloud services edition.
	BGPLocalPreference *string `json:"bgpLocalPreference,omitempty" tf:"bgp_local_preference,omitempty"`

	// Number of times the local as should be prepended additionally to vsvip. Applicable only over ebgp. Allowed values are 1-10. Field introduced in 30.2.1. Allowed in enterprise edition with any value, essentials edition with any value, basic edition with any value, enterprise with cloud services edition.
	BGPNumAsPathPrepend *string `json:"bgpNumAsPathPrepend,omitempty" tf:"bgp_num_as_path_prepend,omitempty"`

	// Select bgp peers, using peer label, for vsvip advertisement. Field introduced in 20.1.5. Maximum of 128 items allowed. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	BGPPeerLabels []*string `json:"bgpPeerLabels,omitempty" tf:"bgp_peer_labels,omitempty"`

	// Bot detection policy for the virtual service. It is a reference to an object of type botdetectionpolicy. Field introduced in 21.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	BotPolicyRef *string `json:"botPolicyRef,omitempty" tf:"bot_policy_ref,omitempty"`

	// (this is a beta feature). Sync key-value cache to the new ses when vs is scaled out. For ex  ssl sessions are stored using vs's key-value cache. When the vs is scaled out, the ssl session information is synced to the new se, allowing existing ssl sessions to be reused on the new se. Field introduced in 17.2.7, 18.1.1. Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic edition(allowed values- false), enterprise with cloud services edition.
	BulkSyncKvcache *string `json:"bulkSyncKvcache,omitempty" tf:"bulk_sync_kvcache,omitempty"`

	// Close client connection on vs config update. Field introduced in 17.2.4. Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic edition(allowed values- false), enterprise with cloud services edition.
	CloseClientConnOnConfigUpdate *string `json:"closeClientConnOnConfigUpdate,omitempty" tf:"close_client_conn_on_config_update,omitempty"`

	// Checksum of cloud configuration for vs. Internally set by cloud connector. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	CloudConfigCksum *string `json:"cloudConfigCksum,omitempty" tf:"cloud_config_cksum,omitempty"`

	// It is a reference to an object of type cloud. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	CloudRef *string `json:"cloudRef,omitempty" tf:"cloud_ref,omitempty"`

	// Enum options - cloud_none, cloud_vcenter, cloud_openstack, cloud_aws, cloud_vca, cloud_apic, cloud_mesos, cloud_linuxserver, cloud_docker_ucp, cloud_rancher, cloud_oshift_k8s, cloud_azure, cloud_gcp, cloud_nsxt. Allowed in enterprise edition with any value, essentials edition(allowed values- cloud_none,cloud_vcenter), basic edition(allowed values- cloud_none,cloud_nsxt), enterprise with cloud services edition.
	CloudType *string `json:"cloudType,omitempty" tf:"cloud_type,omitempty"`

	// Protobuf versioning for config pbs. Field introduced in 21.1.1. Allowed in enterprise edition with any value, essentials edition with any value, basic edition with any value, enterprise with cloud services edition.
	ConfigpbAttributes []VirtualServiceConfigpbAttributesInitParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	// Rate limit the incoming connections to this virtual service. Allowed in enterprise edition with any value, basic, enterprise with cloud services edition.
	ConnectionsRateLimit []ConnectionsRateLimitInitParameters `json:"connectionsRateLimit,omitempty" tf:"connections_rate_limit,omitempty"`

	// Profile used to match and rewrite strings in request and/or response body. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	ContentRewrite []ContentRewriteInitParameters `json:"contentRewrite,omitempty" tf:"content_rewrite,omitempty"`

	// Creator name. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by,omitempty"`

	// Csrf protection policy for the virtual service. It is a reference to an object of type csrfpolicy. Field introduced in 30.2.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	CsrfPolicyRef *string `json:"csrfPolicyRef,omitempty" tf:"csrf_policy_ref,omitempty"`

	// Service discovery specific data including fully qualified domain name, type and time-to-live of the dns record. Note that only one of fqdn and dns_info setting is allowed. Maximum of 1000 items allowed. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	DNSInfo []DNSInfoInitParameters `json:"dnsInfo,omitempty" tf:"dns_info,omitempty"`

	// Dns policies applied on the dns traffic of the virtual service. Field introduced in 17.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	DNSPolicies []DNSPoliciesInitParameters `json:"dnsPolicies,omitempty" tf:"dns_policies,omitempty"`

	// Select the algorithm for qos fairness. This determines how multiple virtual services sharing the same service engines will prioritize traffic over a congested network. Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic edition(allowed values- false), enterprise with cloud services edition.
	DelayFairness *string `json:"delayFairness,omitempty" tf:"delay_fairness,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Force placement on all se's in service group (mesos mode only). Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic edition(allowed values- false), enterprise with cloud services edition.
	EastWestPlacement *string `json:"eastWestPlacement,omitempty" tf:"east_west_placement,omitempty"`

	// Response traffic to clients will be sent back to the source mac address of the connection, rather than statically sent to a default gateway. Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic edition(allowed values- false), enterprise with cloud services edition. Special default for essentials edition is false, basic edition is false, enterprise is true.
	EnableAutogw *string `json:"enableAutogw,omitempty" tf:"enable_autogw,omitempty"`

	// Enable route health injection using the bgp config in the vrf context. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	EnableRhi *string `json:"enableRhi,omitempty" tf:"enable_rhi,omitempty"`

	// Enable route health injection for source nat'ted floating ip address using the bgp config in the vrf context. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	EnableRhiSnat *string `json:"enableRhiSnat,omitempty" tf:"enable_rhi_snat,omitempty"`

	// Enable http sessions for this virtual service. If enabled, a session cookie will be added to http responses and persistent key-value store will be activated. Field introduced in 30.2.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	EnableSession *string `json:"enableSession,omitempty" tf:"enable_session,omitempty"`

	// Enable or disable the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Error page profile to be used for this virtualservice.this profile is used to send the custom error page to the client generated by the proxy. It is a reference to an object of type errorpageprofile. Field introduced in 17.2.4. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ErrorPageProfileRef *string `json:"errorPageProfileRef,omitempty" tf:"error_page_profile_ref,omitempty"`

	// Criteria for flow distribution among ses. Enum options - LOAD_AWARE, CONSISTENT_HASH_SOURCE_IP_ADDRESS, CONSISTENT_HASH_SOURCE_IP_ADDRESS_AND_PORT. Allowed in enterprise edition with any value, essentials edition(allowed values- load_aware), basic edition(allowed values- load_aware), enterprise with cloud services edition.
	FlowDist *string `json:"flowDist,omitempty" tf:"flow_dist,omitempty"`

	// Criteria for flow labelling. Enum options - NO_LABEL, APPLICATION_LABEL, SERVICE_LABEL. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	FlowLabelType *string `json:"flowLabelType,omitempty" tf:"flow_label_type,omitempty"`

	// Dns resolvable, fully qualified domain name of the virtualservice. Only one of 'fqdn' and 'dns_info' configuration is allowed. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	Fqdn *string `json:"fqdn,omitempty" tf:"fqdn,omitempty"`

	// Http policies applied on the data traffic of the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	HTTPPolicies []HTTPPoliciesInitParameters `json:"httpPolicies,omitempty" tf:"http_policies,omitempty"`

	// Translate the host name sent to the servers to this value. Translate the host name sent from servers back to the value used by the client. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	HostNameXlate *string `json:"hostNameXlate,omitempty" tf:"host_name_xlate,omitempty"`

	// The config settings for the icap server when checking the http request. It is a reference to an object of type icapprofile. Field introduced in 20.1.1. Maximum of 1 items allowed. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	IcapRequestProfileRefs []*string `json:"icapRequestProfileRefs,omitempty" tf:"icap_request_profile_refs,omitempty"`

	// Ignore pool servers network reachability constraints for virtual service placement. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	IgnPoolNetReach *string `json:"ignPoolNetReach,omitempty" tf:"ign_pool_net_reach,omitempty"`

	// Application-specific config for jwt validation. Field introduced in 20.1.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	JwtConfig []JwtConfigInitParameters `json:"jwtConfig,omitempty" tf:"jwt_config,omitempty"`

	// L4 policies applied to the data traffic of the virtual service. Field introduced in 17.2.7. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	L4Policies []L4PoliciesInitParameters `json:"l4Policies,omitempty" tf:"l4_policies,omitempty"`

	// Application-specific ldap config. Field introduced in 21.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	LdapVsConfig []LdapVsConfigInitParameters `json:"ldapVsConfig,omitempty" tf:"ldap_vs_config,omitempty"`

	// Limit potential dos attackers who exceed max_cps_per_client significantly to a fraction of max_cps_per_client for a while. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	LimitDoser *string `json:"limitDoser,omitempty" tf:"limit_doser,omitempty"`

	// List of labels to be used for granular rbac. Field introduced in 20.1.5. Allowed in enterprise edition with any value, essentials edition with any value, basic edition with any value, enterprise with cloud services edition.
	Markers []VirtualServiceMarkersInitParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	// Maximum connections per second per client ip. Allowed values are 10-1000. Special values are 0- unlimited. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	MaxCpsPerClient *string `json:"maxCpsPerClient,omitempty" tf:"max_cps_per_client,omitempty"`

	// Microservice representing the virtual service. It is a reference to an object of type microservice. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	MicroserviceRef *string `json:"microserviceRef,omitempty" tf:"microservice_ref,omitempty"`

	// Minimum number of up pools to mark vs up. Field introduced in 18.2.1, 17.2.12. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	MinPoolsUp *string `json:"minPoolsUp,omitempty" tf:"min_pools_up,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Determines network settings such as protocol, tcp or udp, and related options for the protocol. It is a reference to an object of type networkprofile. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition. Special default for essentials edition is system-tcp-fast-path.
	NetworkProfileRef *string `json:"networkProfileRef,omitempty" tf:"network_profile_ref,omitempty"`

	// Network security policies for the virtual service. It is a reference to an object of type networksecuritypolicy. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	NetworkSecurityPolicyRef *string `json:"networkSecurityPolicyRef,omitempty" tf:"network_security_policy_ref,omitempty"`

	// A list of nsx groups representing the clients which can access the virtual ip of the virtual service. Field introduced in 17.1.1. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	NsxSecuritygroup []*string `json:"nsxSecuritygroup,omitempty" tf:"nsx_securitygroup,omitempty"`

	// Virtualservice specific oauth config. Field introduced in 21.1.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	OauthVsConfig []OauthVsConfigInitParameters `json:"oauthVsConfig,omitempty" tf:"oauth_vs_config,omitempty"`

	// Optional settings that determine performance limits like max connections or bandwdith etc. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	PerformanceLimits []PerformanceLimitsInitParameters `json:"performanceLimits,omitempty" tf:"performance_limits,omitempty"`

	// The pool group is an object that contains pools. It is a reference to an object of type poolgroup. Allowed in enterprise edition with any value, basic, enterprise with cloud services edition.
	PoolGroupRef *string `json:"poolGroupRef,omitempty" tf:"pool_group_ref,omitempty"`

	// The pool is an object that contains destination servers and related attributes such as load-balancing and persistence. It is a reference to an object of type pool. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	PoolRef *string `json:"poolRef,omitempty" tf:"pool_ref,omitempty"`

	// Remove listening port if virtualservice is down. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	RemoveListeningPortOnVsDown *string `json:"removeListeningPortOnVsDown,omitempty" tf:"remove_listening_port_on_vs_down,omitempty"`

	// Rate limit the incoming requests to this virtual service. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	RequestsRateLimit []RequestsRateLimitInitParameters `json:"requestsRateLimit,omitempty" tf:"requests_rate_limit,omitempty"`

	// Revoke the advertisement of virtual service via the cloud if it is marked down by health monitor. Supported for nsxt clouds only.this setting takes effect for future virtual service flaps. To advertise current vses that are down, please disable and re-enable the virtual service. Field introduced in 30.2.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	RevokeVipRoute *string `json:"revokeVipRoute,omitempty" tf:"revoke_vip_route,omitempty"`

	// Application-specific saml config. Field introduced in 18.2.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	SAMLSpConfig []SAMLSpConfigInitParameters `json:"samlSpConfig,omitempty" tf:"saml_sp_config,omitempty"`

	// Select or create one or two certificates, ec and/or rsa, that will be presented to ssl/tls terminated connections. It is a reference to an object of type sslkeyandcertificate. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	SSLKeyAndCertificateRefs []*string `json:"sslKeyAndCertificateRefs,omitempty" tf:"ssl_key_and_certificate_refs,omitempty"`

	// Determines the set of ssl versions and ciphers to accept for ssl/tls terminated connections. It is a reference to an object of type sslprofile. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	SSLProfileRef *string `json:"sslProfileRef,omitempty" tf:"ssl_profile_ref,omitempty"`

	// Select ssl profile based on client ip address match. Field introduced in 18.2.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	SSLProfileSelectors []SSLProfileSelectorsInitParameters `json:"sslProfileSelectors,omitempty" tf:"ssl_profile_selectors,omitempty"`

	// Expected number of ssl session cache entries (may be exceeded). Allowed values are 1024-16383. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	SSLSessCacheAvgSize *string `json:"sslSessCacheAvgSize,omitempty" tf:"ssl_sess_cache_avg_size,omitempty"`

	// Disable re-distribution of flows across service engines for a virtual service. Enable if the network itself performs flow hashing with ecmp in environments such as gcp. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ScaleoutEcmp *string `json:"scaleoutEcmp,omitempty" tf:"scaleout_ecmp,omitempty"`

	// The service engine group to use for this virtual service. Moving to a new se group is disruptive to existing connections for this vs. It is a reference to an object of type serviceenginegroup. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	SeGroupRef *string `json:"seGroupRef,omitempty" tf:"se_group_ref,omitempty"`

	// Security policy applied on the traffic of the virtual service. This policy is used to perform security actions such as distributed denial of service (ddos) attack mitigation, etc. It is a reference to an object of type securitypolicy. Field introduced in 18.2.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	SecurityPolicyRef *string `json:"securityPolicyRef,omitempty" tf:"security_policy_ref,omitempty"`

	// Determines the network settings profile for the server side of tcp proxied connections. Leave blank to use the same settings as the client to vs side of the connection. It is a reference to an object of type networkprofile. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	ServerNetworkProfileRef *string `json:"serverNetworkProfileRef,omitempty" tf:"server_network_profile_ref,omitempty"`

	// Metadata pertaining to the service provided by this virtual service. In openshift/kubernetes environments, egress pod info is stored. Any user input to this field will be overwritten by avi vantage. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ServiceMetadata *string `json:"serviceMetadata,omitempty" tf:"service_metadata,omitempty"`

	// Select pool based on destination port. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	ServicePoolSelect []ServicePoolSelectInitParameters `json:"servicePoolSelect,omitempty" tf:"service_pool_select,omitempty"`

	// List of services defined for this virtual service. Maximum of 2048 items allowed. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Services []ServicesInitParameters `json:"services,omitempty" tf:"services,omitempty"`

	// Sideband configuration to be used for this virtualservice.it can be used for sending traffic to sideband vips for external inspection etc. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	SidebandProfile []SidebandProfileInitParameters `json:"sidebandProfile,omitempty" tf:"sideband_profile,omitempty"`

	// Nat'ted floating source ip address(es) for upstream connection to servers. Maximum of 32 items allowed. Allowed in enterprise edition with any value, basic, enterprise with cloud services edition.
	SnatIP []SnatIPInitParameters `json:"snatIp,omitempty" tf:"snat_ip,omitempty"`

	// Ipv6 address for se snat. Field introduced in 30.2.1. Maximum of 32 items allowed. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	SnatIp6Addresses []SnatIp6AddressesInitParameters `json:"snatIp6Addresses,omitempty" tf:"snat_ip6_addresses,omitempty"`

	// Gslb pools used to manage site-persistence functionality. Each site-persistence pool contains the virtualservices in all the other sites, that is auto-generated by the gslb manager. This is a read-only field for the user. It is a reference to an object of type pool. Field introduced in 17.2.2. Allowed in enterprise edition with any value, essentials edition with any value, basic edition with any value, enterprise with cloud services edition.
	SpPoolRefs []*string `json:"spPoolRefs,omitempty" tf:"sp_pool_refs,omitempty"`

	// The sso policy attached to the virtualservice. It is a reference to an object of type ssopolicy. Field introduced in 18.2.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	SsoPolicyRef *string `json:"ssoPolicyRef,omitempty" tf:"sso_policy_ref,omitempty"`

	// List of static dns records applied to this virtual service. These are static entries and no health monitoring is performed against the ip addresses. Maximum of 1000 items allowed. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	StaticDNSRecords []StaticDNSRecordsInitParameters `json:"staticDnsRecords,omitempty" tf:"static_dns_records,omitempty"`

	// It is a reference to an object of type tenant. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// Used for testing se datastore upgrade 2.0 functionality. It is a reference to an object of type testsedatastorelevel1. Field introduced in 18.2.6. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	TestSeDatastoreLevel1Ref *string `json:"testSeDatastoreLevel1Ref,omitempty" tf:"test_se_datastore_level_1_ref,omitempty"`

	// Topology policies applied on the dns traffic of the virtual service based ongslb topology algorithm. Field introduced in 18.2.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	TopologyPolicies []TopologyPoliciesInitParameters `json:"topologyPolicies,omitempty" tf:"topology_policies,omitempty"`

	// Server network or list of servers for cloning traffic. It is a reference to an object of type trafficcloneprofile. Field introduced in 17.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	TrafficCloneProfileRef *string `json:"trafficCloneProfileRef,omitempty" tf:"traffic_clone_profile_ref,omitempty"`

	// Knob to enable the virtual service traffic on its assigned service engines. This setting is effective only when the enabled flag is set to true. Field introduced in 17.2.8. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	TrafficEnabled *string `json:"trafficEnabled,omitempty" tf:"traffic_enabled,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Uuid of the virtualservice. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	// Use bridge ip as vip on each host in mesos deployments. Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic edition(allowed values- false), enterprise with cloud services edition.
	UseBridgeIPAsVip *string `json:"useBridgeIpAsVip,omitempty" tf:"use_bridge_ip_as_vip,omitempty"`

	// Use the virtual ip as the snat ip for health monitoring and sending traffic to the backend servers instead of the service engine interface ip. The caveat of enabling this option is that the virtualservice cannot be configued in an active-active ha mode. Dns based multi vip solution has to be used for ha & non-disruptive upgrade purposes. Field introduced in 17.1.9,17.2.3. Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic, enterprise with cloud services edition.
	UseVipAsSnat *string `json:"useVipAsSnat,omitempty" tf:"use_vip_as_snat,omitempty"`

	// The exact name requested from the client's sni-enabled tls hello domain name field. If this is a match, the parent vs will forward the connection to this child vs. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	VhDomainName []*string `json:"vhDomainName,omitempty" tf:"vh_domain_name,omitempty"`

	// Match criteria to select this child vs. Field introduced in 20.1.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	VhMatches []VhMatchesInitParameters `json:"vhMatches,omitempty" tf:"vh_matches,omitempty"`

	// Specifies the virtual service acting as virtual hosting (sni) parent. It is a reference to an object of type virtualservice. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	VhParentVsRef *string `json:"vhParentVsRef,omitempty" tf:"vh_parent_vs_ref,omitempty"`

	// Specify if the virtual hosting vs is of type sni or enhanced. Enum options - VS_TYPE_VH_SNI, VS_TYPE_VH_ENHANCED. Field introduced in 20.1.3. Allowed in enterprise edition with any value, basic edition(allowed values- vs_type_vh_sni,vs_type_vh_enhanced), enterprise with cloud services edition.
	VhType *string `json:"vhType,omitempty" tf:"vh_type,omitempty"`

	// List of virtual service ips. While creating a 'shared vs',please use vsvip_ref to point to the shared entities. Field introduced in 17.1.1. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Vip []VipInitParameters `json:"vip,omitempty" tf:"vip,omitempty"`

	// Virtual routing context that the virtual service is bound to. This is used to provide the isolation of the set of networks the application is attached to. It is a reference to an object of type vrfcontext. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	VrfContextRef *string `json:"vrfContextRef,omitempty" tf:"vrf_context_ref,omitempty"`

	// Datascripts applied on the data traffic of the virtual service. Allowed in enterprise edition with any value, basic, enterprise with cloud services edition.
	VsDatascripts []VsDatascriptsInitParameters `json:"vsDatascripts,omitempty" tf:"vs_datascripts,omitempty"`

	// Checksum of cloud configuration for vsvip. Internally set by cloud connector. Field introduced in 17.2.9, 18.1.2. Allowed in enterprise edition with any value, essentials edition with any value, basic edition with any value, enterprise with cloud services edition.
	VsvipCloudConfigCksum *string `json:"vsvipCloudConfigCksum,omitempty" tf:"vsvip_cloud_config_cksum,omitempty"`

	// Mostly used during the creation of shared vs, this field refers to entities that can be shared across virtual services. It is a reference to an object of type vsvip. Field introduced in 17.1.1. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	VsvipRef *string `json:"vsvipRef,omitempty" tf:"vsvip_ref,omitempty"`

	// Waf policy for the virtual service. It is a reference to an object of type wafpolicy. Field introduced in 17.2.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	WafPolicyRef *string `json:"wafPolicyRef,omitempty" tf:"waf_policy_ref,omitempty"`

	// The quality of service weight to assign to traffic transmitted from this virtual service. A higher weight will prioritize traffic versus other virtual services sharing the same service engines. Allowed values are 1-128. Allowed in enterprise edition with any value, essentials edition(allowed values- 1), basic edition(allowed values- 1), enterprise with cloud services edition.
	Weight *string `json:"weight,omitempty" tf:"weight,omitempty"`
}

type VirtualServiceMarkersInitParameters struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type VirtualServiceMarkersObservation struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type VirtualServiceMarkersParameters struct {

	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type VirtualServiceObservation struct {

	// This configuration only applies if the virtualservice is in legacy active standby ha mode and load distribution among active standby is enabled. This field is used to tag the virtualservice so that virtualservices with the same tag will share the same active serviceengine. Virtualservices with different tags will have different active serviceengines. If one of the serviceengine's in the serviceenginegroup fails, all virtualservices will end up using the same active serviceengine. Redistribution of the virtualservices can be either manual or automated when the failed serviceengine recovers. Redistribution is based on the auto redistribute property of the serviceenginegroup. Enum options - ACTIVE_STANDBY_SE_1, ACTIVE_STANDBY_SE_2. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ActiveStandbySeTag *string `json:"activeStandbySeTag,omitempty" tf:"active_standby_se_tag,omitempty"`

	// Keep advertising virtual service via bgp even if it is marked down by health monitor. This setting takes effect for future virtual service flaps. To advertise current vses that are down, please disable and re-enable the virtual service. Field introduced in 20.1.1. Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic edition(allowed values- false), enterprise with cloud services edition.
	AdvertiseDownVs *string `json:"advertiseDownVs,omitempty" tf:"advertise_down_vs,omitempty"`

	// Process request even if invalid client certificate is presented. Datascript apis need to be used for processing of such requests. Field introduced in 18.2.3. Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic edition(allowed values- false), enterprise with cloud services edition.
	AllowInvalidClientCert *string `json:"allowInvalidClientCert,omitempty" tf:"allow_invalid_client_cert,omitempty"`

	// Determines analytics settings for the application. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	AnalyticsPolicy []VirtualServiceAnalyticsPolicyObservation `json:"analyticsPolicy,omitempty" tf:"analytics_policy,omitempty"`

	// Specifies settings related to analytics. It is a reference to an object of type analyticsprofile. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	AnalyticsProfileRef *string `json:"analyticsProfileRef,omitempty" tf:"analytics_profile_ref,omitempty"`

	// Enable application layer specific features for the virtual service. It is a reference to an object of type applicationprofile. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition. Special default for essentials edition is system-l4-application.
	ApplicationProfileRef *string `json:"applicationProfileRef,omitempty" tf:"application_profile_ref,omitempty"`

	// (internal-use)applicable for azure only. Azure availability set to which this vs is associated. Internally set by the cloud connector. Field introduced in 17.2.12, 18.1.2. Allowed in enterprise edition with any value, essentials edition with any value, basic edition with any value, enterprise with cloud services edition.
	AzureAvailabilitySet *string `json:"azureAvailabilitySet,omitempty" tf:"azure_availability_set,omitempty"`

	// Local_pref to be used for vsvip advertised. Applicable only over ibgp. Field introduced in 30.2.1. Allowed in enterprise edition with any value, essentials edition with any value, basic edition with any value, enterprise with cloud services edition.
	BGPLocalPreference *string `json:"bgpLocalPreference,omitempty" tf:"bgp_local_preference,omitempty"`

	// Number of times the local as should be prepended additionally to vsvip. Applicable only over ebgp. Allowed values are 1-10. Field introduced in 30.2.1. Allowed in enterprise edition with any value, essentials edition with any value, basic edition with any value, enterprise with cloud services edition.
	BGPNumAsPathPrepend *string `json:"bgpNumAsPathPrepend,omitempty" tf:"bgp_num_as_path_prepend,omitempty"`

	// Select bgp peers, using peer label, for vsvip advertisement. Field introduced in 20.1.5. Maximum of 128 items allowed. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	BGPPeerLabels []*string `json:"bgpPeerLabels,omitempty" tf:"bgp_peer_labels,omitempty"`

	// Bot detection policy for the virtual service. It is a reference to an object of type botdetectionpolicy. Field introduced in 21.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	BotPolicyRef *string `json:"botPolicyRef,omitempty" tf:"bot_policy_ref,omitempty"`

	// (this is a beta feature). Sync key-value cache to the new ses when vs is scaled out. For ex  ssl sessions are stored using vs's key-value cache. When the vs is scaled out, the ssl session information is synced to the new se, allowing existing ssl sessions to be reused on the new se. Field introduced in 17.2.7, 18.1.1. Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic edition(allowed values- false), enterprise with cloud services edition.
	BulkSyncKvcache *string `json:"bulkSyncKvcache,omitempty" tf:"bulk_sync_kvcache,omitempty"`

	// Close client connection on vs config update. Field introduced in 17.2.4. Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic edition(allowed values- false), enterprise with cloud services edition.
	CloseClientConnOnConfigUpdate *string `json:"closeClientConnOnConfigUpdate,omitempty" tf:"close_client_conn_on_config_update,omitempty"`

	// Checksum of cloud configuration for vs. Internally set by cloud connector. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	CloudConfigCksum *string `json:"cloudConfigCksum,omitempty" tf:"cloud_config_cksum,omitempty"`

	// It is a reference to an object of type cloud. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	CloudRef *string `json:"cloudRef,omitempty" tf:"cloud_ref,omitempty"`

	// Enum options - cloud_none, cloud_vcenter, cloud_openstack, cloud_aws, cloud_vca, cloud_apic, cloud_mesos, cloud_linuxserver, cloud_docker_ucp, cloud_rancher, cloud_oshift_k8s, cloud_azure, cloud_gcp, cloud_nsxt. Allowed in enterprise edition with any value, essentials edition(allowed values- cloud_none,cloud_vcenter), basic edition(allowed values- cloud_none,cloud_nsxt), enterprise with cloud services edition.
	CloudType *string `json:"cloudType,omitempty" tf:"cloud_type,omitempty"`

	// Protobuf versioning for config pbs. Field introduced in 21.1.1. Allowed in enterprise edition with any value, essentials edition with any value, basic edition with any value, enterprise with cloud services edition.
	ConfigpbAttributes []VirtualServiceConfigpbAttributesObservation `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	// Rate limit the incoming connections to this virtual service. Allowed in enterprise edition with any value, basic, enterprise with cloud services edition.
	ConnectionsRateLimit []ConnectionsRateLimitObservation `json:"connectionsRateLimit,omitempty" tf:"connections_rate_limit,omitempty"`

	// Profile used to match and rewrite strings in request and/or response body. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	ContentRewrite []ContentRewriteObservation `json:"contentRewrite,omitempty" tf:"content_rewrite,omitempty"`

	// Creator name. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by,omitempty"`

	// Csrf protection policy for the virtual service. It is a reference to an object of type csrfpolicy. Field introduced in 30.2.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	CsrfPolicyRef *string `json:"csrfPolicyRef,omitempty" tf:"csrf_policy_ref,omitempty"`

	// Service discovery specific data including fully qualified domain name, type and time-to-live of the dns record. Note that only one of fqdn and dns_info setting is allowed. Maximum of 1000 items allowed. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	DNSInfo []DNSInfoObservation `json:"dnsInfo,omitempty" tf:"dns_info,omitempty"`

	// Dns policies applied on the dns traffic of the virtual service. Field introduced in 17.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	DNSPolicies []DNSPoliciesObservation `json:"dnsPolicies,omitempty" tf:"dns_policies,omitempty"`

	// Select the algorithm for qos fairness. This determines how multiple virtual services sharing the same service engines will prioritize traffic over a congested network. Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic edition(allowed values- false), enterprise with cloud services edition.
	DelayFairness *string `json:"delayFairness,omitempty" tf:"delay_fairness,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Force placement on all se's in service group (mesos mode only). Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic edition(allowed values- false), enterprise with cloud services edition.
	EastWestPlacement *string `json:"eastWestPlacement,omitempty" tf:"east_west_placement,omitempty"`

	// Response traffic to clients will be sent back to the source mac address of the connection, rather than statically sent to a default gateway. Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic edition(allowed values- false), enterprise with cloud services edition. Special default for essentials edition is false, basic edition is false, enterprise is true.
	EnableAutogw *string `json:"enableAutogw,omitempty" tf:"enable_autogw,omitempty"`

	// Enable route health injection using the bgp config in the vrf context. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	EnableRhi *string `json:"enableRhi,omitempty" tf:"enable_rhi,omitempty"`

	// Enable route health injection for source nat'ted floating ip address using the bgp config in the vrf context. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	EnableRhiSnat *string `json:"enableRhiSnat,omitempty" tf:"enable_rhi_snat,omitempty"`

	// Enable http sessions for this virtual service. If enabled, a session cookie will be added to http responses and persistent key-value store will be activated. Field introduced in 30.2.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	EnableSession *string `json:"enableSession,omitempty" tf:"enable_session,omitempty"`

	// Enable or disable the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Error page profile to be used for this virtualservice.this profile is used to send the custom error page to the client generated by the proxy. It is a reference to an object of type errorpageprofile. Field introduced in 17.2.4. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ErrorPageProfileRef *string `json:"errorPageProfileRef,omitempty" tf:"error_page_profile_ref,omitempty"`

	// Criteria for flow distribution among ses. Enum options - LOAD_AWARE, CONSISTENT_HASH_SOURCE_IP_ADDRESS, CONSISTENT_HASH_SOURCE_IP_ADDRESS_AND_PORT. Allowed in enterprise edition with any value, essentials edition(allowed values- load_aware), basic edition(allowed values- load_aware), enterprise with cloud services edition.
	FlowDist *string `json:"flowDist,omitempty" tf:"flow_dist,omitempty"`

	// Criteria for flow labelling. Enum options - NO_LABEL, APPLICATION_LABEL, SERVICE_LABEL. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	FlowLabelType *string `json:"flowLabelType,omitempty" tf:"flow_label_type,omitempty"`

	// Dns resolvable, fully qualified domain name of the virtualservice. Only one of 'fqdn' and 'dns_info' configuration is allowed. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	Fqdn *string `json:"fqdn,omitempty" tf:"fqdn,omitempty"`

	// Http policies applied on the data traffic of the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	HTTPPolicies []HTTPPoliciesObservation `json:"httpPolicies,omitempty" tf:"http_policies,omitempty"`

	// Translate the host name sent to the servers to this value. Translate the host name sent from servers back to the value used by the client. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	HostNameXlate *string `json:"hostNameXlate,omitempty" tf:"host_name_xlate,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The config settings for the icap server when checking the http request. It is a reference to an object of type icapprofile. Field introduced in 20.1.1. Maximum of 1 items allowed. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	IcapRequestProfileRefs []*string `json:"icapRequestProfileRefs,omitempty" tf:"icap_request_profile_refs,omitempty"`

	// Ignore pool servers network reachability constraints for virtual service placement. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	IgnPoolNetReach *string `json:"ignPoolNetReach,omitempty" tf:"ign_pool_net_reach,omitempty"`

	// Application-specific config for jwt validation. Field introduced in 20.1.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	JwtConfig []JwtConfigObservation `json:"jwtConfig,omitempty" tf:"jwt_config,omitempty"`

	// L4 policies applied to the data traffic of the virtual service. Field introduced in 17.2.7. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	L4Policies []L4PoliciesObservation `json:"l4Policies,omitempty" tf:"l4_policies,omitempty"`

	// Application-specific ldap config. Field introduced in 21.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	LdapVsConfig []LdapVsConfigObservation `json:"ldapVsConfig,omitempty" tf:"ldap_vs_config,omitempty"`

	// Limit potential dos attackers who exceed max_cps_per_client significantly to a fraction of max_cps_per_client for a while. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	LimitDoser *string `json:"limitDoser,omitempty" tf:"limit_doser,omitempty"`

	// List of labels to be used for granular rbac. Field introduced in 20.1.5. Allowed in enterprise edition with any value, essentials edition with any value, basic edition with any value, enterprise with cloud services edition.
	Markers []VirtualServiceMarkersObservation `json:"markers,omitempty" tf:"markers,omitempty"`

	// Maximum connections per second per client ip. Allowed values are 10-1000. Special values are 0- unlimited. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	MaxCpsPerClient *string `json:"maxCpsPerClient,omitempty" tf:"max_cps_per_client,omitempty"`

	// Microservice representing the virtual service. It is a reference to an object of type microservice. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	MicroserviceRef *string `json:"microserviceRef,omitempty" tf:"microservice_ref,omitempty"`

	// Minimum number of up pools to mark vs up. Field introduced in 18.2.1, 17.2.12. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	MinPoolsUp *string `json:"minPoolsUp,omitempty" tf:"min_pools_up,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Determines network settings such as protocol, tcp or udp, and related options for the protocol. It is a reference to an object of type networkprofile. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition. Special default for essentials edition is system-tcp-fast-path.
	NetworkProfileRef *string `json:"networkProfileRef,omitempty" tf:"network_profile_ref,omitempty"`

	// Network security policies for the virtual service. It is a reference to an object of type networksecuritypolicy. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	NetworkSecurityPolicyRef *string `json:"networkSecurityPolicyRef,omitempty" tf:"network_security_policy_ref,omitempty"`

	// A list of nsx groups representing the clients which can access the virtual ip of the virtual service. Field introduced in 17.1.1. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	NsxSecuritygroup []*string `json:"nsxSecuritygroup,omitempty" tf:"nsx_securitygroup,omitempty"`

	// Virtualservice specific oauth config. Field introduced in 21.1.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	OauthVsConfig []OauthVsConfigObservation `json:"oauthVsConfig,omitempty" tf:"oauth_vs_config,omitempty"`

	// Optional settings that determine performance limits like max connections or bandwdith etc. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	PerformanceLimits []PerformanceLimitsObservation `json:"performanceLimits,omitempty" tf:"performance_limits,omitempty"`

	// The pool group is an object that contains pools. It is a reference to an object of type poolgroup. Allowed in enterprise edition with any value, basic, enterprise with cloud services edition.
	PoolGroupRef *string `json:"poolGroupRef,omitempty" tf:"pool_group_ref,omitempty"`

	// The pool is an object that contains destination servers and related attributes such as load-balancing and persistence. It is a reference to an object of type pool. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	PoolRef *string `json:"poolRef,omitempty" tf:"pool_ref,omitempty"`

	// Remove listening port if virtualservice is down. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	RemoveListeningPortOnVsDown *string `json:"removeListeningPortOnVsDown,omitempty" tf:"remove_listening_port_on_vs_down,omitempty"`

	// Rate limit the incoming requests to this virtual service. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	RequestsRateLimit []RequestsRateLimitObservation `json:"requestsRateLimit,omitempty" tf:"requests_rate_limit,omitempty"`

	// Revoke the advertisement of virtual service via the cloud if it is marked down by health monitor. Supported for nsxt clouds only.this setting takes effect for future virtual service flaps. To advertise current vses that are down, please disable and re-enable the virtual service. Field introduced in 30.2.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	RevokeVipRoute *string `json:"revokeVipRoute,omitempty" tf:"revoke_vip_route,omitempty"`

	// Application-specific saml config. Field introduced in 18.2.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	SAMLSpConfig []SAMLSpConfigObservation `json:"samlSpConfig,omitempty" tf:"saml_sp_config,omitempty"`

	// Select or create one or two certificates, ec and/or rsa, that will be presented to ssl/tls terminated connections. It is a reference to an object of type sslkeyandcertificate. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	SSLKeyAndCertificateRefs []*string `json:"sslKeyAndCertificateRefs,omitempty" tf:"ssl_key_and_certificate_refs,omitempty"`

	// Determines the set of ssl versions and ciphers to accept for ssl/tls terminated connections. It is a reference to an object of type sslprofile. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	SSLProfileRef *string `json:"sslProfileRef,omitempty" tf:"ssl_profile_ref,omitempty"`

	// Select ssl profile based on client ip address match. Field introduced in 18.2.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	SSLProfileSelectors []SSLProfileSelectorsObservation `json:"sslProfileSelectors,omitempty" tf:"ssl_profile_selectors,omitempty"`

	// Expected number of ssl session cache entries (may be exceeded). Allowed values are 1024-16383. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	SSLSessCacheAvgSize *string `json:"sslSessCacheAvgSize,omitempty" tf:"ssl_sess_cache_avg_size,omitempty"`

	// Disable re-distribution of flows across service engines for a virtual service. Enable if the network itself performs flow hashing with ecmp in environments such as gcp. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ScaleoutEcmp *string `json:"scaleoutEcmp,omitempty" tf:"scaleout_ecmp,omitempty"`

	// The service engine group to use for this virtual service. Moving to a new se group is disruptive to existing connections for this vs. It is a reference to an object of type serviceenginegroup. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	SeGroupRef *string `json:"seGroupRef,omitempty" tf:"se_group_ref,omitempty"`

	// Security policy applied on the traffic of the virtual service. This policy is used to perform security actions such as distributed denial of service (ddos) attack mitigation, etc. It is a reference to an object of type securitypolicy. Field introduced in 18.2.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	SecurityPolicyRef *string `json:"securityPolicyRef,omitempty" tf:"security_policy_ref,omitempty"`

	// Determines the network settings profile for the server side of tcp proxied connections. Leave blank to use the same settings as the client to vs side of the connection. It is a reference to an object of type networkprofile. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	ServerNetworkProfileRef *string `json:"serverNetworkProfileRef,omitempty" tf:"server_network_profile_ref,omitempty"`

	// Metadata pertaining to the service provided by this virtual service. In openshift/kubernetes environments, egress pod info is stored. Any user input to this field will be overwritten by avi vantage. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	ServiceMetadata *string `json:"serviceMetadata,omitempty" tf:"service_metadata,omitempty"`

	// Select pool based on destination port. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	ServicePoolSelect []ServicePoolSelectObservation `json:"servicePoolSelect,omitempty" tf:"service_pool_select,omitempty"`

	// List of services defined for this virtual service. Maximum of 2048 items allowed. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Services []ServicesObservation `json:"services,omitempty" tf:"services,omitempty"`

	// Sideband configuration to be used for this virtualservice.it can be used for sending traffic to sideband vips for external inspection etc. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	SidebandProfile []SidebandProfileObservation `json:"sidebandProfile,omitempty" tf:"sideband_profile,omitempty"`

	// Nat'ted floating source ip address(es) for upstream connection to servers. Maximum of 32 items allowed. Allowed in enterprise edition with any value, basic, enterprise with cloud services edition.
	SnatIP []SnatIPObservation `json:"snatIp,omitempty" tf:"snat_ip,omitempty"`

	// Ipv6 address for se snat. Field introduced in 30.2.1. Maximum of 32 items allowed. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	SnatIp6Addresses []SnatIp6AddressesObservation `json:"snatIp6Addresses,omitempty" tf:"snat_ip6_addresses,omitempty"`

	// Gslb pools used to manage site-persistence functionality. Each site-persistence pool contains the virtualservices in all the other sites, that is auto-generated by the gslb manager. This is a read-only field for the user. It is a reference to an object of type pool. Field introduced in 17.2.2. Allowed in enterprise edition with any value, essentials edition with any value, basic edition with any value, enterprise with cloud services edition.
	SpPoolRefs []*string `json:"spPoolRefs,omitempty" tf:"sp_pool_refs,omitempty"`

	// The sso policy attached to the virtualservice. It is a reference to an object of type ssopolicy. Field introduced in 18.2.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	SsoPolicyRef *string `json:"ssoPolicyRef,omitempty" tf:"sso_policy_ref,omitempty"`

	// List of static dns records applied to this virtual service. These are static entries and no health monitoring is performed against the ip addresses. Maximum of 1000 items allowed. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	StaticDNSRecords []StaticDNSRecordsObservation `json:"staticDnsRecords,omitempty" tf:"static_dns_records,omitempty"`

	// It is a reference to an object of type tenant. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// Used for testing se datastore upgrade 2.0 functionality. It is a reference to an object of type testsedatastorelevel1. Field introduced in 18.2.6. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	TestSeDatastoreLevel1Ref *string `json:"testSeDatastoreLevel1Ref,omitempty" tf:"test_se_datastore_level_1_ref,omitempty"`

	// Topology policies applied on the dns traffic of the virtual service based ongslb topology algorithm. Field introduced in 18.2.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	TopologyPolicies []TopologyPoliciesObservation `json:"topologyPolicies,omitempty" tf:"topology_policies,omitempty"`

	// Server network or list of servers for cloning traffic. It is a reference to an object of type trafficcloneprofile. Field introduced in 17.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	TrafficCloneProfileRef *string `json:"trafficCloneProfileRef,omitempty" tf:"traffic_clone_profile_ref,omitempty"`

	// Knob to enable the virtual service traffic on its assigned service engines. This setting is effective only when the enabled flag is set to true. Field introduced in 17.2.8. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	TrafficEnabled *string `json:"trafficEnabled,omitempty" tf:"traffic_enabled,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Uuid of the virtualservice. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	// Use bridge ip as vip on each host in mesos deployments. Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic edition(allowed values- false), enterprise with cloud services edition.
	UseBridgeIPAsVip *string `json:"useBridgeIpAsVip,omitempty" tf:"use_bridge_ip_as_vip,omitempty"`

	// Use the virtual ip as the snat ip for health monitoring and sending traffic to the backend servers instead of the service engine interface ip. The caveat of enabling this option is that the virtualservice cannot be configued in an active-active ha mode. Dns based multi vip solution has to be used for ha & non-disruptive upgrade purposes. Field introduced in 17.1.9,17.2.3. Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic, enterprise with cloud services edition.
	UseVipAsSnat *string `json:"useVipAsSnat,omitempty" tf:"use_vip_as_snat,omitempty"`

	// The exact name requested from the client's sni-enabled tls hello domain name field. If this is a match, the parent vs will forward the connection to this child vs. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	VhDomainName []*string `json:"vhDomainName,omitempty" tf:"vh_domain_name,omitempty"`

	// Match criteria to select this child vs. Field introduced in 20.1.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	VhMatches []VhMatchesObservation `json:"vhMatches,omitempty" tf:"vh_matches,omitempty"`

	// Specifies the virtual service acting as virtual hosting (sni) parent. It is a reference to an object of type virtualservice. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	VhParentVsRef *string `json:"vhParentVsRef,omitempty" tf:"vh_parent_vs_ref,omitempty"`

	// Specify if the virtual hosting vs is of type sni or enhanced. Enum options - VS_TYPE_VH_SNI, VS_TYPE_VH_ENHANCED. Field introduced in 20.1.3. Allowed in enterprise edition with any value, basic edition(allowed values- vs_type_vh_sni,vs_type_vh_enhanced), enterprise with cloud services edition.
	VhType *string `json:"vhType,omitempty" tf:"vh_type,omitempty"`

	// List of virtual service ips. While creating a 'shared vs',please use vsvip_ref to point to the shared entities. Field introduced in 17.1.1. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	Vip []VipObservation `json:"vip,omitempty" tf:"vip,omitempty"`

	// Virtual routing context that the virtual service is bound to. This is used to provide the isolation of the set of networks the application is attached to. It is a reference to an object of type vrfcontext. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	VrfContextRef *string `json:"vrfContextRef,omitempty" tf:"vrf_context_ref,omitempty"`

	// Datascripts applied on the data traffic of the virtual service. Allowed in enterprise edition with any value, basic, enterprise with cloud services edition.
	VsDatascripts []VsDatascriptsObservation `json:"vsDatascripts,omitempty" tf:"vs_datascripts,omitempty"`

	// Checksum of cloud configuration for vsvip. Internally set by cloud connector. Field introduced in 17.2.9, 18.1.2. Allowed in enterprise edition with any value, essentials edition with any value, basic edition with any value, enterprise with cloud services edition.
	VsvipCloudConfigCksum *string `json:"vsvipCloudConfigCksum,omitempty" tf:"vsvip_cloud_config_cksum,omitempty"`

	// Mostly used during the creation of shared vs, this field refers to entities that can be shared across virtual services. It is a reference to an object of type vsvip. Field introduced in 17.1.1. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	VsvipRef *string `json:"vsvipRef,omitempty" tf:"vsvip_ref,omitempty"`

	// Waf policy for the virtual service. It is a reference to an object of type wafpolicy. Field introduced in 17.2.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	WafPolicyRef *string `json:"wafPolicyRef,omitempty" tf:"waf_policy_ref,omitempty"`

	// The quality of service weight to assign to traffic transmitted from this virtual service. A higher weight will prioritize traffic versus other virtual services sharing the same service engines. Allowed values are 1-128. Allowed in enterprise edition with any value, essentials edition(allowed values- 1), basic edition(allowed values- 1), enterprise with cloud services edition.
	Weight *string `json:"weight,omitempty" tf:"weight,omitempty"`
}

type VirtualServiceParameters struct {

	// This configuration only applies if the virtualservice is in legacy active standby ha mode and load distribution among active standby is enabled. This field is used to tag the virtualservice so that virtualservices with the same tag will share the same active serviceengine. Virtualservices with different tags will have different active serviceengines. If one of the serviceengine's in the serviceenginegroup fails, all virtualservices will end up using the same active serviceengine. Redistribution of the virtualservices can be either manual or automated when the failed serviceengine recovers. Redistribution is based on the auto redistribute property of the serviceenginegroup. Enum options - ACTIVE_STANDBY_SE_1, ACTIVE_STANDBY_SE_2. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ActiveStandbySeTag *string `json:"activeStandbySeTag,omitempty" tf:"active_standby_se_tag,omitempty"`

	// Keep advertising virtual service via bgp even if it is marked down by health monitor. This setting takes effect for future virtual service flaps. To advertise current vses that are down, please disable and re-enable the virtual service. Field introduced in 20.1.1. Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic edition(allowed values- false), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	AdvertiseDownVs *string `json:"advertiseDownVs,omitempty" tf:"advertise_down_vs,omitempty"`

	// Process request even if invalid client certificate is presented. Datascript apis need to be used for processing of such requests. Field introduced in 18.2.3. Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic edition(allowed values- false), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	AllowInvalidClientCert *string `json:"allowInvalidClientCert,omitempty" tf:"allow_invalid_client_cert,omitempty"`

	// Determines analytics settings for the application. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	AnalyticsPolicy []VirtualServiceAnalyticsPolicyParameters `json:"analyticsPolicy,omitempty" tf:"analytics_policy,omitempty"`

	// Specifies settings related to analytics. It is a reference to an object of type analyticsprofile. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	AnalyticsProfileRef *string `json:"analyticsProfileRef,omitempty" tf:"analytics_profile_ref,omitempty"`

	// Enable application layer specific features for the virtual service. It is a reference to an object of type applicationprofile. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition. Special default for essentials edition is system-l4-application.
	// +kubebuilder:validation:Optional
	ApplicationProfileRef *string `json:"applicationProfileRef,omitempty" tf:"application_profile_ref,omitempty"`

	// (internal-use)applicable for azure only. Azure availability set to which this vs is associated. Internally set by the cloud connector. Field introduced in 17.2.12, 18.1.2. Allowed in enterprise edition with any value, essentials edition with any value, basic edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	AzureAvailabilitySet *string `json:"azureAvailabilitySet,omitempty" tf:"azure_availability_set,omitempty"`

	// Local_pref to be used for vsvip advertised. Applicable only over ibgp. Field introduced in 30.2.1. Allowed in enterprise edition with any value, essentials edition with any value, basic edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	BGPLocalPreference *string `json:"bgpLocalPreference,omitempty" tf:"bgp_local_preference,omitempty"`

	// Number of times the local as should be prepended additionally to vsvip. Applicable only over ebgp. Allowed values are 1-10. Field introduced in 30.2.1. Allowed in enterprise edition with any value, essentials edition with any value, basic edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	BGPNumAsPathPrepend *string `json:"bgpNumAsPathPrepend,omitempty" tf:"bgp_num_as_path_prepend,omitempty"`

	// Select bgp peers, using peer label, for vsvip advertisement. Field introduced in 20.1.5. Maximum of 128 items allowed. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	BGPPeerLabels []*string `json:"bgpPeerLabels,omitempty" tf:"bgp_peer_labels,omitempty"`

	// Bot detection policy for the virtual service. It is a reference to an object of type botdetectionpolicy. Field introduced in 21.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	BotPolicyRef *string `json:"botPolicyRef,omitempty" tf:"bot_policy_ref,omitempty"`

	// (this is a beta feature). Sync key-value cache to the new ses when vs is scaled out. For ex  ssl sessions are stored using vs's key-value cache. When the vs is scaled out, the ssl session information is synced to the new se, allowing existing ssl sessions to be reused on the new se. Field introduced in 17.2.7, 18.1.1. Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic edition(allowed values- false), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	BulkSyncKvcache *string `json:"bulkSyncKvcache,omitempty" tf:"bulk_sync_kvcache,omitempty"`

	// Close client connection on vs config update. Field introduced in 17.2.4. Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic edition(allowed values- false), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	CloseClientConnOnConfigUpdate *string `json:"closeClientConnOnConfigUpdate,omitempty" tf:"close_client_conn_on_config_update,omitempty"`

	// Checksum of cloud configuration for vs. Internally set by cloud connector. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	CloudConfigCksum *string `json:"cloudConfigCksum,omitempty" tf:"cloud_config_cksum,omitempty"`

	// It is a reference to an object of type cloud. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	CloudRef *string `json:"cloudRef,omitempty" tf:"cloud_ref,omitempty"`

	// Enum options - cloud_none, cloud_vcenter, cloud_openstack, cloud_aws, cloud_vca, cloud_apic, cloud_mesos, cloud_linuxserver, cloud_docker_ucp, cloud_rancher, cloud_oshift_k8s, cloud_azure, cloud_gcp, cloud_nsxt. Allowed in enterprise edition with any value, essentials edition(allowed values- cloud_none,cloud_vcenter), basic edition(allowed values- cloud_none,cloud_nsxt), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	CloudType *string `json:"cloudType,omitempty" tf:"cloud_type,omitempty"`

	// Protobuf versioning for config pbs. Field introduced in 21.1.1. Allowed in enterprise edition with any value, essentials edition with any value, basic edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ConfigpbAttributes []VirtualServiceConfigpbAttributesParameters `json:"configpbAttributes,omitempty" tf:"configpb_attributes,omitempty"`

	// Rate limit the incoming connections to this virtual service. Allowed in enterprise edition with any value, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ConnectionsRateLimit []ConnectionsRateLimitParameters `json:"connectionsRateLimit,omitempty" tf:"connections_rate_limit,omitempty"`

	// Profile used to match and rewrite strings in request and/or response body. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ContentRewrite []ContentRewriteParameters `json:"contentRewrite,omitempty" tf:"content_rewrite,omitempty"`

	// Creator name. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by,omitempty"`

	// Csrf protection policy for the virtual service. It is a reference to an object of type csrfpolicy. Field introduced in 30.2.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	CsrfPolicyRef *string `json:"csrfPolicyRef,omitempty" tf:"csrf_policy_ref,omitempty"`

	// Service discovery specific data including fully qualified domain name, type and time-to-live of the dns record. Note that only one of fqdn and dns_info setting is allowed. Maximum of 1000 items allowed. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	DNSInfo []DNSInfoParameters `json:"dnsInfo,omitempty" tf:"dns_info,omitempty"`

	// Dns policies applied on the dns traffic of the virtual service. Field introduced in 17.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	DNSPolicies []DNSPoliciesParameters `json:"dnsPolicies,omitempty" tf:"dns_policies,omitempty"`

	// Select the algorithm for qos fairness. This determines how multiple virtual services sharing the same service engines will prioritize traffic over a congested network. Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic edition(allowed values- false), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	DelayFairness *string `json:"delayFairness,omitempty" tf:"delay_fairness,omitempty"`

	// Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Force placement on all se's in service group (mesos mode only). Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic edition(allowed values- false), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	EastWestPlacement *string `json:"eastWestPlacement,omitempty" tf:"east_west_placement,omitempty"`

	// Response traffic to clients will be sent back to the source mac address of the connection, rather than statically sent to a default gateway. Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic edition(allowed values- false), enterprise with cloud services edition. Special default for essentials edition is false, basic edition is false, enterprise is true.
	// +kubebuilder:validation:Optional
	EnableAutogw *string `json:"enableAutogw,omitempty" tf:"enable_autogw,omitempty"`

	// Enable route health injection using the bgp config in the vrf context. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	EnableRhi *string `json:"enableRhi,omitempty" tf:"enable_rhi,omitempty"`

	// Enable route health injection for source nat'ted floating ip address using the bgp config in the vrf context. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	EnableRhiSnat *string `json:"enableRhiSnat,omitempty" tf:"enable_rhi_snat,omitempty"`

	// Enable http sessions for this virtual service. If enabled, a session cookie will be added to http responses and persistent key-value store will be activated. Field introduced in 30.2.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	EnableSession *string `json:"enableSession,omitempty" tf:"enable_session,omitempty"`

	// Enable or disable the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Enabled *string `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Error page profile to be used for this virtualservice.this profile is used to send the custom error page to the client generated by the proxy. It is a reference to an object of type errorpageprofile. Field introduced in 17.2.4. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ErrorPageProfileRef *string `json:"errorPageProfileRef,omitempty" tf:"error_page_profile_ref,omitempty"`

	// Criteria for flow distribution among ses. Enum options - LOAD_AWARE, CONSISTENT_HASH_SOURCE_IP_ADDRESS, CONSISTENT_HASH_SOURCE_IP_ADDRESS_AND_PORT. Allowed in enterprise edition with any value, essentials edition(allowed values- load_aware), basic edition(allowed values- load_aware), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	FlowDist *string `json:"flowDist,omitempty" tf:"flow_dist,omitempty"`

	// Criteria for flow labelling. Enum options - NO_LABEL, APPLICATION_LABEL, SERVICE_LABEL. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	FlowLabelType *string `json:"flowLabelType,omitempty" tf:"flow_label_type,omitempty"`

	// Dns resolvable, fully qualified domain name of the virtualservice. Only one of 'fqdn' and 'dns_info' configuration is allowed. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Fqdn *string `json:"fqdn,omitempty" tf:"fqdn,omitempty"`

	// Http policies applied on the data traffic of the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	HTTPPolicies []HTTPPoliciesParameters `json:"httpPolicies,omitempty" tf:"http_policies,omitempty"`

	// Translate the host name sent to the servers to this value. Translate the host name sent from servers back to the value used by the client. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	HostNameXlate *string `json:"hostNameXlate,omitempty" tf:"host_name_xlate,omitempty"`

	// The config settings for the icap server when checking the http request. It is a reference to an object of type icapprofile. Field introduced in 20.1.1. Maximum of 1 items allowed. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	IcapRequestProfileRefs []*string `json:"icapRequestProfileRefs,omitempty" tf:"icap_request_profile_refs,omitempty"`

	// Ignore pool servers network reachability constraints for virtual service placement. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	IgnPoolNetReach *string `json:"ignPoolNetReach,omitempty" tf:"ign_pool_net_reach,omitempty"`

	// Application-specific config for jwt validation. Field introduced in 20.1.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	JwtConfig []JwtConfigParameters `json:"jwtConfig,omitempty" tf:"jwt_config,omitempty"`

	// L4 policies applied to the data traffic of the virtual service. Field introduced in 17.2.7. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	L4Policies []L4PoliciesParameters `json:"l4Policies,omitempty" tf:"l4_policies,omitempty"`

	// Application-specific ldap config. Field introduced in 21.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	LdapVsConfig []LdapVsConfigParameters `json:"ldapVsConfig,omitempty" tf:"ldap_vs_config,omitempty"`

	// Limit potential dos attackers who exceed max_cps_per_client significantly to a fraction of max_cps_per_client for a while. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	LimitDoser *string `json:"limitDoser,omitempty" tf:"limit_doser,omitempty"`

	// List of labels to be used for granular rbac. Field introduced in 20.1.5. Allowed in enterprise edition with any value, essentials edition with any value, basic edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Markers []VirtualServiceMarkersParameters `json:"markers,omitempty" tf:"markers,omitempty"`

	// Maximum connections per second per client ip. Allowed values are 10-1000. Special values are 0- unlimited. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	MaxCpsPerClient *string `json:"maxCpsPerClient,omitempty" tf:"max_cps_per_client,omitempty"`

	// Microservice representing the virtual service. It is a reference to an object of type microservice. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	MicroserviceRef *string `json:"microserviceRef,omitempty" tf:"microservice_ref,omitempty"`

	// Minimum number of up pools to mark vs up. Field introduced in 18.2.1, 17.2.12. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	MinPoolsUp *string `json:"minPoolsUp,omitempty" tf:"min_pools_up,omitempty"`

	// Name for the virtual service. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Determines network settings such as protocol, tcp or udp, and related options for the protocol. It is a reference to an object of type networkprofile. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition. Special default for essentials edition is system-tcp-fast-path.
	// +kubebuilder:validation:Optional
	NetworkProfileRef *string `json:"networkProfileRef,omitempty" tf:"network_profile_ref,omitempty"`

	// Network security policies for the virtual service. It is a reference to an object of type networksecuritypolicy. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	NetworkSecurityPolicyRef *string `json:"networkSecurityPolicyRef,omitempty" tf:"network_security_policy_ref,omitempty"`

	// A list of nsx groups representing the clients which can access the virtual ip of the virtual service. Field introduced in 17.1.1. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	NsxSecuritygroup []*string `json:"nsxSecuritygroup,omitempty" tf:"nsx_securitygroup,omitempty"`

	// Virtualservice specific oauth config. Field introduced in 21.1.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	OauthVsConfig []OauthVsConfigParameters `json:"oauthVsConfig,omitempty" tf:"oauth_vs_config,omitempty"`

	// Optional settings that determine performance limits like max connections or bandwdith etc. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	PerformanceLimits []PerformanceLimitsParameters `json:"performanceLimits,omitempty" tf:"performance_limits,omitempty"`

	// The pool group is an object that contains pools. It is a reference to an object of type poolgroup. Allowed in enterprise edition with any value, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	PoolGroupRef *string `json:"poolGroupRef,omitempty" tf:"pool_group_ref,omitempty"`

	// The pool is an object that contains destination servers and related attributes such as load-balancing and persistence. It is a reference to an object of type pool. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	PoolRef *string `json:"poolRef,omitempty" tf:"pool_ref,omitempty"`

	// Remove listening port if virtualservice is down. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	RemoveListeningPortOnVsDown *string `json:"removeListeningPortOnVsDown,omitempty" tf:"remove_listening_port_on_vs_down,omitempty"`

	// Rate limit the incoming requests to this virtual service. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	RequestsRateLimit []RequestsRateLimitParameters `json:"requestsRateLimit,omitempty" tf:"requests_rate_limit,omitempty"`

	// Revoke the advertisement of virtual service via the cloud if it is marked down by health monitor. Supported for nsxt clouds only.this setting takes effect for future virtual service flaps. To advertise current vses that are down, please disable and re-enable the virtual service. Field introduced in 30.2.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	RevokeVipRoute *string `json:"revokeVipRoute,omitempty" tf:"revoke_vip_route,omitempty"`

	// Application-specific saml config. Field introduced in 18.2.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	SAMLSpConfig []SAMLSpConfigParameters `json:"samlSpConfig,omitempty" tf:"saml_sp_config,omitempty"`

	// Select or create one or two certificates, ec and/or rsa, that will be presented to ssl/tls terminated connections. It is a reference to an object of type sslkeyandcertificate. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	SSLKeyAndCertificateRefs []*string `json:"sslKeyAndCertificateRefs,omitempty" tf:"ssl_key_and_certificate_refs,omitempty"`

	// Determines the set of ssl versions and ciphers to accept for ssl/tls terminated connections. It is a reference to an object of type sslprofile. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	SSLProfileRef *string `json:"sslProfileRef,omitempty" tf:"ssl_profile_ref,omitempty"`

	// Select ssl profile based on client ip address match. Field introduced in 18.2.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	SSLProfileSelectors []SSLProfileSelectorsParameters `json:"sslProfileSelectors,omitempty" tf:"ssl_profile_selectors,omitempty"`

	// Expected number of ssl session cache entries (may be exceeded). Allowed values are 1024-16383. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	SSLSessCacheAvgSize *string `json:"sslSessCacheAvgSize,omitempty" tf:"ssl_sess_cache_avg_size,omitempty"`

	// Disable re-distribution of flows across service engines for a virtual service. Enable if the network itself performs flow hashing with ecmp in environments such as gcp. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ScaleoutEcmp *string `json:"scaleoutEcmp,omitempty" tf:"scaleout_ecmp,omitempty"`

	// The service engine group to use for this virtual service. Moving to a new se group is disruptive to existing connections for this vs. It is a reference to an object of type serviceenginegroup. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	SeGroupRef *string `json:"seGroupRef,omitempty" tf:"se_group_ref,omitempty"`

	// Security policy applied on the traffic of the virtual service. This policy is used to perform security actions such as distributed denial of service (ddos) attack mitigation, etc. It is a reference to an object of type securitypolicy. Field introduced in 18.2.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	SecurityPolicyRef *string `json:"securityPolicyRef,omitempty" tf:"security_policy_ref,omitempty"`

	// Determines the network settings profile for the server side of tcp proxied connections. Leave blank to use the same settings as the client to vs side of the connection. It is a reference to an object of type networkprofile. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ServerNetworkProfileRef *string `json:"serverNetworkProfileRef,omitempty" tf:"server_network_profile_ref,omitempty"`

	// Metadata pertaining to the service provided by this virtual service. In openshift/kubernetes environments, egress pod info is stored. Any user input to this field will be overwritten by avi vantage. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ServiceMetadata *string `json:"serviceMetadata,omitempty" tf:"service_metadata,omitempty"`

	// Select pool based on destination port. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	ServicePoolSelect []ServicePoolSelectParameters `json:"servicePoolSelect,omitempty" tf:"service_pool_select,omitempty"`

	// List of services defined for this virtual service. Maximum of 2048 items allowed. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Services []ServicesParameters `json:"services,omitempty" tf:"services,omitempty"`

	// Sideband configuration to be used for this virtualservice.it can be used for sending traffic to sideband vips for external inspection etc. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	SidebandProfile []SidebandProfileParameters `json:"sidebandProfile,omitempty" tf:"sideband_profile,omitempty"`

	// Nat'ted floating source ip address(es) for upstream connection to servers. Maximum of 32 items allowed. Allowed in enterprise edition with any value, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	SnatIP []SnatIPParameters `json:"snatIp,omitempty" tf:"snat_ip,omitempty"`

	// Ipv6 address for se snat. Field introduced in 30.2.1. Maximum of 32 items allowed. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	SnatIp6Addresses []SnatIp6AddressesParameters `json:"snatIp6Addresses,omitempty" tf:"snat_ip6_addresses,omitempty"`

	// Gslb pools used to manage site-persistence functionality. Each site-persistence pool contains the virtualservices in all the other sites, that is auto-generated by the gslb manager. This is a read-only field for the user. It is a reference to an object of type pool. Field introduced in 17.2.2. Allowed in enterprise edition with any value, essentials edition with any value, basic edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	SpPoolRefs []*string `json:"spPoolRefs,omitempty" tf:"sp_pool_refs,omitempty"`

	// The sso policy attached to the virtualservice. It is a reference to an object of type ssopolicy. Field introduced in 18.2.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	SsoPolicyRef *string `json:"ssoPolicyRef,omitempty" tf:"sso_policy_ref,omitempty"`

	// List of static dns records applied to this virtual service. These are static entries and no health monitoring is performed against the ip addresses. Maximum of 1000 items allowed. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	StaticDNSRecords []StaticDNSRecordsParameters `json:"staticDnsRecords,omitempty" tf:"static_dns_records,omitempty"`

	// It is a reference to an object of type tenant. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	TenantRef *string `json:"tenantRef,omitempty" tf:"tenant_ref,omitempty"`

	// Used for testing se datastore upgrade 2.0 functionality. It is a reference to an object of type testsedatastorelevel1. Field introduced in 18.2.6. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	TestSeDatastoreLevel1Ref *string `json:"testSeDatastoreLevel1Ref,omitempty" tf:"test_se_datastore_level_1_ref,omitempty"`

	// Topology policies applied on the dns traffic of the virtual service based ongslb topology algorithm. Field introduced in 18.2.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	TopologyPolicies []TopologyPoliciesParameters `json:"topologyPolicies,omitempty" tf:"topology_policies,omitempty"`

	// Server network or list of servers for cloning traffic. It is a reference to an object of type trafficcloneprofile. Field introduced in 17.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	TrafficCloneProfileRef *string `json:"trafficCloneProfileRef,omitempty" tf:"traffic_clone_profile_ref,omitempty"`

	// Knob to enable the virtual service traffic on its assigned service engines. This setting is effective only when the enabled flag is set to true. Field introduced in 17.2.8. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	TrafficEnabled *string `json:"trafficEnabled,omitempty" tf:"traffic_enabled,omitempty"`

	// Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service. Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD. Allowed in enterprise edition with any value, essentials edition(allowed values- vs_type_normal), basic edition(allowed values- vs_type_normal,vs_type_vh_parent), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Uuid of the virtualservice. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	// Use bridge ip as vip on each host in mesos deployments. Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic edition(allowed values- false), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	UseBridgeIPAsVip *string `json:"useBridgeIpAsVip,omitempty" tf:"use_bridge_ip_as_vip,omitempty"`

	// Use the virtual ip as the snat ip for health monitoring and sending traffic to the backend servers instead of the service engine interface ip. The caveat of enabling this option is that the virtualservice cannot be configued in an active-active ha mode. Dns based multi vip solution has to be used for ha & non-disruptive upgrade purposes. Field introduced in 17.1.9,17.2.3. Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	UseVipAsSnat *string `json:"useVipAsSnat,omitempty" tf:"use_vip_as_snat,omitempty"`

	// The exact name requested from the client's sni-enabled tls hello domain name field. If this is a match, the parent vs will forward the connection to this child vs. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	VhDomainName []*string `json:"vhDomainName,omitempty" tf:"vh_domain_name,omitempty"`

	// Match criteria to select this child vs. Field introduced in 20.1.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	VhMatches []VhMatchesParameters `json:"vhMatches,omitempty" tf:"vh_matches,omitempty"`

	// Specifies the virtual service acting as virtual hosting (sni) parent. It is a reference to an object of type virtualservice. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	VhParentVsRef *string `json:"vhParentVsRef,omitempty" tf:"vh_parent_vs_ref,omitempty"`

	// Specify if the virtual hosting vs is of type sni or enhanced. Enum options - VS_TYPE_VH_SNI, VS_TYPE_VH_ENHANCED. Field introduced in 20.1.3. Allowed in enterprise edition with any value, basic edition(allowed values- vs_type_vh_sni,vs_type_vh_enhanced), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	VhType *string `json:"vhType,omitempty" tf:"vh_type,omitempty"`

	// List of virtual service ips. While creating a 'shared vs',please use vsvip_ref to point to the shared entities. Field introduced in 17.1.1. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Vip []VipParameters `json:"vip,omitempty" tf:"vip,omitempty"`

	// Virtual routing context that the virtual service is bound to. This is used to provide the isolation of the set of networks the application is attached to. It is a reference to an object of type vrfcontext. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	VrfContextRef *string `json:"vrfContextRef,omitempty" tf:"vrf_context_ref,omitempty"`

	// Datascripts applied on the data traffic of the virtual service. Allowed in enterprise edition with any value, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	VsDatascripts []VsDatascriptsParameters `json:"vsDatascripts,omitempty" tf:"vs_datascripts,omitempty"`

	// Checksum of cloud configuration for vsvip. Internally set by cloud connector. Field introduced in 17.2.9, 18.1.2. Allowed in enterprise edition with any value, essentials edition with any value, basic edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	VsvipCloudConfigCksum *string `json:"vsvipCloudConfigCksum,omitempty" tf:"vsvip_cloud_config_cksum,omitempty"`

	// Mostly used during the creation of shared vs, this field refers to entities that can be shared across virtual services. It is a reference to an object of type vsvip. Field introduced in 17.1.1. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	VsvipRef *string `json:"vsvipRef,omitempty" tf:"vsvip_ref,omitempty"`

	// Waf policy for the virtual service. It is a reference to an object of type wafpolicy. Field introduced in 17.2.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	WafPolicyRef *string `json:"wafPolicyRef,omitempty" tf:"waf_policy_ref,omitempty"`

	// The quality of service weight to assign to traffic transmitted from this virtual service. A higher weight will prioritize traffic versus other virtual services sharing the same service engines. Allowed values are 1-128. Allowed in enterprise edition with any value, essentials edition(allowed values- 1), basic edition(allowed values- 1), enterprise with cloud services edition.
	// +kubebuilder:validation:Optional
	Weight *string `json:"weight,omitempty" tf:"weight,omitempty"`
}

type VsDatascriptsInitParameters struct {
	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	VsDatascriptSetRef *string `json:"vsDatascriptSetRef,omitempty" tf:"vs_datascript_set_ref,omitempty"`
}

type VsDatascriptsObservation struct {
	Index *string `json:"index,omitempty" tf:"index,omitempty"`

	VsDatascriptSetRef *string `json:"vsDatascriptSetRef,omitempty" tf:"vs_datascript_set_ref,omitempty"`
}

type VsDatascriptsParameters struct {

	// +kubebuilder:validation:Optional
	Index *string `json:"index" tf:"index,omitempty"`

	// +kubebuilder:validation:Optional
	VsDatascriptSetRef *string `json:"vsDatascriptSetRef" tf:"vs_datascript_set_ref,omitempty"`
}

type VsPortInitParameters struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Ports []*int64 `json:"ports,omitempty" tf:"ports,omitempty"`
}

type VsPortObservation struct {
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	Ports []*int64 `json:"ports,omitempty" tf:"ports,omitempty"`
}

type VsPortParameters struct {

	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria" tf:"match_criteria,omitempty"`

	// +kubebuilder:validation:Optional
	Ports []*int64 `json:"ports" tf:"ports,omitempty"`
}

// VirtualServiceSpec defines the desired state of VirtualService
type VirtualServiceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     VirtualServiceParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider VirtualServiceInitParameters `json:"initProvider,omitempty"`
}

// VirtualServiceStatus defines the observed state of VirtualService.
type VirtualServiceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        VirtualServiceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// VirtualService is the Schema for the VirtualServices API. Creates and manages Avi VirtualService.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,avi}
type VirtualService struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   VirtualServiceSpec   `json:"spec"`
	Status VirtualServiceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// VirtualServiceList contains a list of VirtualServices
type VirtualServiceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VirtualService `json:"items"`
}

// Repository type metadata.
var (
	VirtualService_Kind             = "VirtualService"
	VirtualService_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: VirtualService_Kind}.String()
	VirtualService_KindAPIVersion   = VirtualService_Kind + "." + CRDGroupVersion.String()
	VirtualService_GroupVersionKind = CRDGroupVersion.WithKind(VirtualService_Kind)
)

func init() {
	SchemeBuilder.Register(&VirtualService{}, &VirtualServiceList{})
}
